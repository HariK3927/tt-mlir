// REQUIRES: opmodel, regression
// RUN: ttmlir-opt --ttir-to-ttnn-backend-pipeline="system-desc-path=%system_desc_path% enable-optimizer=true memory-layout-analysis-enabled=false enable-fusing-pass=true" -o yolo_v10_ttnn.mlir %s
// RUN: ttmlir-translate --ttnn-to-flatbuffer yolo_v10_ttnn.mlir > %t.ttnn
#loc = loc("YOLOv10":0:0)
module @YOLOv10 {
  func.func @forward(%arg0: tensor<1x3x640x640xbf16> {ttcore.argument_type = #ttcore.argument_type<input>, ttir.name = "input_1"} loc("YOLOv10":0:0), %arg1: tensor<1x2x8400xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_add_2848"} loc("YOLOv10":0:0), %arg2: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_3"} loc("YOLOv10":0:0), %arg3: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_3_fork_clone3611"} loc("YOLOv10":0:0), %arg4: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_19"} loc("YOLOv10":0:0), %arg5: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_19_fork_clone3277"} loc("YOLOv10":0:0), %arg6: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_35"} loc("YOLOv10":0:0), %arg7: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_35_fork_clone2921"} loc("YOLOv10":0:0), %arg8: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_53"} loc("YOLOv10":0:0), %arg9: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_53_fork_clone3282"} loc("YOLOv10":0:0), %arg10: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_69"} loc("YOLOv10":0:0), %arg11: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_69_fork_clone2926"} loc("YOLOv10":0:0), %arg12: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_86"} loc("YOLOv10":0:0), %arg13: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_86_fork_clone3287"} loc("YOLOv10":0:0), %arg14: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_102"} loc("YOLOv10":0:0), %arg15: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_102_fork_clone2931"} loc("YOLOv10":0:0), %arg16: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_119"} loc("YOLOv10":0:0), %arg17: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_119_fork_clone3292"} loc("YOLOv10":0:0), %arg18: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_135"} loc("YOLOv10":0:0), %arg19: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_135_fork_clone2936"} loc("YOLOv10":0:0), %arg20: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_153"} loc("YOLOv10":0:0), %arg21: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_153_fork_clone2459"} loc("YOLOv10":0:0), %arg22: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_169"} loc("YOLOv10":0:0), %arg23: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_169_fork_clone2075"} loc("YOLOv10":0:0), %arg24: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_185"} loc("YOLOv10":0:0), %arg25: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_185_fork_clone1621"} loc("YOLOv10":0:0), %arg26: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_203"} loc("YOLOv10":0:0), %arg27: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_203_fork_clone2080"} loc("YOLOv10":0:0), %arg28: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_219"} loc("YOLOv10":0:0), %arg29: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_219_fork_clone1626"} loc("YOLOv10":0:0), %arg30: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_236"} loc("YOLOv10":0:0), %arg31: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_236_fork_clone2085"} loc("YOLOv10":0:0), %arg32: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_252"} loc("YOLOv10":0:0), %arg33: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_252_fork_clone1631"} loc("YOLOv10":0:0), %arg34: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_269"} loc("YOLOv10":0:0), %arg35: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_269_fork_clone2090"} loc("YOLOv10":0:0), %arg36: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_285"} loc("YOLOv10":0:0), %arg37: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_285_fork_clone1636"} loc("YOLOv10":0:0), %arg38: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_302"} loc("YOLOv10":0:0), %arg39: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_302_fork_clone2095"} loc("YOLOv10":0:0), %arg40: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_318"} loc("YOLOv10":0:0), %arg41: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_318_fork_clone1641"} loc("YOLOv10":0:0), %arg42: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_335"} loc("YOLOv10":0:0), %arg43: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_335_fork_clone2100"} loc("YOLOv10":0:0), %arg44: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_351"} loc("YOLOv10":0:0), %arg45: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_351_fork_clone1646"} loc("YOLOv10":0:0), %arg46: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_368"} loc("YOLOv10":0:0), %arg47: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_368_fork_clone2105"} loc("YOLOv10":0:0), %arg48: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_384"} loc("YOLOv10":0:0), %arg49: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_384_fork_clone1651"} loc("YOLOv10":0:0), %arg50: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_402"} loc("YOLOv10":0:0), %arg51: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_402_fork_clone1118"} loc("YOLOv10":0:0), %arg52: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_418"} loc("YOLOv10":0:0), %arg53: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_418_fork_clone3297"} loc("YOLOv10":0:0), %arg54: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_435"} loc("YOLOv10":0:0), %arg55: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_435_fork_clone2942"} loc("YOLOv10":0:0), %arg56: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_449"} loc("YOLOv10":0:0), %arg57: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_449_fork_clone2683"} loc("YOLOv10":0:0), %arg58: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_468"} loc("YOLOv10":0:0), %arg59: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_468_fork_clone3920"} loc("YOLOv10":0:0), %arg60: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_484"} loc("YOLOv10":0:0), %arg61: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_484_fork_clone3681"} loc("YOLOv10":0:0), %arg62: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_501"} loc("YOLOv10":0:0), %arg63: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_501_fork_clone3380"} loc("YOLOv10":0:0), %arg64: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_517"} loc("YOLOv10":0:0), %arg65: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_517_fork_clone3033"} loc("YOLOv10":0:0), %arg66: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_534"} loc("YOLOv10":0:0), %arg67: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_534_fork_clone2689"} loc("YOLOv10":0:0), %arg68: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_552"} loc("YOLOv10":0:0), %arg69: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_552_fork_clone3926"} loc("YOLOv10":0:0), %arg70: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_568"} loc("YOLOv10":0:0), %arg71: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_568_fork_clone3688"} loc("YOLOv10":0:0), %arg72: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_585"} loc("YOLOv10":0:0), %arg73: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_585_fork_clone3388"} loc("YOLOv10":0:0), %arg74: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_601"} loc("YOLOv10":0:0), %arg75: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_601_fork_clone3040"} loc("YOLOv10":0:0), %arg76: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_618"} loc("YOLOv10":0:0), %arg77: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_618_fork_clone2695"} loc("YOLOv10":0:0), %arg78: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_636"} loc("YOLOv10":0:0), %arg79: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_636_fork_clone3932"} loc("YOLOv10":0:0), %arg80: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_652"} loc("YOLOv10":0:0), %arg81: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_652_fork_clone3695"} loc("YOLOv10":0:0), %arg82: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_669"} loc("YOLOv10":0:0), %arg83: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_669_fork_clone3396"} loc("YOLOv10":0:0), %arg84: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_685"} loc("YOLOv10":0:0), %arg85: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_685_fork_clone3047"} loc("YOLOv10":0:0), %arg86: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_702"} loc("YOLOv10":0:0), %arg87: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_702_fork_clone2701"} loc("YOLOv10":0:0), %arg88: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_720"} loc("YOLOv10":0:0), %arg89: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_720_fork_clone3938"} loc("YOLOv10":0:0), %arg90: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_736"} loc("YOLOv10":0:0), %arg91: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_736_fork_clone3702"} loc("YOLOv10":0:0), %arg92: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_753"} loc("YOLOv10":0:0), %arg93: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_753_fork_clone3404"} loc("YOLOv10":0:0), %arg94: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_769"} loc("YOLOv10":0:0), %arg95: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_769_fork_clone3054"} loc("YOLOv10":0:0), %arg96: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_786"} loc("YOLOv10":0:0), %arg97: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_786_fork_clone2707"} loc("YOLOv10":0:0), %arg98: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_804"} loc("YOLOv10":0:0), %arg99: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_804_fork_clone3944"} loc("YOLOv10":0:0), %arg100: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_820"} loc("YOLOv10":0:0), %arg101: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_820_fork_clone3709"} loc("YOLOv10":0:0), %arg102: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_837"} loc("YOLOv10":0:0), %arg103: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_837_fork_clone3412"} loc("YOLOv10":0:0), %arg104: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_853"} loc("YOLOv10":0:0), %arg105: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_853_fork_clone3061"} loc("YOLOv10":0:0), %arg106: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_870"} loc("YOLOv10":0:0), %arg107: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_870_fork_clone2713"} loc("YOLOv10":0:0), %arg108: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_888"} loc("YOLOv10":0:0), %arg109: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_888_fork_clone3950"} loc("YOLOv10":0:0), %arg110: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_904"} loc("YOLOv10":0:0), %arg111: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_904_fork_clone3716"} loc("YOLOv10":0:0), %arg112: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_921"} loc("YOLOv10":0:0), %arg113: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_921_fork_clone3420"} loc("YOLOv10":0:0), %arg114: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_937"} loc("YOLOv10":0:0), %arg115: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_937_fork_clone3068"} loc("YOLOv10":0:0), %arg116: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_954"} loc("YOLOv10":0:0), %arg117: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_954_fork_clone2719"} loc("YOLOv10":0:0), %arg118: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_972"} loc("YOLOv10":0:0), %arg119: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_972_fork_clone2212"} loc("YOLOv10":0:0), %arg120: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_988"} loc("YOLOv10":0:0), %arg121: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_988_fork_clone3899"} loc("YOLOv10":0:0), %arg122: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1005"} loc("YOLOv10":0:0), %arg123: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1005_fork_clone3657"} loc("YOLOv10":0:0), %arg124: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1019"} loc("YOLOv10":0:0), %arg125: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1019_fork_clone3430"} loc("YOLOv10":0:0), %arg126: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1038"} loc("YOLOv10":0:0), %arg127: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1038_fork_clone4170"} loc("YOLOv10":0:0), %arg128: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1054"} loc("YOLOv10":0:0), %arg129: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1054_fork_clone4102"} loc("YOLOv10":0:0), %arg130: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1071"} loc("YOLOv10":0:0), %arg131: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1071_fork_clone3961"} loc("YOLOv10":0:0), %arg132: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1087"} loc("YOLOv10":0:0), %arg133: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1087_fork_clone3730"} loc("YOLOv10":0:0), %arg134: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1104"} loc("YOLOv10":0:0), %arg135: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1104_fork_clone3436"} loc("YOLOv10":0:0), %arg136: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1122"} loc("YOLOv10":0:0), %arg137: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1122_fork_clone4176"} loc("YOLOv10":0:0), %arg138: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1138"} loc("YOLOv10":0:0), %arg139: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1138_fork_clone4109"} loc("YOLOv10":0:0), %arg140: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1155"} loc("YOLOv10":0:0), %arg141: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1155_fork_clone3969"} loc("YOLOv10":0:0), %arg142: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1171"} loc("YOLOv10":0:0), %arg143: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1171_fork_clone3737"} loc("YOLOv10":0:0), %arg144: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1188"} loc("YOLOv10":0:0), %arg145: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1188_fork_clone3442"} loc("YOLOv10":0:0), %arg146: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1206"} loc("YOLOv10":0:0), %arg147: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1206_fork_clone4182"} loc("YOLOv10":0:0), %arg148: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1222"} loc("YOLOv10":0:0), %arg149: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1222_fork_clone4116"} loc("YOLOv10":0:0), %arg150: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1239"} loc("YOLOv10":0:0), %arg151: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1239_fork_clone3977"} loc("YOLOv10":0:0), %arg152: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1255"} loc("YOLOv10":0:0), %arg153: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1255_fork_clone3744"} loc("YOLOv10":0:0), %arg154: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1272"} loc("YOLOv10":0:0), %arg155: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1272_fork_clone3448"} loc("YOLOv10":0:0), %arg156: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1290"} loc("YOLOv10":0:0), %arg157: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1290_fork_clone2912"} loc("YOLOv10":0:0), %arg158: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1306"} loc("YOLOv10":0:0), %arg159: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1306_fork_clone2587"} loc("YOLOv10":0:0), %arg160: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1326"} loc("YOLOv10":0:0), %arg161: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1326_fork_clone2153"} loc("YOLOv10":0:0), %arg162: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1342"} loc("YOLOv10":0:0), %arg163: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1342_fork_clone1695"} loc("YOLOv10":0:0), %arg164: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1360"} loc("YOLOv10":0:0), %arg165: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1360_fork_clone2590"} loc("YOLOv10":0:0), %arg166: tensor<1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_1_multiply_1383"} loc("YOLOv10":0:0), %arg167: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1394"} loc("YOLOv10":0:0), %arg168: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1394_fork_clone2161"} loc("YOLOv10":0:0), %arg169: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1409"} loc("YOLOv10":0:0), %arg170: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1409_fork_clone1700"} loc("YOLOv10":0:0), %arg171: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1424"} loc("YOLOv10":0:0), %arg172: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1424_fork_clone2047"} loc("YOLOv10":0:0), %arg173: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1440"} loc("YOLOv10":0:0), %arg174: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1440_fork_clone1595"} loc("YOLOv10":0:0), %arg175: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1456"} loc("YOLOv10":0:0), %arg176: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1456_fork_clone1166"} loc("YOLOv10":0:0), %arg177: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1474"} loc("YOLOv10":0:0), %arg178: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1474_fork_clone1656"} loc("YOLOv10":0:0), %arg179: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1493"} loc("YOLOv10":0:0), %arg180: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1493_fork_clone3163"} loc("YOLOv10":0:0), %arg181: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1509"} loc("YOLOv10":0:0), %arg182: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1509_fork_clone2801"} loc("YOLOv10":0:0), %arg183: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1526"} loc("YOLOv10":0:0), %arg184: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1526_fork_clone2494"} loc("YOLOv10":0:0), %arg185: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1542"} loc("YOLOv10":0:0), %arg186: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1542_fork_clone2118"} loc("YOLOv10":0:0), %arg187: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1559"} loc("YOLOv10":0:0), %arg188: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1559_fork_clone1662"} loc("YOLOv10":0:0), %arg189: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1577"} loc("YOLOv10":0:0), %arg190: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1577_fork_clone3169"} loc("YOLOv10":0:0), %arg191: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1593"} loc("YOLOv10":0:0), %arg192: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1593_fork_clone2808"} loc("YOLOv10":0:0), %arg193: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1610"} loc("YOLOv10":0:0), %arg194: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1610_fork_clone2502"} loc("YOLOv10":0:0), %arg195: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1626"} loc("YOLOv10":0:0), %arg196: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1626_fork_clone2125"} loc("YOLOv10":0:0), %arg197: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1643"} loc("YOLOv10":0:0), %arg198: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1643_fork_clone1668"} loc("YOLOv10":0:0), %arg199: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1661"} loc("YOLOv10":0:0), %arg200: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1661_fork_clone3175"} loc("YOLOv10":0:0), %arg201: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1677"} loc("YOLOv10":0:0), %arg202: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1677_fork_clone2815"} loc("YOLOv10":0:0), %arg203: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1694"} loc("YOLOv10":0:0), %arg204: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1694_fork_clone2510"} loc("YOLOv10":0:0), %arg205: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1710"} loc("YOLOv10":0:0), %arg206: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1710_fork_clone2132"} loc("YOLOv10":0:0), %arg207: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1727"} loc("YOLOv10":0:0), %arg208: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1727_fork_clone1674"} loc("YOLOv10":0:0), %arg209: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1745"} loc("YOLOv10":0:0), %arg210: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1745_fork_clone1141"} loc("YOLOv10":0:0), %arg211: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1763"} loc("YOLOv10":0:0), %arg212: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1763_fork_clone736"} loc("YOLOv10":0:0), %arg213: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1781"} loc("YOLOv10":0:0), %arg214: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1781_fork_clone972"} loc("YOLOv10":0:0), %arg215: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1797"} loc("YOLOv10":0:0), %arg216: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1797_fork_clone680"} loc("YOLOv10":0:0), %arg217: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1813"} loc("YOLOv10":0:0), %arg218: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1813_fork_clone977"} loc("YOLOv10":0:0), %arg219: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1829"} loc("YOLOv10":0:0), %arg220: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1829_fork_clone685"} loc("YOLOv10":0:0), %arg221: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1845"} loc("YOLOv10":0:0), %arg222: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1845_fork_clone982"} loc("YOLOv10":0:0), %arg223: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1861"} loc("YOLOv10":0:0), %arg224: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1861_fork_clone690"} loc("YOLOv10":0:0), %arg225: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1878"} loc("YOLOv10":0:0), %arg226: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1878_fork_clone427"} loc("YOLOv10":0:0), %arg227: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1894"} loc("YOLOv10":0:0), %arg228: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1894_fork_clone277"} loc("YOLOv10":0:0), %arg229: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1910"} loc("YOLOv10":0:0), %arg230: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1910_fork_clone142"} loc("YOLOv10":0:0), %arg231: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1931"} loc("YOLOv10":0:0), %arg232: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1931_fork_clone629"} loc("YOLOv10":0:0), %arg233: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1947"} loc("YOLOv10":0:0), %arg234: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1947_fork_clone434"} loc("YOLOv10":0:0), %arg235: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1964"} loc("YOLOv10":0:0), %arg236: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1964_fork_clone285"} loc("YOLOv10":0:0), %arg237: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1980"} loc("YOLOv10":0:0), %arg238: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1980_fork_clone147"} loc("YOLOv10":0:0), %arg239: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2002"} loc("YOLOv10":0:0), %arg240: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2002_fork_clone1133"} loc("YOLOv10":0:0), %arg241: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2019"} loc("YOLOv10":0:0), %arg242: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2019_fork_clone760"} loc("YOLOv10":0:0), %arg243: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2038"} loc("YOLOv10":0:0), %arg244: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2038_fork_clone2231"} loc("YOLOv10":0:0), %arg245: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2054"} loc("YOLOv10":0:0), %arg246: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2054_fork_clone1780"} loc("YOLOv10":0:0), %arg247: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2071"} loc("YOLOv10":0:0), %arg248: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2071_fork_clone1374"} loc("YOLOv10":0:0), %arg249: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2087"} loc("YOLOv10":0:0), %arg250: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2087_fork_clone1058"} loc("YOLOv10":0:0), %arg251: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2104"} loc("YOLOv10":0:0), %arg252: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2104_fork_clone766"} loc("YOLOv10":0:0), %arg253: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2122"} loc("YOLOv10":0:0), %arg254: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2122_fork_clone2237"} loc("YOLOv10":0:0), %arg255: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2138"} loc("YOLOv10":0:0), %arg256: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2138_fork_clone1787"} loc("YOLOv10":0:0), %arg257: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2155"} loc("YOLOv10":0:0), %arg258: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2155_fork_clone1382"} loc("YOLOv10":0:0), %arg259: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2171"} loc("YOLOv10":0:0), %arg260: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2171_fork_clone1065"} loc("YOLOv10":0:0), %arg261: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2188"} loc("YOLOv10":0:0), %arg262: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2188_fork_clone772"} loc("YOLOv10":0:0), %arg263: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2206"} loc("YOLOv10":0:0), %arg264: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2206_fork_clone2243"} loc("YOLOv10":0:0), %arg265: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2222"} loc("YOLOv10":0:0), %arg266: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2222_fork_clone1794"} loc("YOLOv10":0:0), %arg267: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2239"} loc("YOLOv10":0:0), %arg268: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2239_fork_clone1390"} loc("YOLOv10":0:0), %arg269: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2255"} loc("YOLOv10":0:0), %arg270: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2255_fork_clone1072"} loc("YOLOv10":0:0), %arg271: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2272"} loc("YOLOv10":0:0), %arg272: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2272_fork_clone778"} loc("YOLOv10":0:0), %arg273: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2290"} loc("YOLOv10":0:0), %arg274: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2290_fork_clone444"} loc("YOLOv10":0:0), %arg275: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2306"} loc("YOLOv10":0:0), %arg276: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2306_fork_clone292"} loc("YOLOv10":0:0), %arg277: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2322"} loc("YOLOv10":0:0), %arg278: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2322_fork_clone152"} loc("YOLOv10":0:0), %arg279: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2343"} loc("YOLOv10":0:0), %arg280: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2343_fork_clone649"} loc("YOLOv10":0:0), %arg281: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2359"} loc("YOLOv10":0:0), %arg282: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2359_fork_clone451"} loc("YOLOv10":0:0), %arg283: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2376"} loc("YOLOv10":0:0), %arg284: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2376_fork_clone300"} loc("YOLOv10":0:0), %arg285: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2392"} loc("YOLOv10":0:0), %arg286: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2392_fork_clone157"} loc("YOLOv10":0:0), %arg287: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2414"} loc("YOLOv10":0:0), %arg288: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2414_fork_clone1395"} loc("YOLOv10":0:0), %arg289: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2431"} loc("YOLOv10":0:0), %arg290: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2431_fork_clone1080"} loc("YOLOv10":0:0), %arg291: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2446"} loc("YOLOv10":0:0), %arg292: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2446_fork_clone787"} loc("YOLOv10":0:0), %arg293: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2465"} loc("YOLOv10":0:0), %arg294: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2465_fork_clone2263"} loc("YOLOv10":0:0), %arg295: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2481"} loc("YOLOv10":0:0), %arg296: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2481_fork_clone1821"} loc("YOLOv10":0:0), %arg297: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2498"} loc("YOLOv10":0:0), %arg298: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2498_fork_clone1411"} loc("YOLOv10":0:0), %arg299: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2514"} loc("YOLOv10":0:0), %arg300: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2514_fork_clone1091"} loc("YOLOv10":0:0), %arg301: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2531"} loc("YOLOv10":0:0), %arg302: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2531_fork_clone793"} loc("YOLOv10":0:0), %arg303: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2549"} loc("YOLOv10":0:0), %arg304: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2549_fork_clone2269"} loc("YOLOv10":0:0), %arg305: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2565"} loc("YOLOv10":0:0), %arg306: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2565_fork_clone1828"} loc("YOLOv10":0:0), %arg307: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2582"} loc("YOLOv10":0:0), %arg308: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2582_fork_clone1419"} loc("YOLOv10":0:0), %arg309: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2598"} loc("YOLOv10":0:0), %arg310: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2598_fork_clone1098"} loc("YOLOv10":0:0), %arg311: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2615"} loc("YOLOv10":0:0), %arg312: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2615_fork_clone799"} loc("YOLOv10":0:0), %arg313: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2633"} loc("YOLOv10":0:0), %arg314: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2633_fork_clone2275"} loc("YOLOv10":0:0), %arg315: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2649"} loc("YOLOv10":0:0), %arg316: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2649_fork_clone1835"} loc("YOLOv10":0:0), %arg317: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2666"} loc("YOLOv10":0:0), %arg318: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2666_fork_clone1427"} loc("YOLOv10":0:0), %arg319: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2682"} loc("YOLOv10":0:0), %arg320: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2682_fork_clone1105"} loc("YOLOv10":0:0), %arg321: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2699"} loc("YOLOv10":0:0), %arg322: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2699_fork_clone805"} loc("YOLOv10":0:0), %arg323: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2717"} loc("YOLOv10":0:0), %arg324: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2717_fork_clone461"} loc("YOLOv10":0:0), %arg325: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2733"} loc("YOLOv10":0:0), %arg326: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2733_fork_clone307"} loc("YOLOv10":0:0), %arg327: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2749"} loc("YOLOv10":0:0), %arg328: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2749_fork_clone162"} loc("YOLOv10":0:0), %arg329: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2770"} loc("YOLOv10":0:0), %arg330: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2770_fork_clone669"} loc("YOLOv10":0:0), %arg331: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2786"} loc("YOLOv10":0:0), %arg332: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2786_fork_clone468"} loc("YOLOv10":0:0), %arg333: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2803"} loc("YOLOv10":0:0), %arg334: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2803_fork_clone315"} loc("YOLOv10":0:0), %arg335: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2819"} loc("YOLOv10":0:0), %arg336: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2819_fork_clone167"} loc("YOLOv10":0:0), %arg337: tensor<1x16x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_1_conv2d_2843"} loc("YOLOv10":0:0), %arg338: tensor<1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_1_divide_2850"} loc("YOLOv10":0:0), %arg339: tensor<1x8400xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_1_multiply_2853"} loc("YOLOv10":0:0), %arg340: tensor<80x3x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.0.conv.weight"} loc("YOLOv10":0:0), %arg341: tensor<160x80x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.1.conv.weight"} loc("YOLOv10":0:0), %arg342: tensor<160x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.cv1.conv.weight"} loc("YOLOv10":0:0), %arg343: tensor<80x80x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.m.0.cv1.conv.weight"} loc("YOLOv10":0:0), %arg344: tensor<80x80x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.m.0.cv2.conv.weight"} loc("YOLOv10":0:0), %arg345: tensor<80x80x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.m.1.cv1.conv.weight"} loc("YOLOv10":0:0), %arg346: tensor<80x80x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.m.1.cv2.conv.weight"} loc("YOLOv10":0:0), %arg347: tensor<80x80x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.m.2.cv1.conv.weight"} loc("YOLOv10":0:0), %arg348: tensor<80x80x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.m.2.cv2.conv.weight"} loc("YOLOv10":0:0), %arg349: tensor<160x400x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.cv2.conv.weight"} loc("YOLOv10":0:0), %arg350: tensor<320x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.3.conv.weight"} loc("YOLOv10":0:0), %arg351: tensor<320x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.cv1.conv.weight"} loc("YOLOv10":0:0), %arg352: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.m.0.cv1.conv.weight"} loc("YOLOv10":0:0), %arg353: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.m.0.cv2.conv.weight"} loc("YOLOv10":0:0), %arg354: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.m.1.cv1.conv.weight"} loc("YOLOv10":0:0), %arg355: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.m.1.cv2.conv.weight"} loc("YOLOv10":0:0), %arg356: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.m.2.cv1.conv.weight"} loc("YOLOv10":0:0), %arg357: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.m.2.cv2.conv.weight"} loc("YOLOv10":0:0), %arg358: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.m.3.cv1.conv.weight"} loc("YOLOv10":0:0), %arg359: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.m.3.cv2.conv.weight"} loc("YOLOv10":0:0), %arg360: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.m.4.cv1.conv.weight"} loc("YOLOv10":0:0), %arg361: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.m.4.cv2.conv.weight"} loc("YOLOv10":0:0), %arg362: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.m.5.cv1.conv.weight"} loc("YOLOv10":0:0), %arg363: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.m.5.cv2.conv.weight"} loc("YOLOv10":0:0), %arg364: tensor<320x1280x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.cv2.conv.weight"} loc("YOLOv10":0:0), %arg365: tensor<640x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.5.cv1.conv.weight"} loc("YOLOv10":0:0), %arg366: tensor<640x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.5.cv2.conv.weight"} loc("YOLOv10":0:0), %arg367: tensor<640x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.cv1.conv.weight"} loc("YOLOv10":0:0), %arg368: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.0.cv1.0.conv.weight"} loc("YOLOv10":0:0), %arg369: tensor<640x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.0.cv1.1.conv.weight"} loc("YOLOv10":0:0), %arg370: tensor<640x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.0.cv1.2.conv.weight"} loc("YOLOv10":0:0), %arg371: tensor<320x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.0.cv1.3.conv.weight"} loc("YOLOv10":0:0), %arg372: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.0.cv1.4.conv.weight"} loc("YOLOv10":0:0), %arg373: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.1.cv1.0.conv.weight"} loc("YOLOv10":0:0), %arg374: tensor<640x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.1.cv1.1.conv.weight"} loc("YOLOv10":0:0), %arg375: tensor<640x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.1.cv1.2.conv.weight"} loc("YOLOv10":0:0), %arg376: tensor<320x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.1.cv1.3.conv.weight"} loc("YOLOv10":0:0), %arg377: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.1.cv1.4.conv.weight"} loc("YOLOv10":0:0), %arg378: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.2.cv1.0.conv.weight"} loc("YOLOv10":0:0), %arg379: tensor<640x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.2.cv1.1.conv.weight"} loc("YOLOv10":0:0), %arg380: tensor<640x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.2.cv1.2.conv.weight"} loc("YOLOv10":0:0), %arg381: tensor<320x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.2.cv1.3.conv.weight"} loc("YOLOv10":0:0), %arg382: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.2.cv1.4.conv.weight"} loc("YOLOv10":0:0), %arg383: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.3.cv1.0.conv.weight"} loc("YOLOv10":0:0), %arg384: tensor<640x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.3.cv1.1.conv.weight"} loc("YOLOv10":0:0), %arg385: tensor<640x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.3.cv1.2.conv.weight"} loc("YOLOv10":0:0), %arg386: tensor<320x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.3.cv1.3.conv.weight"} loc("YOLOv10":0:0), %arg387: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.3.cv1.4.conv.weight"} loc("YOLOv10":0:0), %arg388: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.4.cv1.0.conv.weight"} loc("YOLOv10":0:0), %arg389: tensor<640x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.4.cv1.1.conv.weight"} loc("YOLOv10":0:0), %arg390: tensor<640x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.4.cv1.2.conv.weight"} loc("YOLOv10":0:0), %arg391: tensor<320x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.4.cv1.3.conv.weight"} loc("YOLOv10":0:0), %arg392: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.4.cv1.4.conv.weight"} loc("YOLOv10":0:0), %arg393: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.5.cv1.0.conv.weight"} loc("YOLOv10":0:0), %arg394: tensor<640x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.5.cv1.1.conv.weight"} loc("YOLOv10":0:0), %arg395: tensor<640x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.5.cv1.2.conv.weight"} loc("YOLOv10":0:0), %arg396: tensor<320x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.5.cv1.3.conv.weight"} loc("YOLOv10":0:0), %arg397: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.5.cv1.4.conv.weight"} loc("YOLOv10":0:0), %arg398: tensor<640x2560x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.cv2.conv.weight"} loc("YOLOv10":0:0), %arg399: tensor<640x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.7.cv1.conv.weight"} loc("YOLOv10":0:0), %arg400: tensor<640x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.7.cv2.conv.weight"} loc("YOLOv10":0:0), %arg401: tensor<640x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.cv1.conv.weight"} loc("YOLOv10":0:0), %arg402: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.m.0.cv1.0.conv.weight"} loc("YOLOv10":0:0), %arg403: tensor<640x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.m.0.cv1.1.conv.weight"} loc("YOLOv10":0:0), %arg404: tensor<640x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.m.0.cv1.2.conv.weight"} loc("YOLOv10":0:0), %arg405: tensor<320x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.m.0.cv1.3.conv.weight"} loc("YOLOv10":0:0), %arg406: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.m.0.cv1.4.conv.weight"} loc("YOLOv10":0:0), %arg407: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.m.1.cv1.0.conv.weight"} loc("YOLOv10":0:0), %arg408: tensor<640x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.m.1.cv1.1.conv.weight"} loc("YOLOv10":0:0), %arg409: tensor<640x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.m.1.cv1.2.conv.weight"} loc("YOLOv10":0:0), %arg410: tensor<320x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.m.1.cv1.3.conv.weight"} loc("YOLOv10":0:0), %arg411: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.m.1.cv1.4.conv.weight"} loc("YOLOv10":0:0), %arg412: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.m.2.cv1.0.conv.weight"} loc("YOLOv10":0:0), %arg413: tensor<640x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.m.2.cv1.1.conv.weight"} loc("YOLOv10":0:0), %arg414: tensor<640x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.m.2.cv1.2.conv.weight"} loc("YOLOv10":0:0), %arg415: tensor<320x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.m.2.cv1.3.conv.weight"} loc("YOLOv10":0:0), %arg416: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.m.2.cv1.4.conv.weight"} loc("YOLOv10":0:0), %arg417: tensor<640x1600x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.cv2.conv.weight"} loc("YOLOv10":0:0), %arg418: tensor<320x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.9.cv1.conv.weight"} loc("YOLOv10":0:0), %arg419: tensor<640x1280x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.9.cv2.conv.weight"} loc("YOLOv10":0:0), %arg420: tensor<640x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.10.cv1.conv.weight"} loc("YOLOv10":0:0), %arg421: tensor<640x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.10.attn.qkv.conv.weight"} loc("YOLOv10":0:0), %arg422: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.10.attn.pe.conv.weight"} loc("YOLOv10":0:0), %arg423: tensor<320x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.10.attn.proj.conv.weight"} loc("YOLOv10":0:0), %arg424: tensor<640x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.10.ffn.0.conv.weight"} loc("YOLOv10":0:0), %arg425: tensor<320x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.10.ffn.1.conv.weight"} loc("YOLOv10":0:0), %arg426: tensor<640x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.10.cv2.conv.weight"} loc("YOLOv10":0:0), %arg427: tensor<640x1280x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.13.cv1.conv.weight"} loc("YOLOv10":0:0), %arg428: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.13.m.0.cv1.0.conv.weight"} loc("YOLOv10":0:0), %arg429: tensor<640x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.13.m.0.cv1.1.conv.weight"} loc("YOLOv10":0:0), %arg430: tensor<640x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.13.m.0.cv1.2.conv.weight"} loc("YOLOv10":0:0), %arg431: tensor<320x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.13.m.0.cv1.3.conv.weight"} loc("YOLOv10":0:0), %arg432: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.13.m.0.cv1.4.conv.weight"} loc("YOLOv10":0:0), %arg433: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.13.m.1.cv1.0.conv.weight"} loc("YOLOv10":0:0), %arg434: tensor<640x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.13.m.1.cv1.1.conv.weight"} loc("YOLOv10":0:0), %arg435: tensor<640x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.13.m.1.cv1.2.conv.weight"} loc("YOLOv10":0:0), %arg436: tensor<320x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.13.m.1.cv1.3.conv.weight"} loc("YOLOv10":0:0), %arg437: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.13.m.1.cv1.4.conv.weight"} loc("YOLOv10":0:0), %arg438: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.13.m.2.cv1.0.conv.weight"} loc("YOLOv10":0:0), %arg439: tensor<640x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.13.m.2.cv1.1.conv.weight"} loc("YOLOv10":0:0), %arg440: tensor<640x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.13.m.2.cv1.2.conv.weight"} loc("YOLOv10":0:0), %arg441: tensor<320x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.13.m.2.cv1.3.conv.weight"} loc("YOLOv10":0:0), %arg442: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.13.m.2.cv1.4.conv.weight"} loc("YOLOv10":0:0), %arg443: tensor<640x1600x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.13.cv2.conv.weight"} loc("YOLOv10":0:0), %arg444: tensor<320x960x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.16.cv1.conv.weight"} loc("YOLOv10":0:0), %arg445: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.16.m.0.cv1.conv.weight"} loc("YOLOv10":0:0), %arg446: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.16.m.0.cv2.conv.weight"} loc("YOLOv10":0:0), %arg447: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.16.m.1.cv1.conv.weight"} loc("YOLOv10":0:0), %arg448: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.16.m.1.cv2.conv.weight"} loc("YOLOv10":0:0), %arg449: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.16.m.2.cv1.conv.weight"} loc("YOLOv10":0:0), %arg450: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.16.m.2.cv2.conv.weight"} loc("YOLOv10":0:0), %arg451: tensor<320x800x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.16.cv2.conv.weight"} loc("YOLOv10":0:0), %arg452: tensor<80x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv2.0.0.conv.weight"} loc("YOLOv10":0:0), %arg453: tensor<80x80x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv2.0.1.conv.weight"} loc("YOLOv10":0:0), %arg454: tensor<64x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv2.0.2.weight"} loc("YOLOv10":0:0), %arg455: tensor<1x1x1x64xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv2.0.2.bias"} loc("YOLOv10":0:0), %arg456: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv3.0.0.0.conv.weight"} loc("YOLOv10":0:0), %arg457: tensor<320x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv3.0.0.1.conv.weight"} loc("YOLOv10":0:0), %arg458: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv3.0.1.0.conv.weight"} loc("YOLOv10":0:0), %arg459: tensor<320x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv3.0.1.1.conv.weight"} loc("YOLOv10":0:0), %arg460: tensor<80x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv3.0.2.weight"} loc("YOLOv10":0:0), %arg461: tensor<1x1x1x80xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv3.0.2.bias"} loc("YOLOv10":0:0), %arg462: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.17.conv.weight"} loc("YOLOv10":0:0), %arg463: tensor<640x960x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.19.cv1.conv.weight"} loc("YOLOv10":0:0), %arg464: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.19.m.0.cv1.0.conv.weight"} loc("YOLOv10":0:0), %arg465: tensor<640x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.19.m.0.cv1.1.conv.weight"} loc("YOLOv10":0:0), %arg466: tensor<640x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.19.m.0.cv1.2.conv.weight"} loc("YOLOv10":0:0), %arg467: tensor<320x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.19.m.0.cv1.3.conv.weight"} loc("YOLOv10":0:0), %arg468: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.19.m.0.cv1.4.conv.weight"} loc("YOLOv10":0:0), %arg469: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.19.m.1.cv1.0.conv.weight"} loc("YOLOv10":0:0), %arg470: tensor<640x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.19.m.1.cv1.1.conv.weight"} loc("YOLOv10":0:0), %arg471: tensor<640x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.19.m.1.cv1.2.conv.weight"} loc("YOLOv10":0:0), %arg472: tensor<320x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.19.m.1.cv1.3.conv.weight"} loc("YOLOv10":0:0), %arg473: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.19.m.1.cv1.4.conv.weight"} loc("YOLOv10":0:0), %arg474: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.19.m.2.cv1.0.conv.weight"} loc("YOLOv10":0:0), %arg475: tensor<640x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.19.m.2.cv1.1.conv.weight"} loc("YOLOv10":0:0), %arg476: tensor<640x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.19.m.2.cv1.2.conv.weight"} loc("YOLOv10":0:0), %arg477: tensor<320x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.19.m.2.cv1.3.conv.weight"} loc("YOLOv10":0:0), %arg478: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.19.m.2.cv1.4.conv.weight"} loc("YOLOv10":0:0), %arg479: tensor<640x1600x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.19.cv2.conv.weight"} loc("YOLOv10":0:0), %arg480: tensor<80x640x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv2.1.0.conv.weight"} loc("YOLOv10":0:0), %arg481: tensor<80x80x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv2.1.1.conv.weight"} loc("YOLOv10":0:0), %arg482: tensor<64x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv2.1.2.weight"} loc("YOLOv10":0:0), %arg483: tensor<1x1x1x64xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv2.1.2.bias"} loc("YOLOv10":0:0), %arg484: tensor<640x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv3.1.0.0.conv.weight"} loc("YOLOv10":0:0), %arg485: tensor<320x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv3.1.0.1.conv.weight"} loc("YOLOv10":0:0), %arg486: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv3.1.1.0.conv.weight"} loc("YOLOv10":0:0), %arg487: tensor<320x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv3.1.1.1.conv.weight"} loc("YOLOv10":0:0), %arg488: tensor<80x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv3.1.2.weight"} loc("YOLOv10":0:0), %arg489: tensor<1x1x1x80xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv3.1.2.bias"} loc("YOLOv10":0:0), %arg490: tensor<640x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.20.cv1.conv.weight"} loc("YOLOv10":0:0), %arg491: tensor<640x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.20.cv2.conv.weight"} loc("YOLOv10":0:0), %arg492: tensor<640x1280x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv1.conv.weight"} loc("YOLOv10":0:0), %arg493: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.m.0.cv1.0.conv.weight"} loc("YOLOv10":0:0), %arg494: tensor<640x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.m.0.cv1.1.conv.weight"} loc("YOLOv10":0:0), %arg495: tensor<640x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.m.0.cv1.2.conv.weight"} loc("YOLOv10":0:0), %arg496: tensor<320x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.m.0.cv1.3.conv.weight"} loc("YOLOv10":0:0), %arg497: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.m.0.cv1.4.conv.weight"} loc("YOLOv10":0:0), %arg498: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.m.1.cv1.0.conv.weight"} loc("YOLOv10":0:0), %arg499: tensor<640x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.m.1.cv1.1.conv.weight"} loc("YOLOv10":0:0), %arg500: tensor<640x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.m.1.cv1.2.conv.weight"} loc("YOLOv10":0:0), %arg501: tensor<320x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.m.1.cv1.3.conv.weight"} loc("YOLOv10":0:0), %arg502: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.m.1.cv1.4.conv.weight"} loc("YOLOv10":0:0), %arg503: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.m.2.cv1.0.conv.weight"} loc("YOLOv10":0:0), %arg504: tensor<640x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.m.2.cv1.1.conv.weight"} loc("YOLOv10":0:0), %arg505: tensor<640x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.m.2.cv1.2.conv.weight"} loc("YOLOv10":0:0), %arg506: tensor<320x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.m.2.cv1.3.conv.weight"} loc("YOLOv10":0:0), %arg507: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.m.2.cv1.4.conv.weight"} loc("YOLOv10":0:0), %arg508: tensor<640x1600x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv2.conv.weight"} loc("YOLOv10":0:0), %arg509: tensor<80x640x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv2.2.0.conv.weight"} loc("YOLOv10":0:0), %arg510: tensor<80x80x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv2.2.1.conv.weight"} loc("YOLOv10":0:0), %arg511: tensor<64x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv2.2.2.weight"} loc("YOLOv10":0:0), %arg512: tensor<1x1x1x64xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv2.2.2.bias"} loc("YOLOv10":0:0), %arg513: tensor<640x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv3.2.0.0.conv.weight"} loc("YOLOv10":0:0), %arg514: tensor<320x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv3.2.0.1.conv.weight"} loc("YOLOv10":0:0), %arg515: tensor<320x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv3.2.1.0.conv.weight"} loc("YOLOv10":0:0), %arg516: tensor<320x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv3.2.1.1.conv.weight"} loc("YOLOv10":0:0), %arg517: tensor<80x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv3.2.2.weight"} loc("YOLOv10":0:0), %arg518: tensor<1x1x1x80xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.23.cv3.2.2.bias"} loc("YOLOv10":0:0)) -> (tensor<1x84x8400xbf16> {ttir.name = "YOLOv10.output_concatenate_2856"}, tensor<1x144x80x80xbf16> {ttir.name = "YOLOv10.output_concatenate_1997"}, tensor<1x144x40x40xbf16> {ttir.name = "YOLOv10.output_concatenate_2409"}, tensor<1x144x20x20xbf16> {ttir.name = "YOLOv10.output_concatenate_2836"}) {
    %0 = ttir.empty() : tensor<1x640x3x640xbf16> loc(#loc512)
    %1 = "ttir.transpose"(%arg0, %0) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x3x640x640xbf16>, tensor<1x640x3x640xbf16>) -> tensor<1x640x3x640xbf16> loc(#loc512)
    %2 = ttir.empty() : tensor<1x640x640x3xbf16> loc(#loc513)
    %3 = "ttir.transpose"(%1, %2) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x640x3x640xbf16>, tensor<1x640x640x3xbf16>) -> tensor<1x640x640x3xbf16> loc(#loc513)
    %4 = ttir.empty() : tensor<1x320x320x80xbf16> loc(#loc514)
    %5 = "ttir.conv2d"(%3, %arg340, %4) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 2, 2>}> {channel_last = 1 : si32} : (tensor<1x640x640x3xbf16>, tensor<80x3x3x3xbf16>, tensor<1x320x320x80xbf16>) -> tensor<1x320x320x80xbf16> loc(#loc514)
    %6 = ttir.empty() : tensor<1x320x80x320xbf16> loc(#loc515)
    %7 = "ttir.transpose"(%5, %6) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x320x320x80xbf16>, tensor<1x320x80x320xbf16>) -> tensor<1x320x80x320xbf16> loc(#loc515)
    %8 = ttir.empty() : tensor<1x80x320x320xbf16> loc(#loc516)
    %9 = "ttir.transpose"(%7, %8) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x80x320xbf16>, tensor<1x80x320x320xbf16>) -> tensor<1x80x320x320xbf16> loc(#loc516)
    %10 = ttir.empty() : tensor<1x80x320x320xbf16> loc(#loc2)
    %11 = "ttir.multiply"(%9, %arg2, %10) : (tensor<1x80x320x320xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x320x320xbf16>) -> tensor<1x80x320x320xbf16> loc(#loc2)
    %12 = ttir.empty() : tensor<1x80x320x320xbf16> loc(#loc3)
    %13 = "ttir.add"(%11, %arg3, %12) : (tensor<1x80x320x320xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x320x320xbf16>) -> tensor<1x80x320x320xbf16> loc(#loc3)
    %14 = ttir.empty() : tensor<1x80x320x320xbf16> loc(#loc517)
    %15 = "ttir.sigmoid"(%13, %14) : (tensor<1x80x320x320xbf16>, tensor<1x80x320x320xbf16>) -> tensor<1x80x320x320xbf16> loc(#loc517)
    %16 = ttir.empty() : tensor<1x80x320x320xbf16> loc(#loc518)
    %17 = "ttir.multiply"(%13, %15, %16) : (tensor<1x80x320x320xbf16>, tensor<1x80x320x320xbf16>, tensor<1x80x320x320xbf16>) -> tensor<1x80x320x320xbf16> loc(#loc518)
    %18 = ttir.empty() : tensor<1x320x80x320xbf16> loc(#loc519)
    %19 = "ttir.transpose"(%17, %18) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x320x320xbf16>, tensor<1x320x80x320xbf16>) -> tensor<1x320x80x320xbf16> loc(#loc519)
    %20 = ttir.empty() : tensor<1x320x320x80xbf16> loc(#loc520)
    %21 = "ttir.transpose"(%19, %20) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x320x80x320xbf16>, tensor<1x320x320x80xbf16>) -> tensor<1x320x320x80xbf16> loc(#loc520)
    %22 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc521)
    %23 = "ttir.conv2d"(%21, %arg341, %22) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 2, 2>}> {channel_last = 1 : si32} : (tensor<1x320x320x80xbf16>, tensor<160x80x3x3xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc521)
    %24 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc522)
    %25 = "ttir.transpose"(%23, %24) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc522)
    %26 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc523)
    %27 = "ttir.transpose"(%25, %26) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc523)
    %28 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc4)
    %29 = "ttir.multiply"(%27, %arg4, %28) : (tensor<1x160x160x160xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc4)
    %30 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc5)
    %31 = "ttir.add"(%29, %arg5, %30) : (tensor<1x160x160x160xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc5)
    %32 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc367)
    %33 = "ttir.sigmoid"(%31, %32) : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc367)
    %34 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc368)
    %35 = "ttir.multiply"(%31, %33, %34) : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc368)
    %36 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc723)
    %37 = "ttir.transpose"(%35, %36) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc723)
    %38 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc724)
    %39 = "ttir.transpose"(%37, %38) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc724)
    %40 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc725)
    %41 = "ttir.conv2d"(%39, %arg342, %40) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x160xbf16>, tensor<160x160x1x1xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc725)
    %42 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc726)
    %43 = "ttir.transpose"(%41, %42) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc726)
    %44 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc727)
    %45 = "ttir.transpose"(%43, %44) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc727)
    %46 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc6)
    %47 = "ttir.multiply"(%45, %arg6, %46) : (tensor<1x160x160x160xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc6)
    %48 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc7)
    %49 = "ttir.add"(%47, %arg7, %48) : (tensor<1x160x160x160xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc7)
    %50 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc525)
    %51 = "ttir.sigmoid"(%49, %50) : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc525)
    %52 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc526)
    %53 = "ttir.multiply"(%49, %51, %52) : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc526)
    %54 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc370)
    %55 = "ttir.index"(%53, %54) <{begin = 0 : i32, dim = 1 : i32, end = 80 : i32, step = 1 : i32}> : (tensor<1x160x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc370)
    %56 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc371)
    %57 = "ttir.index"(%53, %56) <{begin = 80 : i32, dim = 1 : i32, end = 160 : i32, step = 1 : i32}> : (tensor<1x160x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc371)
    %58 = ttir.empty() : tensor<1x160x80x160xbf16> loc(#loc1087)
    %59 = "ttir.transpose"(%57, %58) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x160xbf16>, tensor<1x160x80x160xbf16>) -> tensor<1x160x80x160xbf16> loc(#loc1087)
    %60 = ttir.empty() : tensor<1x160x160x80xbf16> loc(#loc1088)
    %61 = "ttir.transpose"(%59, %60) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x80x160xbf16>, tensor<1x160x160x80xbf16>) -> tensor<1x160x160x80xbf16> loc(#loc1088)
    %62 = ttir.empty() : tensor<1x160x160x80xbf16> loc(#loc1089)
    %63 = "ttir.conv2d"(%61, %arg343, %62) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x80xbf16>, tensor<80x80x3x3xbf16>, tensor<1x160x160x80xbf16>) -> tensor<1x160x160x80xbf16> loc(#loc1089)
    %64 = ttir.empty() : tensor<1x160x80x160xbf16> loc(#loc1090)
    %65 = "ttir.transpose"(%63, %64) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x80xbf16>, tensor<1x160x80x160xbf16>) -> tensor<1x160x80x160xbf16> loc(#loc1090)
    %66 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc1091)
    %67 = "ttir.transpose"(%65, %66) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc1091)
    %68 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc8)
    %69 = "ttir.multiply"(%67, %arg8, %68) : (tensor<1x80x160x160xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc8)
    %70 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc9)
    %71 = "ttir.add"(%69, %arg9, %70) : (tensor<1x80x160x160xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc9)
    %72 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc729)
    %73 = "ttir.sigmoid"(%71, %72) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc729)
    %74 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc730)
    %75 = "ttir.multiply"(%71, %73, %74) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc730)
    %76 = ttir.empty() : tensor<1x160x80x160xbf16> loc(#loc1092)
    %77 = "ttir.transpose"(%75, %76) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x160xbf16>, tensor<1x160x80x160xbf16>) -> tensor<1x160x80x160xbf16> loc(#loc1092)
    %78 = ttir.empty() : tensor<1x160x160x80xbf16> loc(#loc1093)
    %79 = "ttir.transpose"(%77, %78) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x80x160xbf16>, tensor<1x160x160x80xbf16>) -> tensor<1x160x160x80xbf16> loc(#loc1093)
    %80 = ttir.empty() : tensor<1x160x160x80xbf16> loc(#loc1094)
    %81 = "ttir.conv2d"(%79, %arg344, %80) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x80xbf16>, tensor<80x80x3x3xbf16>, tensor<1x160x160x80xbf16>) -> tensor<1x160x160x80xbf16> loc(#loc1094)
    %82 = ttir.empty() : tensor<1x160x80x160xbf16> loc(#loc1095)
    %83 = "ttir.transpose"(%81, %82) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x80xbf16>, tensor<1x160x80x160xbf16>) -> tensor<1x160x80x160xbf16> loc(#loc1095)
    %84 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc1096)
    %85 = "ttir.transpose"(%83, %84) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc1096)
    %86 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc10)
    %87 = "ttir.multiply"(%85, %arg10, %86) : (tensor<1x80x160x160xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc10)
    %88 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc11)
    %89 = "ttir.add"(%87, %arg11, %88) : (tensor<1x80x160x160xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc11)
    %90 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc732)
    %91 = "ttir.sigmoid"(%89, %90) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc732)
    %92 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc733)
    %93 = "ttir.multiply"(%89, %91, %92) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc733)
    %94 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc529)
    %95 = "ttir.add"(%57, %93, %94) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc529)
    %96 = ttir.empty() : tensor<1x160x80x160xbf16> loc(#loc1097)
    %97 = "ttir.transpose"(%95, %96) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x160xbf16>, tensor<1x160x80x160xbf16>) -> tensor<1x160x80x160xbf16> loc(#loc1097)
    %98 = ttir.empty() : tensor<1x160x160x80xbf16> loc(#loc1098)
    %99 = "ttir.transpose"(%97, %98) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x80x160xbf16>, tensor<1x160x160x80xbf16>) -> tensor<1x160x160x80xbf16> loc(#loc1098)
    %100 = ttir.empty() : tensor<1x160x160x80xbf16> loc(#loc1099)
    %101 = "ttir.conv2d"(%99, %arg345, %100) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x80xbf16>, tensor<80x80x3x3xbf16>, tensor<1x160x160x80xbf16>) -> tensor<1x160x160x80xbf16> loc(#loc1099)
    %102 = ttir.empty() : tensor<1x160x80x160xbf16> loc(#loc1100)
    %103 = "ttir.transpose"(%101, %102) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x80xbf16>, tensor<1x160x80x160xbf16>) -> tensor<1x160x80x160xbf16> loc(#loc1100)
    %104 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc1101)
    %105 = "ttir.transpose"(%103, %104) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc1101)
    %106 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc12)
    %107 = "ttir.multiply"(%105, %arg12, %106) : (tensor<1x80x160x160xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc12)
    %108 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc13)
    %109 = "ttir.add"(%107, %arg13, %108) : (tensor<1x80x160x160xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc13)
    %110 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc735)
    %111 = "ttir.sigmoid"(%109, %110) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc735)
    %112 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc736)
    %113 = "ttir.multiply"(%109, %111, %112) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc736)
    %114 = ttir.empty() : tensor<1x160x80x160xbf16> loc(#loc1102)
    %115 = "ttir.transpose"(%113, %114) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x160xbf16>, tensor<1x160x80x160xbf16>) -> tensor<1x160x80x160xbf16> loc(#loc1102)
    %116 = ttir.empty() : tensor<1x160x160x80xbf16> loc(#loc1103)
    %117 = "ttir.transpose"(%115, %116) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x80x160xbf16>, tensor<1x160x160x80xbf16>) -> tensor<1x160x160x80xbf16> loc(#loc1103)
    %118 = ttir.empty() : tensor<1x160x160x80xbf16> loc(#loc1104)
    %119 = "ttir.conv2d"(%117, %arg346, %118) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x80xbf16>, tensor<80x80x3x3xbf16>, tensor<1x160x160x80xbf16>) -> tensor<1x160x160x80xbf16> loc(#loc1104)
    %120 = ttir.empty() : tensor<1x160x80x160xbf16> loc(#loc1105)
    %121 = "ttir.transpose"(%119, %120) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x80xbf16>, tensor<1x160x80x160xbf16>) -> tensor<1x160x80x160xbf16> loc(#loc1105)
    %122 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc1106)
    %123 = "ttir.transpose"(%121, %122) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc1106)
    %124 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc14)
    %125 = "ttir.multiply"(%123, %arg14, %124) : (tensor<1x80x160x160xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc14)
    %126 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc15)
    %127 = "ttir.add"(%125, %arg15, %126) : (tensor<1x80x160x160xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc15)
    %128 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc738)
    %129 = "ttir.sigmoid"(%127, %128) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc738)
    %130 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc739)
    %131 = "ttir.multiply"(%127, %129, %130) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc739)
    %132 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc532)
    %133 = "ttir.add"(%95, %131, %132) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc532)
    %134 = ttir.empty() : tensor<1x160x80x160xbf16> loc(#loc1107)
    %135 = "ttir.transpose"(%133, %134) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x160xbf16>, tensor<1x160x80x160xbf16>) -> tensor<1x160x80x160xbf16> loc(#loc1107)
    %136 = ttir.empty() : tensor<1x160x160x80xbf16> loc(#loc1108)
    %137 = "ttir.transpose"(%135, %136) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x80x160xbf16>, tensor<1x160x160x80xbf16>) -> tensor<1x160x160x80xbf16> loc(#loc1108)
    %138 = ttir.empty() : tensor<1x160x160x80xbf16> loc(#loc1109)
    %139 = "ttir.conv2d"(%137, %arg347, %138) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x80xbf16>, tensor<80x80x3x3xbf16>, tensor<1x160x160x80xbf16>) -> tensor<1x160x160x80xbf16> loc(#loc1109)
    %140 = ttir.empty() : tensor<1x160x80x160xbf16> loc(#loc1110)
    %141 = "ttir.transpose"(%139, %140) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x80xbf16>, tensor<1x160x80x160xbf16>) -> tensor<1x160x80x160xbf16> loc(#loc1110)
    %142 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc1111)
    %143 = "ttir.transpose"(%141, %142) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc1111)
    %144 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc16)
    %145 = "ttir.multiply"(%143, %arg16, %144) : (tensor<1x80x160x160xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc16)
    %146 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc17)
    %147 = "ttir.add"(%145, %arg17, %146) : (tensor<1x80x160x160xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc17)
    %148 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc741)
    %149 = "ttir.sigmoid"(%147, %148) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc741)
    %150 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc742)
    %151 = "ttir.multiply"(%147, %149, %150) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc742)
    %152 = ttir.empty() : tensor<1x160x80x160xbf16> loc(#loc1112)
    %153 = "ttir.transpose"(%151, %152) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x160xbf16>, tensor<1x160x80x160xbf16>) -> tensor<1x160x80x160xbf16> loc(#loc1112)
    %154 = ttir.empty() : tensor<1x160x160x80xbf16> loc(#loc1113)
    %155 = "ttir.transpose"(%153, %154) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x80x160xbf16>, tensor<1x160x160x80xbf16>) -> tensor<1x160x160x80xbf16> loc(#loc1113)
    %156 = ttir.empty() : tensor<1x160x160x80xbf16> loc(#loc1114)
    %157 = "ttir.conv2d"(%155, %arg348, %156) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x80xbf16>, tensor<80x80x3x3xbf16>, tensor<1x160x160x80xbf16>) -> tensor<1x160x160x80xbf16> loc(#loc1114)
    %158 = ttir.empty() : tensor<1x160x80x160xbf16> loc(#loc1115)
    %159 = "ttir.transpose"(%157, %158) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x80xbf16>, tensor<1x160x80x160xbf16>) -> tensor<1x160x80x160xbf16> loc(#loc1115)
    %160 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc1116)
    %161 = "ttir.transpose"(%159, %160) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc1116)
    %162 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc18)
    %163 = "ttir.multiply"(%161, %arg18, %162) : (tensor<1x80x160x160xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc18)
    %164 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc19)
    %165 = "ttir.add"(%163, %arg19, %164) : (tensor<1x80x160x160xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc19)
    %166 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc744)
    %167 = "ttir.sigmoid"(%165, %166) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc744)
    %168 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc745)
    %169 = "ttir.multiply"(%165, %167, %168) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc745)
    %170 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc535)
    %171 = "ttir.add"(%133, %169, %170) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc535)
    %172 = ttir.empty() : tensor<1x400x160x160xbf16> loc(#loc375)
    %173 = "ttir.concat"(%55, %57, %95, %133, %171, %172) <{dim = -3 : si32}> : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>, tensor<1x400x160x160xbf16>) -> tensor<1x400x160x160xbf16> loc(#loc375)
    %174 = ttir.empty() : tensor<1x160x400x160xbf16> loc(#loc746)
    %175 = "ttir.transpose"(%173, %174) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x400x160x160xbf16>, tensor<1x160x400x160xbf16>) -> tensor<1x160x400x160xbf16> loc(#loc746)
    %176 = ttir.empty() : tensor<1x160x160x400xbf16> loc(#loc747)
    %177 = "ttir.transpose"(%175, %176) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x400x160xbf16>, tensor<1x160x160x400xbf16>) -> tensor<1x160x160x400xbf16> loc(#loc747)
    %178 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc748)
    %179 = "ttir.conv2d"(%177, %arg349, %178) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x400xbf16>, tensor<160x400x1x1xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc748)
    %180 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc749)
    %181 = "ttir.transpose"(%179, %180) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc749)
    %182 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc750)
    %183 = "ttir.transpose"(%181, %182) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc750)
    %184 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc20)
    %185 = "ttir.multiply"(%183, %arg20, %184) : (tensor<1x160x160x160xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc20)
    %186 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc21)
    %187 = "ttir.add"(%185, %arg21, %186) : (tensor<1x160x160x160xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc21)
    %188 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc537)
    %189 = "ttir.sigmoid"(%187, %188) : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc537)
    %190 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc538)
    %191 = "ttir.multiply"(%187, %189, %190) : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc538)
    %192 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc539)
    %193 = "ttir.transpose"(%191, %192) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc539)
    %194 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc540)
    %195 = "ttir.transpose"(%193, %194) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc540)
    %196 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc541)
    %197 = "ttir.conv2d"(%195, %arg350, %196) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 2, 2>}> {channel_last = 1 : si32} : (tensor<1x160x160x160xbf16>, tensor<320x160x3x3xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc541)
    %198 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc542)
    %199 = "ttir.transpose"(%197, %198) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x320xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc542)
    %200 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc543)
    %201 = "ttir.transpose"(%199, %200) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc543)
    %202 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc22)
    %203 = "ttir.multiply"(%201, %arg22, %202) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc22)
    %204 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc23)
    %205 = "ttir.add"(%203, %arg23, %204) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc23)
    %206 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc378)
    %207 = "ttir.sigmoid"(%205, %206) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc378)
    %208 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc379)
    %209 = "ttir.multiply"(%205, %207, %208) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc379)
    %210 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc751)
    %211 = "ttir.transpose"(%209, %210) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x80x80xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc751)
    %212 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc752)
    %213 = "ttir.transpose"(%211, %212) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc752)
    %214 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc753)
    %215 = "ttir.conv2d"(%213, %arg351, %214) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x320xbf16>, tensor<320x320x1x1xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc753)
    %216 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc754)
    %217 = "ttir.transpose"(%215, %216) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x320xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc754)
    %218 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc755)
    %219 = "ttir.transpose"(%217, %218) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc755)
    %220 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc24)
    %221 = "ttir.multiply"(%219, %arg24, %220) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc24)
    %222 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc25)
    %223 = "ttir.add"(%221, %arg25, %222) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc25)
    %224 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc545)
    %225 = "ttir.sigmoid"(%223, %224) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc545)
    %226 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc546)
    %227 = "ttir.multiply"(%223, %225, %226) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc546)
    %228 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc381)
    %229 = "ttir.index"(%227, %228) <{begin = 0 : i32, dim = 1 : i32, end = 160 : i32, step = 1 : i32}> : (tensor<1x320x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc381)
    %230 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc382)
    %231 = "ttir.index"(%227, %230) <{begin = 160 : i32, dim = 1 : i32, end = 320 : i32, step = 1 : i32}> : (tensor<1x320x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc382)
    %232 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1117)
    %233 = "ttir.transpose"(%231, %232) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1117)
    %234 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1118)
    %235 = "ttir.transpose"(%233, %234) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1118)
    %236 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1119)
    %237 = "ttir.conv2d"(%235, %arg352, %236) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1119)
    %238 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1120)
    %239 = "ttir.transpose"(%237, %238) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1120)
    %240 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc1121)
    %241 = "ttir.transpose"(%239, %240) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc1121)
    %242 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc26)
    %243 = "ttir.multiply"(%241, %arg26, %242) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc26)
    %244 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc27)
    %245 = "ttir.add"(%243, %arg27, %244) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc27)
    %246 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc757)
    %247 = "ttir.sigmoid"(%245, %246) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc757)
    %248 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc758)
    %249 = "ttir.multiply"(%245, %247, %248) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc758)
    %250 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1122)
    %251 = "ttir.transpose"(%249, %250) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1122)
    %252 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1123)
    %253 = "ttir.transpose"(%251, %252) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1123)
    %254 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1124)
    %255 = "ttir.conv2d"(%253, %arg353, %254) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1124)
    %256 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1125)
    %257 = "ttir.transpose"(%255, %256) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1125)
    %258 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc1126)
    %259 = "ttir.transpose"(%257, %258) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc1126)
    %260 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc28)
    %261 = "ttir.multiply"(%259, %arg28, %260) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc28)
    %262 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc29)
    %263 = "ttir.add"(%261, %arg29, %262) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc29)
    %264 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc760)
    %265 = "ttir.sigmoid"(%263, %264) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc760)
    %266 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc761)
    %267 = "ttir.multiply"(%263, %265, %266) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc761)
    %268 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc549)
    %269 = "ttir.add"(%231, %267, %268) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc549)
    %270 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1127)
    %271 = "ttir.transpose"(%269, %270) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1127)
    %272 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1128)
    %273 = "ttir.transpose"(%271, %272) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1128)
    %274 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1129)
    %275 = "ttir.conv2d"(%273, %arg354, %274) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1129)
    %276 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1130)
    %277 = "ttir.transpose"(%275, %276) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1130)
    %278 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc1131)
    %279 = "ttir.transpose"(%277, %278) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc1131)
    %280 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc30)
    %281 = "ttir.multiply"(%279, %arg30, %280) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc30)
    %282 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc31)
    %283 = "ttir.add"(%281, %arg31, %282) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc31)
    %284 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc763)
    %285 = "ttir.sigmoid"(%283, %284) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc763)
    %286 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc764)
    %287 = "ttir.multiply"(%283, %285, %286) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc764)
    %288 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1132)
    %289 = "ttir.transpose"(%287, %288) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1132)
    %290 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1133)
    %291 = "ttir.transpose"(%289, %290) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1133)
    %292 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1134)
    %293 = "ttir.conv2d"(%291, %arg355, %292) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1134)
    %294 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1135)
    %295 = "ttir.transpose"(%293, %294) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1135)
    %296 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc1136)
    %297 = "ttir.transpose"(%295, %296) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc1136)
    %298 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc32)
    %299 = "ttir.multiply"(%297, %arg32, %298) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc32)
    %300 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc33)
    %301 = "ttir.add"(%299, %arg33, %300) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc33)
    %302 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc766)
    %303 = "ttir.sigmoid"(%301, %302) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc766)
    %304 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc767)
    %305 = "ttir.multiply"(%301, %303, %304) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc767)
    %306 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc552)
    %307 = "ttir.add"(%269, %305, %306) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc552)
    %308 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1137)
    %309 = "ttir.transpose"(%307, %308) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1137)
    %310 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1138)
    %311 = "ttir.transpose"(%309, %310) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1138)
    %312 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1139)
    %313 = "ttir.conv2d"(%311, %arg356, %312) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1139)
    %314 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1140)
    %315 = "ttir.transpose"(%313, %314) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1140)
    %316 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc1141)
    %317 = "ttir.transpose"(%315, %316) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc1141)
    %318 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc34)
    %319 = "ttir.multiply"(%317, %arg34, %318) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc34)
    %320 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc35)
    %321 = "ttir.add"(%319, %arg35, %320) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc35)
    %322 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc769)
    %323 = "ttir.sigmoid"(%321, %322) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc769)
    %324 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc770)
    %325 = "ttir.multiply"(%321, %323, %324) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc770)
    %326 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1142)
    %327 = "ttir.transpose"(%325, %326) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1142)
    %328 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1143)
    %329 = "ttir.transpose"(%327, %328) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1143)
    %330 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1144)
    %331 = "ttir.conv2d"(%329, %arg357, %330) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1144)
    %332 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1145)
    %333 = "ttir.transpose"(%331, %332) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1145)
    %334 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc1146)
    %335 = "ttir.transpose"(%333, %334) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc1146)
    %336 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc36)
    %337 = "ttir.multiply"(%335, %arg36, %336) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc36)
    %338 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc37)
    %339 = "ttir.add"(%337, %arg37, %338) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc37)
    %340 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc772)
    %341 = "ttir.sigmoid"(%339, %340) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc772)
    %342 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc773)
    %343 = "ttir.multiply"(%339, %341, %342) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc773)
    %344 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc555)
    %345 = "ttir.add"(%307, %343, %344) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc555)
    %346 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1147)
    %347 = "ttir.transpose"(%345, %346) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1147)
    %348 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1148)
    %349 = "ttir.transpose"(%347, %348) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1148)
    %350 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1149)
    %351 = "ttir.conv2d"(%349, %arg358, %350) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1149)
    %352 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1150)
    %353 = "ttir.transpose"(%351, %352) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1150)
    %354 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc1151)
    %355 = "ttir.transpose"(%353, %354) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc1151)
    %356 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc38)
    %357 = "ttir.multiply"(%355, %arg38, %356) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc38)
    %358 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc39)
    %359 = "ttir.add"(%357, %arg39, %358) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc39)
    %360 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc775)
    %361 = "ttir.sigmoid"(%359, %360) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc775)
    %362 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc776)
    %363 = "ttir.multiply"(%359, %361, %362) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc776)
    %364 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1152)
    %365 = "ttir.transpose"(%363, %364) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1152)
    %366 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1153)
    %367 = "ttir.transpose"(%365, %366) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1153)
    %368 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1154)
    %369 = "ttir.conv2d"(%367, %arg359, %368) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1154)
    %370 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1155)
    %371 = "ttir.transpose"(%369, %370) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1155)
    %372 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc1156)
    %373 = "ttir.transpose"(%371, %372) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc1156)
    %374 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc40)
    %375 = "ttir.multiply"(%373, %arg40, %374) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc40)
    %376 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc41)
    %377 = "ttir.add"(%375, %arg41, %376) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc41)
    %378 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc778)
    %379 = "ttir.sigmoid"(%377, %378) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc778)
    %380 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc779)
    %381 = "ttir.multiply"(%377, %379, %380) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc779)
    %382 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc558)
    %383 = "ttir.add"(%345, %381, %382) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc558)
    %384 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1157)
    %385 = "ttir.transpose"(%383, %384) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1157)
    %386 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1158)
    %387 = "ttir.transpose"(%385, %386) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1158)
    %388 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1159)
    %389 = "ttir.conv2d"(%387, %arg360, %388) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1159)
    %390 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1160)
    %391 = "ttir.transpose"(%389, %390) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1160)
    %392 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc1161)
    %393 = "ttir.transpose"(%391, %392) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc1161)
    %394 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc42)
    %395 = "ttir.multiply"(%393, %arg42, %394) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc42)
    %396 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc43)
    %397 = "ttir.add"(%395, %arg43, %396) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc43)
    %398 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc781)
    %399 = "ttir.sigmoid"(%397, %398) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc781)
    %400 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc782)
    %401 = "ttir.multiply"(%397, %399, %400) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc782)
    %402 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1162)
    %403 = "ttir.transpose"(%401, %402) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1162)
    %404 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1163)
    %405 = "ttir.transpose"(%403, %404) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1163)
    %406 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1164)
    %407 = "ttir.conv2d"(%405, %arg361, %406) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1164)
    %408 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1165)
    %409 = "ttir.transpose"(%407, %408) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1165)
    %410 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc1166)
    %411 = "ttir.transpose"(%409, %410) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc1166)
    %412 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc44)
    %413 = "ttir.multiply"(%411, %arg44, %412) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc44)
    %414 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc45)
    %415 = "ttir.add"(%413, %arg45, %414) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc45)
    %416 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc784)
    %417 = "ttir.sigmoid"(%415, %416) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc784)
    %418 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc785)
    %419 = "ttir.multiply"(%415, %417, %418) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc785)
    %420 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc561)
    %421 = "ttir.add"(%383, %419, %420) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc561)
    %422 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1167)
    %423 = "ttir.transpose"(%421, %422) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1167)
    %424 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1168)
    %425 = "ttir.transpose"(%423, %424) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1168)
    %426 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1169)
    %427 = "ttir.conv2d"(%425, %arg362, %426) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1169)
    %428 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1170)
    %429 = "ttir.transpose"(%427, %428) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1170)
    %430 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc1171)
    %431 = "ttir.transpose"(%429, %430) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc1171)
    %432 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc46)
    %433 = "ttir.multiply"(%431, %arg46, %432) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc46)
    %434 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc47)
    %435 = "ttir.add"(%433, %arg47, %434) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc47)
    %436 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc787)
    %437 = "ttir.sigmoid"(%435, %436) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc787)
    %438 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc788)
    %439 = "ttir.multiply"(%435, %437, %438) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc788)
    %440 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1172)
    %441 = "ttir.transpose"(%439, %440) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1172)
    %442 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1173)
    %443 = "ttir.transpose"(%441, %442) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1173)
    %444 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1174)
    %445 = "ttir.conv2d"(%443, %arg363, %444) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1174)
    %446 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1175)
    %447 = "ttir.transpose"(%445, %446) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1175)
    %448 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc1176)
    %449 = "ttir.transpose"(%447, %448) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc1176)
    %450 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc48)
    %451 = "ttir.multiply"(%449, %arg48, %450) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc48)
    %452 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc49)
    %453 = "ttir.add"(%451, %arg49, %452) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc49)
    %454 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc790)
    %455 = "ttir.sigmoid"(%453, %454) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc790)
    %456 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc791)
    %457 = "ttir.multiply"(%453, %455, %456) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc791)
    %458 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc564)
    %459 = "ttir.add"(%421, %457, %458) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc564)
    %460 = ttir.empty() : tensor<1x1280x80x80xbf16> loc(#loc389)
    %461 = "ttir.concat"(%229, %231, %269, %307, %345, %383, %421, %459, %460) <{dim = -3 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x1280x80x80xbf16>) -> tensor<1x1280x80x80xbf16> loc(#loc389)
    %462 = ttir.empty() : tensor<1x80x1280x80xbf16> loc(#loc792)
    %463 = "ttir.transpose"(%461, %462) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x1280x80x80xbf16>, tensor<1x80x1280x80xbf16>) -> tensor<1x80x1280x80xbf16> loc(#loc792)
    %464 = ttir.empty() : tensor<1x80x80x1280xbf16> loc(#loc793)
    %465 = "ttir.transpose"(%463, %464) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x1280x80xbf16>, tensor<1x80x80x1280xbf16>) -> tensor<1x80x80x1280xbf16> loc(#loc793)
    %466 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc794)
    %467 = "ttir.conv2d"(%465, %arg364, %466) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x1280xbf16>, tensor<320x1280x1x1xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc794)
    %468 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc795)
    %469 = "ttir.transpose"(%467, %468) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x320xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc795)
    %470 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc796)
    %471 = "ttir.transpose"(%469, %470) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc796)
    %472 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc50)
    %473 = "ttir.multiply"(%471, %arg50, %472) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc50)
    %474 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc51)
    %475 = "ttir.add"(%473, %arg51, %474) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc51)
    %476 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc566)
    %477 = "ttir.sigmoid"(%475, %476) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc566)
    %478 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc567)
    %479 = "ttir.multiply"(%475, %477, %478) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc567)
    %480 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc797)
    %481 = "ttir.transpose"(%479, %480) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x80x80xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc797)
    %482 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc798)
    %483 = "ttir.transpose"(%481, %482) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc798)
    %484 = ttir.empty() : tensor<1x80x80x640xbf16> loc(#loc799)
    %485 = "ttir.conv2d"(%483, %arg365, %484) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x320xbf16>, tensor<640x320x1x1xbf16>, tensor<1x80x80x640xbf16>) -> tensor<1x80x80x640xbf16> loc(#loc799)
    %486 = ttir.empty() : tensor<1x80x640x80xbf16> loc(#loc800)
    %487 = "ttir.transpose"(%485, %486) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x640xbf16>, tensor<1x80x640x80xbf16>) -> tensor<1x80x640x80xbf16> loc(#loc800)
    %488 = ttir.empty() : tensor<1x640x80x80xbf16> loc(#loc801)
    %489 = "ttir.transpose"(%487, %488) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x640x80xbf16>, tensor<1x640x80x80xbf16>) -> tensor<1x640x80x80xbf16> loc(#loc801)
    %490 = ttir.empty() : tensor<1x640x80x80xbf16> loc(#loc52)
    %491 = "ttir.multiply"(%489, %arg52, %490) : (tensor<1x640x80x80xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x80x80xbf16>) -> tensor<1x640x80x80xbf16> loc(#loc52)
    %492 = ttir.empty() : tensor<1x640x80x80xbf16> loc(#loc53)
    %493 = "ttir.add"(%491, %arg53, %492) : (tensor<1x640x80x80xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x80x80xbf16>) -> tensor<1x640x80x80xbf16> loc(#loc53)
    %494 = ttir.empty() : tensor<1x640x80x80xbf16> loc(#loc569)
    %495 = "ttir.sigmoid"(%493, %494) : (tensor<1x640x80x80xbf16>, tensor<1x640x80x80xbf16>) -> tensor<1x640x80x80xbf16> loc(#loc569)
    %496 = ttir.empty() : tensor<1x640x80x80xbf16> loc(#loc570)
    %497 = "ttir.multiply"(%493, %495, %496) : (tensor<1x640x80x80xbf16>, tensor<1x640x80x80xbf16>, tensor<1x640x80x80xbf16>) -> tensor<1x640x80x80xbf16> loc(#loc570)
    %498 = ttir.empty() : tensor<1x80x640x80xbf16> loc(#loc802)
    %499 = "ttir.transpose"(%497, %498) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x80x80xbf16>, tensor<1x80x640x80xbf16>) -> tensor<1x80x640x80xbf16> loc(#loc802)
    %500 = ttir.empty() : tensor<1x80x80x640xbf16> loc(#loc803)
    %501 = "ttir.transpose"(%499, %500) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x640x80xbf16>, tensor<1x80x80x640xbf16>) -> tensor<1x80x80x640xbf16> loc(#loc803)
    %502 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc804)
    %503 = "ttir.conv2d"(%501, %arg366, %502) <{dilation = array<i32: 1, 1>, groups = 640 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 2, 2>}> {channel_last = 1 : si32} : (tensor<1x80x80x640xbf16>, tensor<640x1x3x3xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc804)
    %504 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc805)
    %505 = "ttir.transpose"(%503, %504) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc805)
    %506 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc806)
    %507 = "ttir.transpose"(%505, %506) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc806)
    %508 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc54)
    %509 = "ttir.multiply"(%507, %arg54, %508) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc54)
    %510 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc55)
    %511 = "ttir.add"(%509, %arg55, %510) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc55)
    %512 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc807)
    %513 = "ttir.transpose"(%511, %512) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc807)
    %514 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc808)
    %515 = "ttir.transpose"(%513, %514) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc808)
    %516 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc809)
    %517 = "ttir.conv2d"(%515, %arg367, %516) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<640x640x1x1xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc809)
    %518 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc810)
    %519 = "ttir.transpose"(%517, %518) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc810)
    %520 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc811)
    %521 = "ttir.transpose"(%519, %520) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc811)
    %522 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc56)
    %523 = "ttir.multiply"(%521, %arg56, %522) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc56)
    %524 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc57)
    %525 = "ttir.add"(%523, %arg57, %524) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc57)
    %526 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc573)
    %527 = "ttir.sigmoid"(%525, %526) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc573)
    %528 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc574)
    %529 = "ttir.multiply"(%525, %527, %528) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc574)
    %530 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc394)
    %531 = "ttir.index"(%529, %530) <{begin = 0 : i32, dim = 1 : i32, end = 320 : i32, step = 1 : i32}> : (tensor<1x640x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc394)
    %532 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc395)
    %533 = "ttir.index"(%529, %532) <{begin = 320 : i32, dim = 1 : i32, end = 640 : i32, step = 1 : i32}> : (tensor<1x640x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc395)
    %534 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1568)
    %535 = "ttir.transpose"(%533, %534) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1568)
    %536 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1569)
    %537 = "ttir.transpose"(%535, %536) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1569)
    %538 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1570)
    %539 = "ttir.conv2d"(%537, %arg368, %538) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1570)
    %540 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1571)
    %541 = "ttir.transpose"(%539, %540) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1571)
    %542 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1572)
    %543 = "ttir.transpose"(%541, %542) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1572)
    %544 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc58)
    %545 = "ttir.multiply"(%543, %arg58, %544) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc58)
    %546 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc59)
    %547 = "ttir.add"(%545, %arg59, %546) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc59)
    %548 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1178)
    %549 = "ttir.sigmoid"(%547, %548) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1178)
    %550 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1179)
    %551 = "ttir.multiply"(%547, %549, %550) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1179)
    %552 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1573)
    %553 = "ttir.transpose"(%551, %552) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1573)
    %554 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1574)
    %555 = "ttir.transpose"(%553, %554) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1574)
    %556 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1575)
    %557 = "ttir.conv2d"(%555, %arg369, %556) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<640x320x1x1xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1575)
    %558 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1576)
    %559 = "ttir.transpose"(%557, %558) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1576)
    %560 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1577)
    %561 = "ttir.transpose"(%559, %560) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1577)
    %562 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc60)
    %563 = "ttir.multiply"(%561, %arg60, %562) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc60)
    %564 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc61)
    %565 = "ttir.add"(%563, %arg61, %564) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc61)
    %566 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1181)
    %567 = "ttir.sigmoid"(%565, %566) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1181)
    %568 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1182)
    %569 = "ttir.multiply"(%565, %567, %568) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1182)
    %570 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1578)
    %571 = "ttir.transpose"(%569, %570) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1578)
    %572 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1579)
    %573 = "ttir.transpose"(%571, %572) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1579)
    %574 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1580)
    %575 = "ttir.conv2d"(%573, %arg370, %574) <{dilation = array<i32: 1, 1>, groups = 640 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<640x1x3x3xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1580)
    %576 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1581)
    %577 = "ttir.transpose"(%575, %576) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1581)
    %578 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1582)
    %579 = "ttir.transpose"(%577, %578) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1582)
    %580 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc62)
    %581 = "ttir.multiply"(%579, %arg62, %580) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc62)
    %582 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc63)
    %583 = "ttir.add"(%581, %arg63, %582) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc63)
    %584 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1184)
    %585 = "ttir.sigmoid"(%583, %584) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1184)
    %586 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1185)
    %587 = "ttir.multiply"(%583, %585, %586) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1185)
    %588 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1583)
    %589 = "ttir.transpose"(%587, %588) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1583)
    %590 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1584)
    %591 = "ttir.transpose"(%589, %590) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1584)
    %592 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1585)
    %593 = "ttir.conv2d"(%591, %arg371, %592) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<320x640x1x1xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1585)
    %594 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1586)
    %595 = "ttir.transpose"(%593, %594) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1586)
    %596 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1587)
    %597 = "ttir.transpose"(%595, %596) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1587)
    %598 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc64)
    %599 = "ttir.multiply"(%597, %arg64, %598) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc64)
    %600 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc65)
    %601 = "ttir.add"(%599, %arg65, %600) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc65)
    %602 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1187)
    %603 = "ttir.sigmoid"(%601, %602) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1187)
    %604 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1188)
    %605 = "ttir.multiply"(%601, %603, %604) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1188)
    %606 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1588)
    %607 = "ttir.transpose"(%605, %606) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1588)
    %608 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1589)
    %609 = "ttir.transpose"(%607, %608) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1589)
    %610 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1590)
    %611 = "ttir.conv2d"(%609, %arg372, %610) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1590)
    %612 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1591)
    %613 = "ttir.transpose"(%611, %612) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1591)
    %614 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1592)
    %615 = "ttir.transpose"(%613, %614) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1592)
    %616 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc66)
    %617 = "ttir.multiply"(%615, %arg66, %616) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc66)
    %618 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc67)
    %619 = "ttir.add"(%617, %arg67, %618) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc67)
    %620 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1190)
    %621 = "ttir.sigmoid"(%619, %620) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1190)
    %622 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1191)
    %623 = "ttir.multiply"(%619, %621, %622) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1191)
    %624 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc576)
    %625 = "ttir.add"(%533, %623, %624) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc576)
    %626 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1593)
    %627 = "ttir.transpose"(%625, %626) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1593)
    %628 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1594)
    %629 = "ttir.transpose"(%627, %628) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1594)
    %630 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1595)
    %631 = "ttir.conv2d"(%629, %arg373, %630) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1595)
    %632 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1596)
    %633 = "ttir.transpose"(%631, %632) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1596)
    %634 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1597)
    %635 = "ttir.transpose"(%633, %634) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1597)
    %636 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc68)
    %637 = "ttir.multiply"(%635, %arg68, %636) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc68)
    %638 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc69)
    %639 = "ttir.add"(%637, %arg69, %638) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc69)
    %640 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1193)
    %641 = "ttir.sigmoid"(%639, %640) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1193)
    %642 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1194)
    %643 = "ttir.multiply"(%639, %641, %642) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1194)
    %644 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1598)
    %645 = "ttir.transpose"(%643, %644) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1598)
    %646 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1599)
    %647 = "ttir.transpose"(%645, %646) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1599)
    %648 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1600)
    %649 = "ttir.conv2d"(%647, %arg374, %648) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<640x320x1x1xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1600)
    %650 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1601)
    %651 = "ttir.transpose"(%649, %650) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1601)
    %652 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1602)
    %653 = "ttir.transpose"(%651, %652) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1602)
    %654 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc70)
    %655 = "ttir.multiply"(%653, %arg70, %654) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc70)
    %656 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc71)
    %657 = "ttir.add"(%655, %arg71, %656) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc71)
    %658 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1196)
    %659 = "ttir.sigmoid"(%657, %658) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1196)
    %660 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1197)
    %661 = "ttir.multiply"(%657, %659, %660) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1197)
    %662 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1603)
    %663 = "ttir.transpose"(%661, %662) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1603)
    %664 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1604)
    %665 = "ttir.transpose"(%663, %664) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1604)
    %666 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1605)
    %667 = "ttir.conv2d"(%665, %arg375, %666) <{dilation = array<i32: 1, 1>, groups = 640 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<640x1x3x3xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1605)
    %668 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1606)
    %669 = "ttir.transpose"(%667, %668) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1606)
    %670 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1607)
    %671 = "ttir.transpose"(%669, %670) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1607)
    %672 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc72)
    %673 = "ttir.multiply"(%671, %arg72, %672) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc72)
    %674 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc73)
    %675 = "ttir.add"(%673, %arg73, %674) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc73)
    %676 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1199)
    %677 = "ttir.sigmoid"(%675, %676) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1199)
    %678 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1200)
    %679 = "ttir.multiply"(%675, %677, %678) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1200)
    %680 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1608)
    %681 = "ttir.transpose"(%679, %680) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1608)
    %682 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1609)
    %683 = "ttir.transpose"(%681, %682) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1609)
    %684 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1610)
    %685 = "ttir.conv2d"(%683, %arg376, %684) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<320x640x1x1xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1610)
    %686 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1611)
    %687 = "ttir.transpose"(%685, %686) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1611)
    %688 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1612)
    %689 = "ttir.transpose"(%687, %688) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1612)
    %690 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc74)
    %691 = "ttir.multiply"(%689, %arg74, %690) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc74)
    %692 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc75)
    %693 = "ttir.add"(%691, %arg75, %692) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc75)
    %694 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1202)
    %695 = "ttir.sigmoid"(%693, %694) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1202)
    %696 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1203)
    %697 = "ttir.multiply"(%693, %695, %696) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1203)
    %698 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1613)
    %699 = "ttir.transpose"(%697, %698) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1613)
    %700 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1614)
    %701 = "ttir.transpose"(%699, %700) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1614)
    %702 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1615)
    %703 = "ttir.conv2d"(%701, %arg377, %702) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1615)
    %704 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1616)
    %705 = "ttir.transpose"(%703, %704) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1616)
    %706 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1617)
    %707 = "ttir.transpose"(%705, %706) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1617)
    %708 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc76)
    %709 = "ttir.multiply"(%707, %arg76, %708) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc76)
    %710 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc77)
    %711 = "ttir.add"(%709, %arg77, %710) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc77)
    %712 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1205)
    %713 = "ttir.sigmoid"(%711, %712) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1205)
    %714 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1206)
    %715 = "ttir.multiply"(%711, %713, %714) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1206)
    %716 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc578)
    %717 = "ttir.add"(%625, %715, %716) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc578)
    %718 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1618)
    %719 = "ttir.transpose"(%717, %718) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1618)
    %720 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1619)
    %721 = "ttir.transpose"(%719, %720) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1619)
    %722 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1620)
    %723 = "ttir.conv2d"(%721, %arg378, %722) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1620)
    %724 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1621)
    %725 = "ttir.transpose"(%723, %724) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1621)
    %726 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1622)
    %727 = "ttir.transpose"(%725, %726) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1622)
    %728 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc78)
    %729 = "ttir.multiply"(%727, %arg78, %728) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc78)
    %730 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc79)
    %731 = "ttir.add"(%729, %arg79, %730) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc79)
    %732 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1208)
    %733 = "ttir.sigmoid"(%731, %732) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1208)
    %734 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1209)
    %735 = "ttir.multiply"(%731, %733, %734) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1209)
    %736 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1623)
    %737 = "ttir.transpose"(%735, %736) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1623)
    %738 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1624)
    %739 = "ttir.transpose"(%737, %738) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1624)
    %740 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1625)
    %741 = "ttir.conv2d"(%739, %arg379, %740) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<640x320x1x1xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1625)
    %742 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1626)
    %743 = "ttir.transpose"(%741, %742) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1626)
    %744 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1627)
    %745 = "ttir.transpose"(%743, %744) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1627)
    %746 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc80)
    %747 = "ttir.multiply"(%745, %arg80, %746) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc80)
    %748 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc81)
    %749 = "ttir.add"(%747, %arg81, %748) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc81)
    %750 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1211)
    %751 = "ttir.sigmoid"(%749, %750) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1211)
    %752 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1212)
    %753 = "ttir.multiply"(%749, %751, %752) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1212)
    %754 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1628)
    %755 = "ttir.transpose"(%753, %754) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1628)
    %756 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1629)
    %757 = "ttir.transpose"(%755, %756) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1629)
    %758 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1630)
    %759 = "ttir.conv2d"(%757, %arg380, %758) <{dilation = array<i32: 1, 1>, groups = 640 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<640x1x3x3xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1630)
    %760 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1631)
    %761 = "ttir.transpose"(%759, %760) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1631)
    %762 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1632)
    %763 = "ttir.transpose"(%761, %762) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1632)
    %764 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc82)
    %765 = "ttir.multiply"(%763, %arg82, %764) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc82)
    %766 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc83)
    %767 = "ttir.add"(%765, %arg83, %766) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc83)
    %768 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1214)
    %769 = "ttir.sigmoid"(%767, %768) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1214)
    %770 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1215)
    %771 = "ttir.multiply"(%767, %769, %770) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1215)
    %772 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1633)
    %773 = "ttir.transpose"(%771, %772) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1633)
    %774 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1634)
    %775 = "ttir.transpose"(%773, %774) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1634)
    %776 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1635)
    %777 = "ttir.conv2d"(%775, %arg381, %776) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<320x640x1x1xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1635)
    %778 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1636)
    %779 = "ttir.transpose"(%777, %778) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1636)
    %780 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1637)
    %781 = "ttir.transpose"(%779, %780) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1637)
    %782 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc84)
    %783 = "ttir.multiply"(%781, %arg84, %782) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc84)
    %784 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc85)
    %785 = "ttir.add"(%783, %arg85, %784) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc85)
    %786 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1217)
    %787 = "ttir.sigmoid"(%785, %786) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1217)
    %788 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1218)
    %789 = "ttir.multiply"(%785, %787, %788) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1218)
    %790 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1638)
    %791 = "ttir.transpose"(%789, %790) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1638)
    %792 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1639)
    %793 = "ttir.transpose"(%791, %792) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1639)
    %794 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1640)
    %795 = "ttir.conv2d"(%793, %arg382, %794) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1640)
    %796 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1641)
    %797 = "ttir.transpose"(%795, %796) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1641)
    %798 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1642)
    %799 = "ttir.transpose"(%797, %798) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1642)
    %800 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc86)
    %801 = "ttir.multiply"(%799, %arg86, %800) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc86)
    %802 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc87)
    %803 = "ttir.add"(%801, %arg87, %802) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc87)
    %804 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1220)
    %805 = "ttir.sigmoid"(%803, %804) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1220)
    %806 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1221)
    %807 = "ttir.multiply"(%803, %805, %806) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1221)
    %808 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc580)
    %809 = "ttir.add"(%717, %807, %808) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc580)
    %810 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1643)
    %811 = "ttir.transpose"(%809, %810) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1643)
    %812 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1644)
    %813 = "ttir.transpose"(%811, %812) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1644)
    %814 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1645)
    %815 = "ttir.conv2d"(%813, %arg383, %814) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1645)
    %816 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1646)
    %817 = "ttir.transpose"(%815, %816) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1646)
    %818 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1647)
    %819 = "ttir.transpose"(%817, %818) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1647)
    %820 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc88)
    %821 = "ttir.multiply"(%819, %arg88, %820) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc88)
    %822 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc89)
    %823 = "ttir.add"(%821, %arg89, %822) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc89)
    %824 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1223)
    %825 = "ttir.sigmoid"(%823, %824) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1223)
    %826 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1224)
    %827 = "ttir.multiply"(%823, %825, %826) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1224)
    %828 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1648)
    %829 = "ttir.transpose"(%827, %828) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1648)
    %830 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1649)
    %831 = "ttir.transpose"(%829, %830) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1649)
    %832 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1650)
    %833 = "ttir.conv2d"(%831, %arg384, %832) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<640x320x1x1xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1650)
    %834 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1651)
    %835 = "ttir.transpose"(%833, %834) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1651)
    %836 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1652)
    %837 = "ttir.transpose"(%835, %836) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1652)
    %838 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc90)
    %839 = "ttir.multiply"(%837, %arg90, %838) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc90)
    %840 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc91)
    %841 = "ttir.add"(%839, %arg91, %840) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc91)
    %842 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1226)
    %843 = "ttir.sigmoid"(%841, %842) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1226)
    %844 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1227)
    %845 = "ttir.multiply"(%841, %843, %844) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1227)
    %846 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1653)
    %847 = "ttir.transpose"(%845, %846) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1653)
    %848 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1654)
    %849 = "ttir.transpose"(%847, %848) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1654)
    %850 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1655)
    %851 = "ttir.conv2d"(%849, %arg385, %850) <{dilation = array<i32: 1, 1>, groups = 640 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<640x1x3x3xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1655)
    %852 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1656)
    %853 = "ttir.transpose"(%851, %852) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1656)
    %854 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1657)
    %855 = "ttir.transpose"(%853, %854) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1657)
    %856 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc92)
    %857 = "ttir.multiply"(%855, %arg92, %856) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc92)
    %858 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc93)
    %859 = "ttir.add"(%857, %arg93, %858) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc93)
    %860 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1229)
    %861 = "ttir.sigmoid"(%859, %860) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1229)
    %862 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1230)
    %863 = "ttir.multiply"(%859, %861, %862) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1230)
    %864 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1658)
    %865 = "ttir.transpose"(%863, %864) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1658)
    %866 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1659)
    %867 = "ttir.transpose"(%865, %866) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1659)
    %868 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1660)
    %869 = "ttir.conv2d"(%867, %arg386, %868) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<320x640x1x1xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1660)
    %870 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1661)
    %871 = "ttir.transpose"(%869, %870) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1661)
    %872 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1662)
    %873 = "ttir.transpose"(%871, %872) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1662)
    %874 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc94)
    %875 = "ttir.multiply"(%873, %arg94, %874) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc94)
    %876 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc95)
    %877 = "ttir.add"(%875, %arg95, %876) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc95)
    %878 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1232)
    %879 = "ttir.sigmoid"(%877, %878) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1232)
    %880 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1233)
    %881 = "ttir.multiply"(%877, %879, %880) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1233)
    %882 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1663)
    %883 = "ttir.transpose"(%881, %882) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1663)
    %884 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1664)
    %885 = "ttir.transpose"(%883, %884) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1664)
    %886 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1665)
    %887 = "ttir.conv2d"(%885, %arg387, %886) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1665)
    %888 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1666)
    %889 = "ttir.transpose"(%887, %888) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1666)
    %890 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1667)
    %891 = "ttir.transpose"(%889, %890) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1667)
    %892 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc96)
    %893 = "ttir.multiply"(%891, %arg96, %892) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc96)
    %894 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc97)
    %895 = "ttir.add"(%893, %arg97, %894) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc97)
    %896 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1235)
    %897 = "ttir.sigmoid"(%895, %896) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1235)
    %898 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1236)
    %899 = "ttir.multiply"(%895, %897, %898) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1236)
    %900 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc582)
    %901 = "ttir.add"(%809, %899, %900) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc582)
    %902 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1668)
    %903 = "ttir.transpose"(%901, %902) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1668)
    %904 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1669)
    %905 = "ttir.transpose"(%903, %904) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1669)
    %906 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1670)
    %907 = "ttir.conv2d"(%905, %arg388, %906) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1670)
    %908 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1671)
    %909 = "ttir.transpose"(%907, %908) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1671)
    %910 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1672)
    %911 = "ttir.transpose"(%909, %910) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1672)
    %912 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc98)
    %913 = "ttir.multiply"(%911, %arg98, %912) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc98)
    %914 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc99)
    %915 = "ttir.add"(%913, %arg99, %914) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc99)
    %916 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1238)
    %917 = "ttir.sigmoid"(%915, %916) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1238)
    %918 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1239)
    %919 = "ttir.multiply"(%915, %917, %918) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1239)
    %920 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1673)
    %921 = "ttir.transpose"(%919, %920) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1673)
    %922 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1674)
    %923 = "ttir.transpose"(%921, %922) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1674)
    %924 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1675)
    %925 = "ttir.conv2d"(%923, %arg389, %924) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<640x320x1x1xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1675)
    %926 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1676)
    %927 = "ttir.transpose"(%925, %926) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1676)
    %928 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1677)
    %929 = "ttir.transpose"(%927, %928) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1677)
    %930 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc100)
    %931 = "ttir.multiply"(%929, %arg100, %930) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc100)
    %932 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc101)
    %933 = "ttir.add"(%931, %arg101, %932) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc101)
    %934 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1241)
    %935 = "ttir.sigmoid"(%933, %934) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1241)
    %936 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1242)
    %937 = "ttir.multiply"(%933, %935, %936) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1242)
    %938 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1678)
    %939 = "ttir.transpose"(%937, %938) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1678)
    %940 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1679)
    %941 = "ttir.transpose"(%939, %940) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1679)
    %942 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1680)
    %943 = "ttir.conv2d"(%941, %arg390, %942) <{dilation = array<i32: 1, 1>, groups = 640 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<640x1x3x3xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1680)
    %944 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1681)
    %945 = "ttir.transpose"(%943, %944) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1681)
    %946 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1682)
    %947 = "ttir.transpose"(%945, %946) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1682)
    %948 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc102)
    %949 = "ttir.multiply"(%947, %arg102, %948) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc102)
    %950 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc103)
    %951 = "ttir.add"(%949, %arg103, %950) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc103)
    %952 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1244)
    %953 = "ttir.sigmoid"(%951, %952) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1244)
    %954 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1245)
    %955 = "ttir.multiply"(%951, %953, %954) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1245)
    %956 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1683)
    %957 = "ttir.transpose"(%955, %956) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1683)
    %958 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1684)
    %959 = "ttir.transpose"(%957, %958) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1684)
    %960 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1685)
    %961 = "ttir.conv2d"(%959, %arg391, %960) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<320x640x1x1xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1685)
    %962 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1686)
    %963 = "ttir.transpose"(%961, %962) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1686)
    %964 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1687)
    %965 = "ttir.transpose"(%963, %964) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1687)
    %966 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc104)
    %967 = "ttir.multiply"(%965, %arg104, %966) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc104)
    %968 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc105)
    %969 = "ttir.add"(%967, %arg105, %968) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc105)
    %970 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1247)
    %971 = "ttir.sigmoid"(%969, %970) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1247)
    %972 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1248)
    %973 = "ttir.multiply"(%969, %971, %972) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1248)
    %974 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1688)
    %975 = "ttir.transpose"(%973, %974) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1688)
    %976 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1689)
    %977 = "ttir.transpose"(%975, %976) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1689)
    %978 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1690)
    %979 = "ttir.conv2d"(%977, %arg392, %978) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1690)
    %980 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1691)
    %981 = "ttir.transpose"(%979, %980) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1691)
    %982 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1692)
    %983 = "ttir.transpose"(%981, %982) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1692)
    %984 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc106)
    %985 = "ttir.multiply"(%983, %arg106, %984) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc106)
    %986 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc107)
    %987 = "ttir.add"(%985, %arg107, %986) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc107)
    %988 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1250)
    %989 = "ttir.sigmoid"(%987, %988) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1250)
    %990 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1251)
    %991 = "ttir.multiply"(%987, %989, %990) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1251)
    %992 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc584)
    %993 = "ttir.add"(%901, %991, %992) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc584)
    %994 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1693)
    %995 = "ttir.transpose"(%993, %994) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1693)
    %996 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1694)
    %997 = "ttir.transpose"(%995, %996) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1694)
    %998 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1695)
    %999 = "ttir.conv2d"(%997, %arg393, %998) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1695)
    %1000 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1696)
    %1001 = "ttir.transpose"(%999, %1000) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1696)
    %1002 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1697)
    %1003 = "ttir.transpose"(%1001, %1002) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1697)
    %1004 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc108)
    %1005 = "ttir.multiply"(%1003, %arg108, %1004) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc108)
    %1006 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc109)
    %1007 = "ttir.add"(%1005, %arg109, %1006) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc109)
    %1008 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1253)
    %1009 = "ttir.sigmoid"(%1007, %1008) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1253)
    %1010 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1254)
    %1011 = "ttir.multiply"(%1007, %1009, %1010) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1254)
    %1012 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1698)
    %1013 = "ttir.transpose"(%1011, %1012) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1698)
    %1014 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1699)
    %1015 = "ttir.transpose"(%1013, %1014) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1699)
    %1016 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1700)
    %1017 = "ttir.conv2d"(%1015, %arg394, %1016) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<640x320x1x1xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1700)
    %1018 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1701)
    %1019 = "ttir.transpose"(%1017, %1018) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1701)
    %1020 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1702)
    %1021 = "ttir.transpose"(%1019, %1020) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1702)
    %1022 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc110)
    %1023 = "ttir.multiply"(%1021, %arg110, %1022) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc110)
    %1024 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc111)
    %1025 = "ttir.add"(%1023, %arg111, %1024) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc111)
    %1026 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1256)
    %1027 = "ttir.sigmoid"(%1025, %1026) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1256)
    %1028 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1257)
    %1029 = "ttir.multiply"(%1025, %1027, %1028) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1257)
    %1030 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1703)
    %1031 = "ttir.transpose"(%1029, %1030) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1703)
    %1032 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1704)
    %1033 = "ttir.transpose"(%1031, %1032) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1704)
    %1034 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1705)
    %1035 = "ttir.conv2d"(%1033, %arg395, %1034) <{dilation = array<i32: 1, 1>, groups = 640 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<640x1x3x3xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1705)
    %1036 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1706)
    %1037 = "ttir.transpose"(%1035, %1036) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1706)
    %1038 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1707)
    %1039 = "ttir.transpose"(%1037, %1038) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1707)
    %1040 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc112)
    %1041 = "ttir.multiply"(%1039, %arg112, %1040) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc112)
    %1042 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc113)
    %1043 = "ttir.add"(%1041, %arg113, %1042) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc113)
    %1044 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1259)
    %1045 = "ttir.sigmoid"(%1043, %1044) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1259)
    %1046 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1260)
    %1047 = "ttir.multiply"(%1043, %1045, %1046) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1260)
    %1048 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1708)
    %1049 = "ttir.transpose"(%1047, %1048) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1708)
    %1050 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1709)
    %1051 = "ttir.transpose"(%1049, %1050) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1709)
    %1052 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1710)
    %1053 = "ttir.conv2d"(%1051, %arg396, %1052) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<320x640x1x1xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1710)
    %1054 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1711)
    %1055 = "ttir.transpose"(%1053, %1054) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1711)
    %1056 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1712)
    %1057 = "ttir.transpose"(%1055, %1056) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1712)
    %1058 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc114)
    %1059 = "ttir.multiply"(%1057, %arg114, %1058) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc114)
    %1060 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc115)
    %1061 = "ttir.add"(%1059, %arg115, %1060) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc115)
    %1062 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1262)
    %1063 = "ttir.sigmoid"(%1061, %1062) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1262)
    %1064 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1263)
    %1065 = "ttir.multiply"(%1061, %1063, %1064) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1263)
    %1066 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1713)
    %1067 = "ttir.transpose"(%1065, %1066) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1713)
    %1068 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1714)
    %1069 = "ttir.transpose"(%1067, %1068) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1714)
    %1070 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1715)
    %1071 = "ttir.conv2d"(%1069, %arg397, %1070) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1715)
    %1072 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1716)
    %1073 = "ttir.transpose"(%1071, %1072) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1716)
    %1074 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1717)
    %1075 = "ttir.transpose"(%1073, %1074) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1717)
    %1076 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc116)
    %1077 = "ttir.multiply"(%1075, %arg116, %1076) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc116)
    %1078 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc117)
    %1079 = "ttir.add"(%1077, %arg117, %1078) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc117)
    %1080 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1265)
    %1081 = "ttir.sigmoid"(%1079, %1080) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1265)
    %1082 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1266)
    %1083 = "ttir.multiply"(%1079, %1081, %1082) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1266)
    %1084 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc586)
    %1085 = "ttir.add"(%993, %1083, %1084) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc586)
    %1086 = ttir.empty() : tensor<1x2560x40x40xbf16> loc(#loc402)
    %1087 = "ttir.concat"(%531, %533, %625, %717, %809, %901, %993, %1085, %1086) <{dim = -3 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x2560x40x40xbf16>) -> tensor<1x2560x40x40xbf16> loc(#loc402)
    %1088 = ttir.empty() : tensor<1x40x2560x40xbf16> loc(#loc842)
    %1089 = "ttir.transpose"(%1087, %1088) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x2560x40x40xbf16>, tensor<1x40x2560x40xbf16>) -> tensor<1x40x2560x40xbf16> loc(#loc842)
    %1090 = ttir.empty() : tensor<1x40x40x2560xbf16> loc(#loc843)
    %1091 = "ttir.transpose"(%1089, %1090) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x2560x40xbf16>, tensor<1x40x40x2560xbf16>) -> tensor<1x40x40x2560xbf16> loc(#loc843)
    %1092 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc844)
    %1093 = "ttir.conv2d"(%1091, %arg398, %1092) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x2560xbf16>, tensor<640x2560x1x1xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc844)
    %1094 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc845)
    %1095 = "ttir.transpose"(%1093, %1094) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc845)
    %1096 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc846)
    %1097 = "ttir.transpose"(%1095, %1096) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc846)
    %1098 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc118)
    %1099 = "ttir.multiply"(%1097, %arg118, %1098) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc118)
    %1100 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc119)
    %1101 = "ttir.add"(%1099, %arg119, %1100) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc119)
    %1102 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc588)
    %1103 = "ttir.sigmoid"(%1101, %1102) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc588)
    %1104 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc589)
    %1105 = "ttir.multiply"(%1101, %1103, %1104) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc589)
    %1106 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc847)
    %1107 = "ttir.transpose"(%1105, %1106) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc847)
    %1108 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc848)
    %1109 = "ttir.transpose"(%1107, %1108) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc848)
    %1110 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc849)
    %1111 = "ttir.conv2d"(%1109, %arg399, %1110) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<640x640x1x1xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc849)
    %1112 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc850)
    %1113 = "ttir.transpose"(%1111, %1112) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc850)
    %1114 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc851)
    %1115 = "ttir.transpose"(%1113, %1114) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc851)
    %1116 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc120)
    %1117 = "ttir.multiply"(%1115, %arg120, %1116) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc120)
    %1118 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc121)
    %1119 = "ttir.add"(%1117, %arg121, %1118) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc121)
    %1120 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc591)
    %1121 = "ttir.sigmoid"(%1119, %1120) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc591)
    %1122 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc592)
    %1123 = "ttir.multiply"(%1119, %1121, %1122) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc592)
    %1124 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc852)
    %1125 = "ttir.transpose"(%1123, %1124) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc852)
    %1126 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc853)
    %1127 = "ttir.transpose"(%1125, %1126) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc853)
    %1128 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc854)
    %1129 = "ttir.conv2d"(%1127, %arg400, %1128) <{dilation = array<i32: 1, 1>, groups = 640 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 2, 2>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<640x1x3x3xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc854)
    %1130 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc855)
    %1131 = "ttir.transpose"(%1129, %1130) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc855)
    %1132 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc856)
    %1133 = "ttir.transpose"(%1131, %1132) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc856)
    %1134 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc122)
    %1135 = "ttir.multiply"(%1133, %arg122, %1134) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc122)
    %1136 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc123)
    %1137 = "ttir.add"(%1135, %arg123, %1136) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc123)
    %1138 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc857)
    %1139 = "ttir.transpose"(%1137, %1138) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x20x20xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc857)
    %1140 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc858)
    %1141 = "ttir.transpose"(%1139, %1140) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc858)
    %1142 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc859)
    %1143 = "ttir.conv2d"(%1141, %arg401, %1142) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x640xbf16>, tensor<640x640x1x1xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc859)
    %1144 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc860)
    %1145 = "ttir.transpose"(%1143, %1144) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc860)
    %1146 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc861)
    %1147 = "ttir.transpose"(%1145, %1146) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc861)
    %1148 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc124)
    %1149 = "ttir.multiply"(%1147, %arg124, %1148) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc124)
    %1150 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc125)
    %1151 = "ttir.add"(%1149, %arg125, %1150) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc125)
    %1152 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc595)
    %1153 = "ttir.sigmoid"(%1151, %1152) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc595)
    %1154 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc596)
    %1155 = "ttir.multiply"(%1151, %1153, %1154) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc596)
    %1156 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc407)
    %1157 = "ttir.index"(%1155, %1156) <{begin = 0 : i32, dim = 1 : i32, end = 320 : i32, step = 1 : i32}> : (tensor<1x640x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc407)
    %1158 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc408)
    %1159 = "ttir.index"(%1155, %1158) <{begin = 320 : i32, dim = 1 : i32, end = 640 : i32, step = 1 : i32}> : (tensor<1x640x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc408)
    %1160 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1718)
    %1161 = "ttir.transpose"(%1159, %1160) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1718)
    %1162 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1719)
    %1163 = "ttir.transpose"(%1161, %1162) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1719)
    %1164 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1720)
    %1165 = "ttir.conv2d"(%1163, %arg402, %1164) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1720)
    %1166 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1721)
    %1167 = "ttir.transpose"(%1165, %1166) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1721)
    %1168 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1722)
    %1169 = "ttir.transpose"(%1167, %1168) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1722)
    %1170 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc126)
    %1171 = "ttir.multiply"(%1169, %arg126, %1170) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc126)
    %1172 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc127)
    %1173 = "ttir.add"(%1171, %arg127, %1172) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc127)
    %1174 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1268)
    %1175 = "ttir.sigmoid"(%1173, %1174) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1268)
    %1176 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1269)
    %1177 = "ttir.multiply"(%1173, %1175, %1176) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1269)
    %1178 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1723)
    %1179 = "ttir.transpose"(%1177, %1178) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1723)
    %1180 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1724)
    %1181 = "ttir.transpose"(%1179, %1180) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1724)
    %1182 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc1725)
    %1183 = "ttir.conv2d"(%1181, %arg403, %1182) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<640x320x1x1xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc1725)
    %1184 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc1726)
    %1185 = "ttir.transpose"(%1183, %1184) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc1726)
    %1186 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1727)
    %1187 = "ttir.transpose"(%1185, %1186) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1727)
    %1188 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc128)
    %1189 = "ttir.multiply"(%1187, %arg128, %1188) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc128)
    %1190 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc129)
    %1191 = "ttir.add"(%1189, %arg129, %1190) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc129)
    %1192 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1271)
    %1193 = "ttir.sigmoid"(%1191, %1192) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1271)
    %1194 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1272)
    %1195 = "ttir.multiply"(%1191, %1193, %1194) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1272)
    %1196 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc1728)
    %1197 = "ttir.transpose"(%1195, %1196) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x20x20xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc1728)
    %1198 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc1729)
    %1199 = "ttir.transpose"(%1197, %1198) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc1729)
    %1200 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc1730)
    %1201 = "ttir.conv2d"(%1199, %arg404, %1200) <{dilation = array<i32: 1, 1>, groups = 640 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x640xbf16>, tensor<640x1x3x3xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc1730)
    %1202 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc1731)
    %1203 = "ttir.transpose"(%1201, %1202) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc1731)
    %1204 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1732)
    %1205 = "ttir.transpose"(%1203, %1204) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1732)
    %1206 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc130)
    %1207 = "ttir.multiply"(%1205, %arg130, %1206) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc130)
    %1208 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc131)
    %1209 = "ttir.add"(%1207, %arg131, %1208) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc131)
    %1210 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1274)
    %1211 = "ttir.sigmoid"(%1209, %1210) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1274)
    %1212 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1275)
    %1213 = "ttir.multiply"(%1209, %1211, %1212) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1275)
    %1214 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc1733)
    %1215 = "ttir.transpose"(%1213, %1214) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x20x20xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc1733)
    %1216 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc1734)
    %1217 = "ttir.transpose"(%1215, %1216) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc1734)
    %1218 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1735)
    %1219 = "ttir.conv2d"(%1217, %arg405, %1218) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x640xbf16>, tensor<320x640x1x1xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1735)
    %1220 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1736)
    %1221 = "ttir.transpose"(%1219, %1220) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1736)
    %1222 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1737)
    %1223 = "ttir.transpose"(%1221, %1222) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1737)
    %1224 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc132)
    %1225 = "ttir.multiply"(%1223, %arg132, %1224) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc132)
    %1226 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc133)
    %1227 = "ttir.add"(%1225, %arg133, %1226) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc133)
    %1228 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1277)
    %1229 = "ttir.sigmoid"(%1227, %1228) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1277)
    %1230 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1278)
    %1231 = "ttir.multiply"(%1227, %1229, %1230) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1278)
    %1232 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1738)
    %1233 = "ttir.transpose"(%1231, %1232) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1738)
    %1234 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1739)
    %1235 = "ttir.transpose"(%1233, %1234) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1739)
    %1236 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1740)
    %1237 = "ttir.conv2d"(%1235, %arg406, %1236) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1740)
    %1238 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1741)
    %1239 = "ttir.transpose"(%1237, %1238) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1741)
    %1240 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1742)
    %1241 = "ttir.transpose"(%1239, %1240) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1742)
    %1242 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc134)
    %1243 = "ttir.multiply"(%1241, %arg134, %1242) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc134)
    %1244 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc135)
    %1245 = "ttir.add"(%1243, %arg135, %1244) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc135)
    %1246 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1280)
    %1247 = "ttir.sigmoid"(%1245, %1246) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1280)
    %1248 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1281)
    %1249 = "ttir.multiply"(%1245, %1247, %1248) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1281)
    %1250 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc598)
    %1251 = "ttir.add"(%1159, %1249, %1250) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc598)
    %1252 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1743)
    %1253 = "ttir.transpose"(%1251, %1252) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1743)
    %1254 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1744)
    %1255 = "ttir.transpose"(%1253, %1254) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1744)
    %1256 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1745)
    %1257 = "ttir.conv2d"(%1255, %arg407, %1256) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1745)
    %1258 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1746)
    %1259 = "ttir.transpose"(%1257, %1258) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1746)
    %1260 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1747)
    %1261 = "ttir.transpose"(%1259, %1260) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1747)
    %1262 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc136)
    %1263 = "ttir.multiply"(%1261, %arg136, %1262) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc136)
    %1264 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc137)
    %1265 = "ttir.add"(%1263, %arg137, %1264) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc137)
    %1266 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1283)
    %1267 = "ttir.sigmoid"(%1265, %1266) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1283)
    %1268 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1284)
    %1269 = "ttir.multiply"(%1265, %1267, %1268) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1284)
    %1270 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1748)
    %1271 = "ttir.transpose"(%1269, %1270) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1748)
    %1272 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1749)
    %1273 = "ttir.transpose"(%1271, %1272) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1749)
    %1274 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc1750)
    %1275 = "ttir.conv2d"(%1273, %arg408, %1274) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<640x320x1x1xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc1750)
    %1276 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc1751)
    %1277 = "ttir.transpose"(%1275, %1276) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc1751)
    %1278 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1752)
    %1279 = "ttir.transpose"(%1277, %1278) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1752)
    %1280 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc138)
    %1281 = "ttir.multiply"(%1279, %arg138, %1280) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc138)
    %1282 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc139)
    %1283 = "ttir.add"(%1281, %arg139, %1282) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc139)
    %1284 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1286)
    %1285 = "ttir.sigmoid"(%1283, %1284) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1286)
    %1286 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1287)
    %1287 = "ttir.multiply"(%1283, %1285, %1286) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1287)
    %1288 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc1753)
    %1289 = "ttir.transpose"(%1287, %1288) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x20x20xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc1753)
    %1290 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc1754)
    %1291 = "ttir.transpose"(%1289, %1290) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc1754)
    %1292 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc1755)
    %1293 = "ttir.conv2d"(%1291, %arg409, %1292) <{dilation = array<i32: 1, 1>, groups = 640 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x640xbf16>, tensor<640x1x3x3xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc1755)
    %1294 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc1756)
    %1295 = "ttir.transpose"(%1293, %1294) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc1756)
    %1296 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1757)
    %1297 = "ttir.transpose"(%1295, %1296) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1757)
    %1298 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc140)
    %1299 = "ttir.multiply"(%1297, %arg140, %1298) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc140)
    %1300 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc141)
    %1301 = "ttir.add"(%1299, %arg141, %1300) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc141)
    %1302 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1289)
    %1303 = "ttir.sigmoid"(%1301, %1302) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1289)
    %1304 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1290)
    %1305 = "ttir.multiply"(%1301, %1303, %1304) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1290)
    %1306 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc1758)
    %1307 = "ttir.transpose"(%1305, %1306) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x20x20xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc1758)
    %1308 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc1759)
    %1309 = "ttir.transpose"(%1307, %1308) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc1759)
    %1310 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1760)
    %1311 = "ttir.conv2d"(%1309, %arg410, %1310) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x640xbf16>, tensor<320x640x1x1xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1760)
    %1312 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1761)
    %1313 = "ttir.transpose"(%1311, %1312) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1761)
    %1314 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1762)
    %1315 = "ttir.transpose"(%1313, %1314) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1762)
    %1316 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc142)
    %1317 = "ttir.multiply"(%1315, %arg142, %1316) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc142)
    %1318 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc143)
    %1319 = "ttir.add"(%1317, %arg143, %1318) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc143)
    %1320 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1292)
    %1321 = "ttir.sigmoid"(%1319, %1320) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1292)
    %1322 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1293)
    %1323 = "ttir.multiply"(%1319, %1321, %1322) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1293)
    %1324 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1763)
    %1325 = "ttir.transpose"(%1323, %1324) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1763)
    %1326 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1764)
    %1327 = "ttir.transpose"(%1325, %1326) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1764)
    %1328 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1765)
    %1329 = "ttir.conv2d"(%1327, %arg411, %1328) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1765)
    %1330 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1766)
    %1331 = "ttir.transpose"(%1329, %1330) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1766)
    %1332 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1767)
    %1333 = "ttir.transpose"(%1331, %1332) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1767)
    %1334 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc144)
    %1335 = "ttir.multiply"(%1333, %arg144, %1334) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc144)
    %1336 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc145)
    %1337 = "ttir.add"(%1335, %arg145, %1336) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc145)
    %1338 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1295)
    %1339 = "ttir.sigmoid"(%1337, %1338) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1295)
    %1340 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1296)
    %1341 = "ttir.multiply"(%1337, %1339, %1340) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1296)
    %1342 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc600)
    %1343 = "ttir.add"(%1251, %1341, %1342) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc600)
    %1344 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1768)
    %1345 = "ttir.transpose"(%1343, %1344) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1768)
    %1346 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1769)
    %1347 = "ttir.transpose"(%1345, %1346) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1769)
    %1348 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1770)
    %1349 = "ttir.conv2d"(%1347, %arg412, %1348) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1770)
    %1350 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1771)
    %1351 = "ttir.transpose"(%1349, %1350) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1771)
    %1352 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1772)
    %1353 = "ttir.transpose"(%1351, %1352) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1772)
    %1354 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc146)
    %1355 = "ttir.multiply"(%1353, %arg146, %1354) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc146)
    %1356 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc147)
    %1357 = "ttir.add"(%1355, %arg147, %1356) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc147)
    %1358 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1298)
    %1359 = "ttir.sigmoid"(%1357, %1358) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1298)
    %1360 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1299)
    %1361 = "ttir.multiply"(%1357, %1359, %1360) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1299)
    %1362 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1773)
    %1363 = "ttir.transpose"(%1361, %1362) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1773)
    %1364 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1774)
    %1365 = "ttir.transpose"(%1363, %1364) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1774)
    %1366 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc1775)
    %1367 = "ttir.conv2d"(%1365, %arg413, %1366) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<640x320x1x1xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc1775)
    %1368 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc1776)
    %1369 = "ttir.transpose"(%1367, %1368) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc1776)
    %1370 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1777)
    %1371 = "ttir.transpose"(%1369, %1370) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1777)
    %1372 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc148)
    %1373 = "ttir.multiply"(%1371, %arg148, %1372) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc148)
    %1374 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc149)
    %1375 = "ttir.add"(%1373, %arg149, %1374) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc149)
    %1376 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1301)
    %1377 = "ttir.sigmoid"(%1375, %1376) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1301)
    %1378 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1302)
    %1379 = "ttir.multiply"(%1375, %1377, %1378) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1302)
    %1380 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc1778)
    %1381 = "ttir.transpose"(%1379, %1380) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x20x20xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc1778)
    %1382 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc1779)
    %1383 = "ttir.transpose"(%1381, %1382) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc1779)
    %1384 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc1780)
    %1385 = "ttir.conv2d"(%1383, %arg414, %1384) <{dilation = array<i32: 1, 1>, groups = 640 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x640xbf16>, tensor<640x1x3x3xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc1780)
    %1386 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc1781)
    %1387 = "ttir.transpose"(%1385, %1386) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc1781)
    %1388 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1782)
    %1389 = "ttir.transpose"(%1387, %1388) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1782)
    %1390 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc150)
    %1391 = "ttir.multiply"(%1389, %arg150, %1390) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc150)
    %1392 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc151)
    %1393 = "ttir.add"(%1391, %arg151, %1392) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc151)
    %1394 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1304)
    %1395 = "ttir.sigmoid"(%1393, %1394) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1304)
    %1396 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1305)
    %1397 = "ttir.multiply"(%1393, %1395, %1396) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1305)
    %1398 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc1783)
    %1399 = "ttir.transpose"(%1397, %1398) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x20x20xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc1783)
    %1400 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc1784)
    %1401 = "ttir.transpose"(%1399, %1400) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc1784)
    %1402 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1785)
    %1403 = "ttir.conv2d"(%1401, %arg415, %1402) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x640xbf16>, tensor<320x640x1x1xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1785)
    %1404 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1786)
    %1405 = "ttir.transpose"(%1403, %1404) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1786)
    %1406 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1787)
    %1407 = "ttir.transpose"(%1405, %1406) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1787)
    %1408 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc152)
    %1409 = "ttir.multiply"(%1407, %arg152, %1408) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc152)
    %1410 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc153)
    %1411 = "ttir.add"(%1409, %arg153, %1410) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc153)
    %1412 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1307)
    %1413 = "ttir.sigmoid"(%1411, %1412) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1307)
    %1414 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1308)
    %1415 = "ttir.multiply"(%1411, %1413, %1414) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1308)
    %1416 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1788)
    %1417 = "ttir.transpose"(%1415, %1416) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1788)
    %1418 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1789)
    %1419 = "ttir.transpose"(%1417, %1418) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1789)
    %1420 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1790)
    %1421 = "ttir.conv2d"(%1419, %arg416, %1420) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1790)
    %1422 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1791)
    %1423 = "ttir.transpose"(%1421, %1422) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1791)
    %1424 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1792)
    %1425 = "ttir.transpose"(%1423, %1424) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1792)
    %1426 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc154)
    %1427 = "ttir.multiply"(%1425, %arg154, %1426) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc154)
    %1428 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc155)
    %1429 = "ttir.add"(%1427, %arg155, %1428) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc155)
    %1430 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1310)
    %1431 = "ttir.sigmoid"(%1429, %1430) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1310)
    %1432 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1311)
    %1433 = "ttir.multiply"(%1429, %1431, %1432) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1311)
    %1434 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc602)
    %1435 = "ttir.add"(%1343, %1433, %1434) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc602)
    %1436 = ttir.empty() : tensor<1x1600x20x20xbf16> loc(#loc412)
    %1437 = "ttir.concat"(%1157, %1159, %1251, %1343, %1435, %1436) <{dim = -3 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x1600x20x20xbf16>) -> tensor<1x1600x20x20xbf16> loc(#loc412)
    %1438 = ttir.empty() : tensor<1x20x1600x20xbf16> loc(#loc877)
    %1439 = "ttir.transpose"(%1437, %1438) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x1600x20x20xbf16>, tensor<1x20x1600x20xbf16>) -> tensor<1x20x1600x20xbf16> loc(#loc877)
    %1440 = ttir.empty() : tensor<1x20x20x1600xbf16> loc(#loc878)
    %1441 = "ttir.transpose"(%1439, %1440) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x1600x20xbf16>, tensor<1x20x20x1600xbf16>) -> tensor<1x20x20x1600xbf16> loc(#loc878)
    %1442 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc879)
    %1443 = "ttir.conv2d"(%1441, %arg417, %1442) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x1600xbf16>, tensor<640x1600x1x1xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc879)
    %1444 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc880)
    %1445 = "ttir.transpose"(%1443, %1444) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc880)
    %1446 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc881)
    %1447 = "ttir.transpose"(%1445, %1446) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc881)
    %1448 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc156)
    %1449 = "ttir.multiply"(%1447, %arg156, %1448) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc156)
    %1450 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc157)
    %1451 = "ttir.add"(%1449, %arg157, %1450) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc157)
    %1452 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc604)
    %1453 = "ttir.sigmoid"(%1451, %1452) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc604)
    %1454 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc605)
    %1455 = "ttir.multiply"(%1451, %1453, %1454) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc605)
    %1456 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc882)
    %1457 = "ttir.transpose"(%1455, %1456) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x20x20xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc882)
    %1458 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc883)
    %1459 = "ttir.transpose"(%1457, %1458) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc883)
    %1460 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc884)
    %1461 = "ttir.conv2d"(%1459, %arg418, %1460) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x640xbf16>, tensor<320x640x1x1xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc884)
    %1462 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc885)
    %1463 = "ttir.transpose"(%1461, %1462) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc885)
    %1464 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc886)
    %1465 = "ttir.transpose"(%1463, %1464) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc886)
    %1466 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc158)
    %1467 = "ttir.multiply"(%1465, %arg158, %1466) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc158)
    %1468 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc159)
    %1469 = "ttir.add"(%1467, %arg159, %1468) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc159)
    %1470 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc607)
    %1471 = "ttir.sigmoid"(%1469, %1470) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc607)
    %1472 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc608)
    %1473 = "ttir.multiply"(%1469, %1471, %1472) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc608)
    %1474 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc609)
    %1475 = "ttir.transpose"(%1473, %1474) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc609)
    %1476 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc610)
    %1477 = "ttir.transpose"(%1475, %1476) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc610)
    %1478 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc611)
    %1479 = "ttir.max_pool2d"(%1477, %1478) <{ceil_mode = false, dilation_height = 1 : si32, dilation_width = 1 : si32, kernel_height = 5 : si32, kernel_width = 5 : si32, padding_bottom = 2 : si32, padding_left = 2 : si32, padding_right = 2 : si32, padding_top = 2 : si32, stride_height = 1 : si32, stride_width = 1 : si32}> {channel_last = true} : (tensor<1x20x20x320xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc611)
    %1480 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc612)
    %1481 = "ttir.transpose"(%1479, %1480) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc612)
    %1482 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc613)
    %1483 = "ttir.transpose"(%1481, %1482) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc613)
    %1484 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc416)
    %1485 = "ttir.transpose"(%1483, %1484) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc416)
    %1486 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc417)
    %1487 = "ttir.transpose"(%1485, %1486) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc417)
    %1488 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc418)
    %1489 = "ttir.max_pool2d"(%1487, %1488) <{ceil_mode = false, dilation_height = 1 : si32, dilation_width = 1 : si32, kernel_height = 5 : si32, kernel_width = 5 : si32, padding_bottom = 2 : si32, padding_left = 2 : si32, padding_right = 2 : si32, padding_top = 2 : si32, stride_height = 1 : si32, stride_width = 1 : si32}> {channel_last = true} : (tensor<1x20x20x320xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc418)
    %1490 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc419)
    %1491 = "ttir.transpose"(%1489, %1490) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc419)
    %1492 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc420)
    %1493 = "ttir.transpose"(%1491, %1492) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc420)
    %1494 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc421)
    %1495 = "ttir.transpose"(%1493, %1494) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc421)
    %1496 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc422)
    %1497 = "ttir.transpose"(%1495, %1496) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc422)
    %1498 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc423)
    %1499 = "ttir.max_pool2d"(%1497, %1498) <{ceil_mode = false, dilation_height = 1 : si32, dilation_width = 1 : si32, kernel_height = 5 : si32, kernel_width = 5 : si32, padding_bottom = 2 : si32, padding_left = 2 : si32, padding_right = 2 : si32, padding_top = 2 : si32, stride_height = 1 : si32, stride_width = 1 : si32}> {channel_last = true} : (tensor<1x20x20x320xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc423)
    %1500 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc424)
    %1501 = "ttir.transpose"(%1499, %1500) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc424)
    %1502 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc425)
    %1503 = "ttir.transpose"(%1501, %1502) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc425)
    %1504 = ttir.empty() : tensor<1x1280x20x20xbf16> loc(#loc426)
    %1505 = "ttir.concat"(%1473, %1483, %1493, %1503, %1504) <{dim = -3 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x1280x20x20xbf16>) -> tensor<1x1280x20x20xbf16> loc(#loc426)
    %1506 = ttir.empty() : tensor<1x20x1280x20xbf16> loc(#loc887)
    %1507 = "ttir.transpose"(%1505, %1506) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x1280x20x20xbf16>, tensor<1x20x1280x20xbf16>) -> tensor<1x20x1280x20xbf16> loc(#loc887)
    %1508 = ttir.empty() : tensor<1x20x20x1280xbf16> loc(#loc888)
    %1509 = "ttir.transpose"(%1507, %1508) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x1280x20xbf16>, tensor<1x20x20x1280xbf16>) -> tensor<1x20x20x1280xbf16> loc(#loc888)
    %1510 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc889)
    %1511 = "ttir.conv2d"(%1509, %arg419, %1510) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x1280xbf16>, tensor<640x1280x1x1xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc889)
    %1512 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc890)
    %1513 = "ttir.transpose"(%1511, %1512) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc890)
    %1514 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc891)
    %1515 = "ttir.transpose"(%1513, %1514) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc891)
    %1516 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc160)
    %1517 = "ttir.multiply"(%1515, %arg160, %1516) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc160)
    %1518 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc161)
    %1519 = "ttir.add"(%1517, %arg161, %1518) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc161)
    %1520 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc615)
    %1521 = "ttir.sigmoid"(%1519, %1520) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc615)
    %1522 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc616)
    %1523 = "ttir.multiply"(%1519, %1521, %1522) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc616)
    %1524 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc892)
    %1525 = "ttir.transpose"(%1523, %1524) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x20x20xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc892)
    %1526 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc893)
    %1527 = "ttir.transpose"(%1525, %1526) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc893)
    %1528 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc894)
    %1529 = "ttir.conv2d"(%1527, %arg420, %1528) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x640xbf16>, tensor<640x640x1x1xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc894)
    %1530 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc895)
    %1531 = "ttir.transpose"(%1529, %1530) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc895)
    %1532 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc896)
    %1533 = "ttir.transpose"(%1531, %1532) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc896)
    %1534 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc162)
    %1535 = "ttir.multiply"(%1533, %arg162, %1534) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc162)
    %1536 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc163)
    %1537 = "ttir.add"(%1535, %arg163, %1536) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc163)
    %1538 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc618)
    %1539 = "ttir.sigmoid"(%1537, %1538) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc618)
    %1540 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc619)
    %1541 = "ttir.multiply"(%1537, %1539, %1540) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc619)
    %1542 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc429)
    %1543 = "ttir.index"(%1541, %1542) <{begin = 0 : i32, dim = 1 : i32, end = 320 : i32, step = 1 : i32}> : (tensor<1x640x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc429)
    %1544 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc430)
    %1545 = "ttir.index"(%1541, %1544) <{begin = 320 : i32, dim = 1 : i32, end = 640 : i32, step = 1 : i32}> : (tensor<1x640x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc430)
    %1546 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1312)
    %1547 = "ttir.transpose"(%1545, %1546) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1312)
    %1548 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1313)
    %1549 = "ttir.transpose"(%1547, %1548) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1313)
    %1550 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc1314)
    %1551 = "ttir.conv2d"(%1549, %arg421, %1550) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<640x320x1x1xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc1314)
    %1552 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc1315)
    %1553 = "ttir.transpose"(%1551, %1552) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc1315)
    %1554 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1316)
    %1555 = "ttir.transpose"(%1553, %1554) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1316)
    %1556 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc164)
    %1557 = "ttir.multiply"(%1555, %arg164, %1556) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc164)
    %1558 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc165)
    %1559 = "ttir.add"(%1557, %arg165, %1558) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc165)
    %1560 = ttir.empty() : tensor<1x5x128x400xbf16> loc(#loc621)
    %1561 = "ttir.reshape"(%1559, %1560) <{shape = [1 : i32, 5 : i32, 128 : i32, 400 : i32]}> : (tensor<1x640x20x20xbf16>, tensor<1x5x128x400xbf16>) -> tensor<1x5x128x400xbf16> loc(#loc621)
    %1562 = ttir.empty() : tensor<1x5x64x400xbf16> loc(#loc622)
    %1563 = "ttir.index"(%1561, %1562) <{begin = 64 : i32, dim = 2 : i32, end = 128 : i32, step = 1 : i32}> : (tensor<1x5x128x400xbf16>, tensor<1x5x64x400xbf16>) -> tensor<1x5x64x400xbf16> loc(#loc622)
    %1564 = ttir.empty() : tensor<5x64x400xbf16> loc(#loc623)
    %1565 = "ttir.squeeze"(%1563, %1564) <{dim = 0 : si32}> : (tensor<1x5x64x400xbf16>, tensor<5x64x400xbf16>) -> tensor<5x64x400xbf16> loc(#loc623)
    %1566 = ttir.empty() : tensor<1x5x32x400xbf16> loc(#loc624)
    %1567 = "ttir.index"(%1561, %1566) <{begin = 0 : i32, dim = 2 : i32, end = 32 : i32, step = 1 : i32}> : (tensor<1x5x128x400xbf16>, tensor<1x5x32x400xbf16>) -> tensor<1x5x32x400xbf16> loc(#loc624)
    %1568 = ttir.empty() : tensor<1x5x400x32xbf16> loc(#loc625)
    %1569 = "ttir.transpose"(%1567, %1568) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x5x32x400xbf16>, tensor<1x5x400x32xbf16>) -> tensor<1x5x400x32xbf16> loc(#loc625)
    %1570 = ttir.empty() : tensor<5x400x32xbf16> loc(#loc626)
    %1571 = "ttir.squeeze"(%1569, %1570) <{dim = 0 : si32}> : (tensor<1x5x400x32xbf16>, tensor<5x400x32xbf16>) -> tensor<5x400x32xbf16> loc(#loc626)
    %1572 = ttir.empty() : tensor<1x5x32x400xbf16> loc(#loc627)
    %1573 = "ttir.index"(%1561, %1572) <{begin = 32 : i32, dim = 2 : i32, end = 64 : i32, step = 1 : i32}> : (tensor<1x5x128x400xbf16>, tensor<1x5x32x400xbf16>) -> tensor<1x5x32x400xbf16> loc(#loc627)
    %1574 = ttir.empty() : tensor<1x5x400x32xbf16> loc(#loc628)
    %1575 = "ttir.transpose"(%1573, %1574) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x5x32x400xbf16>, tensor<1x5x400x32xbf16>) -> tensor<1x5x400x32xbf16> loc(#loc628)
    %1576 = ttir.empty() : tensor<5x400x32xbf16> loc(#loc629)
    %1577 = "ttir.squeeze"(%1575, %1576) <{dim = 0 : si32}> : (tensor<1x5x400x32xbf16>, tensor<5x400x32xbf16>) -> tensor<5x400x32xbf16> loc(#loc629)
    %1578 = ttir.empty() : tensor<5x32x400xbf16> loc(#loc166)
    %1579 = "ttir.transpose"(%1577, %1578) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<5x400x32xbf16>, tensor<5x32x400xbf16>) -> tensor<5x32x400xbf16> loc(#loc166)
    %1580 = ttir.empty() : tensor<5x400x400xbf16> loc(#loc630)
    %1581 = "ttir.matmul"(%1571, %1579, %1580) <{transpose_a = false, transpose_b = false}> : (tensor<5x400x32xbf16>, tensor<5x32x400xbf16>, tensor<5x400x400xbf16>) -> tensor<5x400x400xbf16> loc(#loc630)
    %1582 = ttir.empty() : tensor<1x5x400x400xbf16> loc(#loc631)
    %1583 = "ttir.unsqueeze"(%1581, %1582) <{dim = 0 : si32}> : (tensor<5x400x400xbf16>, tensor<1x5x400x400xbf16>) -> tensor<1x5x400x400xbf16> loc(#loc631)
    %1584 = ttir.empty() : tensor<1x5x400x400xbf16> loc(#loc632)
    %1585 = "ttir.multiply"(%1583, %arg166, %1584) : (tensor<1x5x400x400xbf16>, tensor<1xbf16>, tensor<1x5x400x400xbf16>) -> tensor<1x5x400x400xbf16> loc(#loc632)
    %1586 = ttir.empty() : tensor<1x5x400x400xbf16> loc(#loc633)
    %1587 = "ttir.softmax"(%1585, %1586) <{dimension = -1 : si32}> : (tensor<1x5x400x400xbf16>, tensor<1x5x400x400xbf16>) -> tensor<1x5x400x400xbf16> loc(#loc633)
    %1588 = ttir.empty() : tensor<5x400x400xbf16> loc(#loc634)
    %1589 = "ttir.squeeze"(%1587, %1588) <{dim = 0 : si32}> : (tensor<1x5x400x400xbf16>, tensor<5x400x400xbf16>) -> tensor<5x400x400xbf16> loc(#loc634)
    %1590 = ttir.empty() : tensor<5x400x400xbf16> loc(#loc167)
    %1591 = "ttir.transpose"(%1589, %1590) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<5x400x400xbf16>, tensor<5x400x400xbf16>) -> tensor<5x400x400xbf16> loc(#loc167)
    %1592 = ttir.empty() : tensor<5x64x400xbf16> loc(#loc635)
    %1593 = "ttir.matmul"(%1565, %1591, %1592) <{transpose_a = false, transpose_b = false}> : (tensor<5x64x400xbf16>, tensor<5x400x400xbf16>, tensor<5x64x400xbf16>) -> tensor<5x64x400xbf16> loc(#loc635)
    %1594 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc636)
    %1595 = "ttir.reshape"(%1593, %1594) <{shape = [1 : i32, 320 : i32, 20 : i32, 20 : i32]}> : (tensor<5x64x400xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc636)
    %1596 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc637)
    %1597 = "ttir.reshape"(%1563, %1596) <{shape = [1 : i32, 320 : i32, 20 : i32, 20 : i32]}> : (tensor<1x5x64x400xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc637)
    %1598 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1317)
    %1599 = "ttir.transpose"(%1597, %1598) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1317)
    %1600 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1318)
    %1601 = "ttir.transpose"(%1599, %1600) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1318)
    %1602 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1319)
    %1603 = "ttir.conv2d"(%1601, %arg422, %1602) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1319)
    %1604 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1320)
    %1605 = "ttir.transpose"(%1603, %1604) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1320)
    %1606 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1321)
    %1607 = "ttir.transpose"(%1605, %1606) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1321)
    %1608 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc168)
    %1609 = "ttir.multiply"(%1607, %arg167, %1608) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc168)
    %1610 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc169)
    %1611 = "ttir.add"(%1609, %arg168, %1610) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc169)
    %1612 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc639)
    %1613 = "ttir.add"(%1595, %1611, %1612) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc639)
    %1614 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1322)
    %1615 = "ttir.transpose"(%1613, %1614) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1322)
    %1616 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1323)
    %1617 = "ttir.transpose"(%1615, %1616) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1323)
    %1618 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1324)
    %1619 = "ttir.conv2d"(%1617, %arg423, %1618) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x320x1x1xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1324)
    %1620 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1325)
    %1621 = "ttir.transpose"(%1619, %1620) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1325)
    %1622 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1326)
    %1623 = "ttir.transpose"(%1621, %1622) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1326)
    %1624 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc170)
    %1625 = "ttir.multiply"(%1623, %arg169, %1624) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc170)
    %1626 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc171)
    %1627 = "ttir.add"(%1625, %arg170, %1626) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc171)
    %1628 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc432)
    %1629 = "ttir.add"(%1545, %1627, %1628) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc432)
    %1630 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1327)
    %1631 = "ttir.transpose"(%1629, %1630) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1327)
    %1632 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1328)
    %1633 = "ttir.transpose"(%1631, %1632) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1328)
    %1634 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc1329)
    %1635 = "ttir.conv2d"(%1633, %arg424, %1634) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<640x320x1x1xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc1329)
    %1636 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc1330)
    %1637 = "ttir.transpose"(%1635, %1636) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc1330)
    %1638 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1331)
    %1639 = "ttir.transpose"(%1637, %1638) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1331)
    %1640 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc172)
    %1641 = "ttir.multiply"(%1639, %arg171, %1640) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc172)
    %1642 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc173)
    %1643 = "ttir.add"(%1641, %arg172, %1642) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc173)
    %1644 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc901)
    %1645 = "ttir.sigmoid"(%1643, %1644) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc901)
    %1646 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc902)
    %1647 = "ttir.multiply"(%1643, %1645, %1646) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc902)
    %1648 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc1332)
    %1649 = "ttir.transpose"(%1647, %1648) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x20x20xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc1332)
    %1650 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc1333)
    %1651 = "ttir.transpose"(%1649, %1650) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc1333)
    %1652 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1334)
    %1653 = "ttir.conv2d"(%1651, %arg425, %1652) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x640xbf16>, tensor<320x640x1x1xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1334)
    %1654 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1335)
    %1655 = "ttir.transpose"(%1653, %1654) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1335)
    %1656 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1336)
    %1657 = "ttir.transpose"(%1655, %1656) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1336)
    %1658 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc174)
    %1659 = "ttir.multiply"(%1657, %arg173, %1658) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc174)
    %1660 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc175)
    %1661 = "ttir.add"(%1659, %arg174, %1660) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc175)
    %1662 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc434)
    %1663 = "ttir.add"(%1629, %1661, %1662) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc434)
    %1664 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc435)
    %1665 = "ttir.concat"(%1543, %1663, %1664) <{dim = -3 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc435)
    %1666 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc904)
    %1667 = "ttir.transpose"(%1665, %1666) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x20x20xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc904)
    %1668 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc905)
    %1669 = "ttir.transpose"(%1667, %1668) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc905)
    %1670 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc906)
    %1671 = "ttir.conv2d"(%1669, %arg426, %1670) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x640xbf16>, tensor<640x640x1x1xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc906)
    %1672 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc907)
    %1673 = "ttir.transpose"(%1671, %1672) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc907)
    %1674 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc908)
    %1675 = "ttir.transpose"(%1673, %1674) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc908)
    %1676 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc176)
    %1677 = "ttir.multiply"(%1675, %arg175, %1676) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc176)
    %1678 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc177)
    %1679 = "ttir.add"(%1677, %arg176, %1678) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc177)
    %1680 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc644)
    %1681 = "ttir.sigmoid"(%1679, %1680) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc644)
    %1682 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc645)
    %1683 = "ttir.multiply"(%1679, %1681, %1682) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc645)
    %1684 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc437)
    %1685 = "ttir.transpose"(%1683, %1684) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x20x20xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc437)
    %1686 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc438)
    %1687 = "ttir.transpose"(%1685, %1686) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc438)
    %1688 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc439)
    %1689 = "ttir.upsample2d"(%1687, %1688) <{mode = "nearest", scale_factor = 2 : si32}> {channel_last = true} : (tensor<1x20x20x640xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc439)
    %1690 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc440)
    %1691 = "ttir.transpose"(%1689, %1690) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc440)
    %1692 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc441)
    %1693 = "ttir.transpose"(%1691, %1692) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc441)
    %1694 = ttir.empty() : tensor<1x1280x40x40xbf16> loc(#loc442)
    %1695 = "ttir.concat"(%1693, %1105, %1694) <{dim = -3 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x1280x40x40xbf16>) -> tensor<1x1280x40x40xbf16> loc(#loc442)
    %1696 = ttir.empty() : tensor<1x40x1280x40xbf16> loc(#loc909)
    %1697 = "ttir.transpose"(%1695, %1696) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x1280x40x40xbf16>, tensor<1x40x1280x40xbf16>) -> tensor<1x40x1280x40xbf16> loc(#loc909)
    %1698 = ttir.empty() : tensor<1x40x40x1280xbf16> loc(#loc910)
    %1699 = "ttir.transpose"(%1697, %1698) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x1280x40xbf16>, tensor<1x40x40x1280xbf16>) -> tensor<1x40x40x1280xbf16> loc(#loc910)
    %1700 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc911)
    %1701 = "ttir.conv2d"(%1699, %arg427, %1700) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x1280xbf16>, tensor<640x1280x1x1xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc911)
    %1702 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc912)
    %1703 = "ttir.transpose"(%1701, %1702) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc912)
    %1704 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc913)
    %1705 = "ttir.transpose"(%1703, %1704) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc913)
    %1706 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc178)
    %1707 = "ttir.multiply"(%1705, %arg177, %1706) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc178)
    %1708 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc179)
    %1709 = "ttir.add"(%1707, %arg178, %1708) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc179)
    %1710 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc647)
    %1711 = "ttir.sigmoid"(%1709, %1710) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc647)
    %1712 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc648)
    %1713 = "ttir.multiply"(%1709, %1711, %1712) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc648)
    %1714 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc444)
    %1715 = "ttir.index"(%1713, %1714) <{begin = 0 : i32, dim = 1 : i32, end = 320 : i32, step = 1 : i32}> : (tensor<1x640x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc444)
    %1716 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc445)
    %1717 = "ttir.index"(%1713, %1716) <{begin = 320 : i32, dim = 1 : i32, end = 640 : i32, step = 1 : i32}> : (tensor<1x640x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc445)
    %1718 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1793)
    %1719 = "ttir.transpose"(%1717, %1718) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1793)
    %1720 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1794)
    %1721 = "ttir.transpose"(%1719, %1720) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1794)
    %1722 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1795)
    %1723 = "ttir.conv2d"(%1721, %arg428, %1722) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1795)
    %1724 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1796)
    %1725 = "ttir.transpose"(%1723, %1724) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1796)
    %1726 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1797)
    %1727 = "ttir.transpose"(%1725, %1726) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1797)
    %1728 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc180)
    %1729 = "ttir.multiply"(%1727, %arg179, %1728) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc180)
    %1730 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc181)
    %1731 = "ttir.add"(%1729, %arg180, %1730) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc181)
    %1732 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1338)
    %1733 = "ttir.sigmoid"(%1731, %1732) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1338)
    %1734 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1339)
    %1735 = "ttir.multiply"(%1731, %1733, %1734) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1339)
    %1736 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1798)
    %1737 = "ttir.transpose"(%1735, %1736) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1798)
    %1738 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1799)
    %1739 = "ttir.transpose"(%1737, %1738) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1799)
    %1740 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1800)
    %1741 = "ttir.conv2d"(%1739, %arg429, %1740) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<640x320x1x1xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1800)
    %1742 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1801)
    %1743 = "ttir.transpose"(%1741, %1742) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1801)
    %1744 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1802)
    %1745 = "ttir.transpose"(%1743, %1744) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1802)
    %1746 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc182)
    %1747 = "ttir.multiply"(%1745, %arg181, %1746) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc182)
    %1748 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc183)
    %1749 = "ttir.add"(%1747, %arg182, %1748) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc183)
    %1750 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1341)
    %1751 = "ttir.sigmoid"(%1749, %1750) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1341)
    %1752 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1342)
    %1753 = "ttir.multiply"(%1749, %1751, %1752) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1342)
    %1754 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1803)
    %1755 = "ttir.transpose"(%1753, %1754) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1803)
    %1756 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1804)
    %1757 = "ttir.transpose"(%1755, %1756) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1804)
    %1758 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1805)
    %1759 = "ttir.conv2d"(%1757, %arg430, %1758) <{dilation = array<i32: 1, 1>, groups = 640 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<640x1x3x3xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1805)
    %1760 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1806)
    %1761 = "ttir.transpose"(%1759, %1760) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1806)
    %1762 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1807)
    %1763 = "ttir.transpose"(%1761, %1762) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1807)
    %1764 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc184)
    %1765 = "ttir.multiply"(%1763, %arg183, %1764) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc184)
    %1766 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc185)
    %1767 = "ttir.add"(%1765, %arg184, %1766) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc185)
    %1768 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1344)
    %1769 = "ttir.sigmoid"(%1767, %1768) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1344)
    %1770 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1345)
    %1771 = "ttir.multiply"(%1767, %1769, %1770) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1345)
    %1772 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1808)
    %1773 = "ttir.transpose"(%1771, %1772) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1808)
    %1774 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1809)
    %1775 = "ttir.transpose"(%1773, %1774) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1809)
    %1776 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1810)
    %1777 = "ttir.conv2d"(%1775, %arg431, %1776) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<320x640x1x1xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1810)
    %1778 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1811)
    %1779 = "ttir.transpose"(%1777, %1778) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1811)
    %1780 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1812)
    %1781 = "ttir.transpose"(%1779, %1780) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1812)
    %1782 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc186)
    %1783 = "ttir.multiply"(%1781, %arg185, %1782) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc186)
    %1784 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc187)
    %1785 = "ttir.add"(%1783, %arg186, %1784) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc187)
    %1786 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1347)
    %1787 = "ttir.sigmoid"(%1785, %1786) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1347)
    %1788 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1348)
    %1789 = "ttir.multiply"(%1785, %1787, %1788) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1348)
    %1790 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1813)
    %1791 = "ttir.transpose"(%1789, %1790) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1813)
    %1792 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1814)
    %1793 = "ttir.transpose"(%1791, %1792) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1814)
    %1794 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1815)
    %1795 = "ttir.conv2d"(%1793, %arg432, %1794) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1815)
    %1796 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1816)
    %1797 = "ttir.transpose"(%1795, %1796) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1816)
    %1798 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1817)
    %1799 = "ttir.transpose"(%1797, %1798) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1817)
    %1800 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc188)
    %1801 = "ttir.multiply"(%1799, %arg187, %1800) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc188)
    %1802 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc189)
    %1803 = "ttir.add"(%1801, %arg188, %1802) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc189)
    %1804 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1350)
    %1805 = "ttir.sigmoid"(%1803, %1804) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1350)
    %1806 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1351)
    %1807 = "ttir.multiply"(%1803, %1805, %1806) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1351)
    %1808 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc650)
    %1809 = "ttir.add"(%1717, %1807, %1808) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc650)
    %1810 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1818)
    %1811 = "ttir.transpose"(%1809, %1810) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1818)
    %1812 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1819)
    %1813 = "ttir.transpose"(%1811, %1812) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1819)
    %1814 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1820)
    %1815 = "ttir.conv2d"(%1813, %arg433, %1814) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1820)
    %1816 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1821)
    %1817 = "ttir.transpose"(%1815, %1816) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1821)
    %1818 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1822)
    %1819 = "ttir.transpose"(%1817, %1818) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1822)
    %1820 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc190)
    %1821 = "ttir.multiply"(%1819, %arg189, %1820) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc190)
    %1822 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc191)
    %1823 = "ttir.add"(%1821, %arg190, %1822) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc191)
    %1824 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1353)
    %1825 = "ttir.sigmoid"(%1823, %1824) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1353)
    %1826 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1354)
    %1827 = "ttir.multiply"(%1823, %1825, %1826) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1354)
    %1828 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1823)
    %1829 = "ttir.transpose"(%1827, %1828) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1823)
    %1830 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1824)
    %1831 = "ttir.transpose"(%1829, %1830) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1824)
    %1832 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1825)
    %1833 = "ttir.conv2d"(%1831, %arg434, %1832) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<640x320x1x1xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1825)
    %1834 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1826)
    %1835 = "ttir.transpose"(%1833, %1834) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1826)
    %1836 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1827)
    %1837 = "ttir.transpose"(%1835, %1836) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1827)
    %1838 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc192)
    %1839 = "ttir.multiply"(%1837, %arg191, %1838) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc192)
    %1840 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc193)
    %1841 = "ttir.add"(%1839, %arg192, %1840) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc193)
    %1842 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1356)
    %1843 = "ttir.sigmoid"(%1841, %1842) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1356)
    %1844 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1357)
    %1845 = "ttir.multiply"(%1841, %1843, %1844) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1357)
    %1846 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1828)
    %1847 = "ttir.transpose"(%1845, %1846) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1828)
    %1848 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1829)
    %1849 = "ttir.transpose"(%1847, %1848) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1829)
    %1850 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1830)
    %1851 = "ttir.conv2d"(%1849, %arg435, %1850) <{dilation = array<i32: 1, 1>, groups = 640 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<640x1x3x3xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1830)
    %1852 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1831)
    %1853 = "ttir.transpose"(%1851, %1852) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1831)
    %1854 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1832)
    %1855 = "ttir.transpose"(%1853, %1854) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1832)
    %1856 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc194)
    %1857 = "ttir.multiply"(%1855, %arg193, %1856) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc194)
    %1858 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc195)
    %1859 = "ttir.add"(%1857, %arg194, %1858) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc195)
    %1860 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1359)
    %1861 = "ttir.sigmoid"(%1859, %1860) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1359)
    %1862 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1360)
    %1863 = "ttir.multiply"(%1859, %1861, %1862) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1360)
    %1864 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1833)
    %1865 = "ttir.transpose"(%1863, %1864) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1833)
    %1866 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1834)
    %1867 = "ttir.transpose"(%1865, %1866) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1834)
    %1868 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1835)
    %1869 = "ttir.conv2d"(%1867, %arg436, %1868) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<320x640x1x1xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1835)
    %1870 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1836)
    %1871 = "ttir.transpose"(%1869, %1870) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1836)
    %1872 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1837)
    %1873 = "ttir.transpose"(%1871, %1872) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1837)
    %1874 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc196)
    %1875 = "ttir.multiply"(%1873, %arg195, %1874) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc196)
    %1876 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc197)
    %1877 = "ttir.add"(%1875, %arg196, %1876) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc197)
    %1878 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1362)
    %1879 = "ttir.sigmoid"(%1877, %1878) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1362)
    %1880 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1363)
    %1881 = "ttir.multiply"(%1877, %1879, %1880) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1363)
    %1882 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1838)
    %1883 = "ttir.transpose"(%1881, %1882) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1838)
    %1884 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1839)
    %1885 = "ttir.transpose"(%1883, %1884) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1839)
    %1886 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1840)
    %1887 = "ttir.conv2d"(%1885, %arg437, %1886) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1840)
    %1888 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1841)
    %1889 = "ttir.transpose"(%1887, %1888) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1841)
    %1890 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1842)
    %1891 = "ttir.transpose"(%1889, %1890) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1842)
    %1892 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc198)
    %1893 = "ttir.multiply"(%1891, %arg197, %1892) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc198)
    %1894 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc199)
    %1895 = "ttir.add"(%1893, %arg198, %1894) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc199)
    %1896 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1365)
    %1897 = "ttir.sigmoid"(%1895, %1896) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1365)
    %1898 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1366)
    %1899 = "ttir.multiply"(%1895, %1897, %1898) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1366)
    %1900 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc652)
    %1901 = "ttir.add"(%1809, %1899, %1900) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc652)
    %1902 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1843)
    %1903 = "ttir.transpose"(%1901, %1902) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1843)
    %1904 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1844)
    %1905 = "ttir.transpose"(%1903, %1904) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1844)
    %1906 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1845)
    %1907 = "ttir.conv2d"(%1905, %arg438, %1906) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1845)
    %1908 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1846)
    %1909 = "ttir.transpose"(%1907, %1908) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1846)
    %1910 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1847)
    %1911 = "ttir.transpose"(%1909, %1910) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1847)
    %1912 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc200)
    %1913 = "ttir.multiply"(%1911, %arg199, %1912) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc200)
    %1914 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc201)
    %1915 = "ttir.add"(%1913, %arg200, %1914) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc201)
    %1916 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1368)
    %1917 = "ttir.sigmoid"(%1915, %1916) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1368)
    %1918 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1369)
    %1919 = "ttir.multiply"(%1915, %1917, %1918) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1369)
    %1920 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1848)
    %1921 = "ttir.transpose"(%1919, %1920) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1848)
    %1922 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1849)
    %1923 = "ttir.transpose"(%1921, %1922) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1849)
    %1924 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1850)
    %1925 = "ttir.conv2d"(%1923, %arg439, %1924) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<640x320x1x1xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1850)
    %1926 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1851)
    %1927 = "ttir.transpose"(%1925, %1926) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1851)
    %1928 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1852)
    %1929 = "ttir.transpose"(%1927, %1928) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1852)
    %1930 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc202)
    %1931 = "ttir.multiply"(%1929, %arg201, %1930) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc202)
    %1932 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc203)
    %1933 = "ttir.add"(%1931, %arg202, %1932) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc203)
    %1934 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1371)
    %1935 = "ttir.sigmoid"(%1933, %1934) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1371)
    %1936 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1372)
    %1937 = "ttir.multiply"(%1933, %1935, %1936) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1372)
    %1938 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1853)
    %1939 = "ttir.transpose"(%1937, %1938) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1853)
    %1940 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1854)
    %1941 = "ttir.transpose"(%1939, %1940) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1854)
    %1942 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1855)
    %1943 = "ttir.conv2d"(%1941, %arg440, %1942) <{dilation = array<i32: 1, 1>, groups = 640 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<640x1x3x3xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1855)
    %1944 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1856)
    %1945 = "ttir.transpose"(%1943, %1944) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1856)
    %1946 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1857)
    %1947 = "ttir.transpose"(%1945, %1946) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1857)
    %1948 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc204)
    %1949 = "ttir.multiply"(%1947, %arg203, %1948) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc204)
    %1950 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc205)
    %1951 = "ttir.add"(%1949, %arg204, %1950) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc205)
    %1952 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1374)
    %1953 = "ttir.sigmoid"(%1951, %1952) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1374)
    %1954 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1375)
    %1955 = "ttir.multiply"(%1951, %1953, %1954) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1375)
    %1956 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1858)
    %1957 = "ttir.transpose"(%1955, %1956) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1858)
    %1958 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1859)
    %1959 = "ttir.transpose"(%1957, %1958) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1859)
    %1960 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1860)
    %1961 = "ttir.conv2d"(%1959, %arg441, %1960) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<320x640x1x1xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1860)
    %1962 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1861)
    %1963 = "ttir.transpose"(%1961, %1962) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1861)
    %1964 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1862)
    %1965 = "ttir.transpose"(%1963, %1964) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1862)
    %1966 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc206)
    %1967 = "ttir.multiply"(%1965, %arg205, %1966) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc206)
    %1968 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc207)
    %1969 = "ttir.add"(%1967, %arg206, %1968) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc207)
    %1970 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1377)
    %1971 = "ttir.sigmoid"(%1969, %1970) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1377)
    %1972 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1378)
    %1973 = "ttir.multiply"(%1969, %1971, %1972) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1378)
    %1974 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1863)
    %1975 = "ttir.transpose"(%1973, %1974) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1863)
    %1976 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1864)
    %1977 = "ttir.transpose"(%1975, %1976) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1864)
    %1978 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1865)
    %1979 = "ttir.conv2d"(%1977, %arg442, %1978) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1865)
    %1980 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1866)
    %1981 = "ttir.transpose"(%1979, %1980) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1866)
    %1982 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1867)
    %1983 = "ttir.transpose"(%1981, %1982) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1867)
    %1984 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc208)
    %1985 = "ttir.multiply"(%1983, %arg207, %1984) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc208)
    %1986 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc209)
    %1987 = "ttir.add"(%1985, %arg208, %1986) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc209)
    %1988 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1380)
    %1989 = "ttir.sigmoid"(%1987, %1988) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1380)
    %1990 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1381)
    %1991 = "ttir.multiply"(%1987, %1989, %1990) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1381)
    %1992 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc654)
    %1993 = "ttir.add"(%1901, %1991, %1992) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc654)
    %1994 = ttir.empty() : tensor<1x1600x40x40xbf16> loc(#loc449)
    %1995 = "ttir.concat"(%1715, %1717, %1809, %1901, %1993, %1994) <{dim = -3 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x1600x40x40xbf16>) -> tensor<1x1600x40x40xbf16> loc(#loc449)
    %1996 = ttir.empty() : tensor<1x40x1600x40xbf16> loc(#loc929)
    %1997 = "ttir.transpose"(%1995, %1996) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x1600x40x40xbf16>, tensor<1x40x1600x40xbf16>) -> tensor<1x40x1600x40xbf16> loc(#loc929)
    %1998 = ttir.empty() : tensor<1x40x40x1600xbf16> loc(#loc930)
    %1999 = "ttir.transpose"(%1997, %1998) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x1600x40xbf16>, tensor<1x40x40x1600xbf16>) -> tensor<1x40x40x1600xbf16> loc(#loc930)
    %2000 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc931)
    %2001 = "ttir.conv2d"(%1999, %arg443, %2000) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x1600xbf16>, tensor<640x1600x1x1xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc931)
    %2002 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc932)
    %2003 = "ttir.transpose"(%2001, %2002) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc932)
    %2004 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc933)
    %2005 = "ttir.transpose"(%2003, %2004) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc933)
    %2006 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc210)
    %2007 = "ttir.multiply"(%2005, %arg209, %2006) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc210)
    %2008 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc211)
    %2009 = "ttir.add"(%2007, %arg210, %2008) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc211)
    %2010 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc656)
    %2011 = "ttir.sigmoid"(%2009, %2010) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc656)
    %2012 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc657)
    %2013 = "ttir.multiply"(%2009, %2011, %2012) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc657)
    %2014 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc451)
    %2015 = "ttir.transpose"(%2013, %2014) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc451)
    %2016 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc452)
    %2017 = "ttir.transpose"(%2015, %2016) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc452)
    %2018 = ttir.empty() : tensor<1x80x80x640xbf16> loc(#loc453)
    %2019 = "ttir.upsample2d"(%2017, %2018) <{mode = "nearest", scale_factor = 2 : si32}> {channel_last = true} : (tensor<1x40x40x640xbf16>, tensor<1x80x80x640xbf16>) -> tensor<1x80x80x640xbf16> loc(#loc453)
    %2020 = ttir.empty() : tensor<1x80x640x80xbf16> loc(#loc454)
    %2021 = "ttir.transpose"(%2019, %2020) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x640xbf16>, tensor<1x80x640x80xbf16>) -> tensor<1x80x640x80xbf16> loc(#loc454)
    %2022 = ttir.empty() : tensor<1x640x80x80xbf16> loc(#loc455)
    %2023 = "ttir.transpose"(%2021, %2022) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x640x80xbf16>, tensor<1x640x80x80xbf16>) -> tensor<1x640x80x80xbf16> loc(#loc455)
    %2024 = ttir.empty() : tensor<1x960x80x80xbf16> loc(#loc456)
    %2025 = "ttir.concat"(%2023, %479, %2024) <{dim = -3 : si32}> : (tensor<1x640x80x80xbf16>, tensor<1x320x80x80xbf16>, tensor<1x960x80x80xbf16>) -> tensor<1x960x80x80xbf16> loc(#loc456)
    %2026 = ttir.empty() : tensor<1x80x960x80xbf16> loc(#loc934)
    %2027 = "ttir.transpose"(%2025, %2026) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x960x80x80xbf16>, tensor<1x80x960x80xbf16>) -> tensor<1x80x960x80xbf16> loc(#loc934)
    %2028 = ttir.empty() : tensor<1x80x80x960xbf16> loc(#loc935)
    %2029 = "ttir.transpose"(%2027, %2028) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x960x80xbf16>, tensor<1x80x80x960xbf16>) -> tensor<1x80x80x960xbf16> loc(#loc935)
    %2030 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc936)
    %2031 = "ttir.conv2d"(%2029, %arg444, %2030) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x960xbf16>, tensor<320x960x1x1xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc936)
    %2032 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc937)
    %2033 = "ttir.transpose"(%2031, %2032) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x320xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc937)
    %2034 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc938)
    %2035 = "ttir.transpose"(%2033, %2034) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc938)
    %2036 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc212)
    %2037 = "ttir.multiply"(%2035, %arg211, %2036) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc212)
    %2038 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc213)
    %2039 = "ttir.add"(%2037, %arg212, %2038) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc213)
    %2040 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc659)
    %2041 = "ttir.sigmoid"(%2039, %2040) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc659)
    %2042 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc660)
    %2043 = "ttir.multiply"(%2039, %2041, %2042) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc660)
    %2044 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc458)
    %2045 = "ttir.index"(%2043, %2044) <{begin = 0 : i32, dim = 1 : i32, end = 160 : i32, step = 1 : i32}> : (tensor<1x320x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc458)
    %2046 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc459)
    %2047 = "ttir.index"(%2043, %2046) <{begin = 160 : i32, dim = 1 : i32, end = 320 : i32, step = 1 : i32}> : (tensor<1x320x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc459)
    %2048 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1382)
    %2049 = "ttir.transpose"(%2047, %2048) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1382)
    %2050 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1383)
    %2051 = "ttir.transpose"(%2049, %2050) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1383)
    %2052 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1384)
    %2053 = "ttir.conv2d"(%2051, %arg445, %2052) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1384)
    %2054 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1385)
    %2055 = "ttir.transpose"(%2053, %2054) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1385)
    %2056 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc1386)
    %2057 = "ttir.transpose"(%2055, %2056) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc1386)
    %2058 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc214)
    %2059 = "ttir.multiply"(%2057, %arg213, %2058) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc214)
    %2060 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc215)
    %2061 = "ttir.add"(%2059, %arg214, %2060) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc215)
    %2062 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc940)
    %2063 = "ttir.sigmoid"(%2061, %2062) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc940)
    %2064 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc941)
    %2065 = "ttir.multiply"(%2061, %2063, %2064) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc941)
    %2066 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1387)
    %2067 = "ttir.transpose"(%2065, %2066) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1387)
    %2068 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1388)
    %2069 = "ttir.transpose"(%2067, %2068) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1388)
    %2070 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1389)
    %2071 = "ttir.conv2d"(%2069, %arg446, %2070) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1389)
    %2072 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1390)
    %2073 = "ttir.transpose"(%2071, %2072) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1390)
    %2074 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc1391)
    %2075 = "ttir.transpose"(%2073, %2074) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc1391)
    %2076 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc216)
    %2077 = "ttir.multiply"(%2075, %arg215, %2076) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc216)
    %2078 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc217)
    %2079 = "ttir.add"(%2077, %arg216, %2078) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc217)
    %2080 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc943)
    %2081 = "ttir.sigmoid"(%2079, %2080) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc943)
    %2082 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc944)
    %2083 = "ttir.multiply"(%2079, %2081, %2082) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc944)
    %2084 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1392)
    %2085 = "ttir.transpose"(%2083, %2084) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1392)
    %2086 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1393)
    %2087 = "ttir.transpose"(%2085, %2086) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1393)
    %2088 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1394)
    %2089 = "ttir.conv2d"(%2087, %arg447, %2088) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1394)
    %2090 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1395)
    %2091 = "ttir.transpose"(%2089, %2090) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1395)
    %2092 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc1396)
    %2093 = "ttir.transpose"(%2091, %2092) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc1396)
    %2094 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc218)
    %2095 = "ttir.multiply"(%2093, %arg217, %2094) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc218)
    %2096 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc219)
    %2097 = "ttir.add"(%2095, %arg218, %2096) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc219)
    %2098 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc946)
    %2099 = "ttir.sigmoid"(%2097, %2098) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc946)
    %2100 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc947)
    %2101 = "ttir.multiply"(%2097, %2099, %2100) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc947)
    %2102 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1397)
    %2103 = "ttir.transpose"(%2101, %2102) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1397)
    %2104 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1398)
    %2105 = "ttir.transpose"(%2103, %2104) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1398)
    %2106 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1399)
    %2107 = "ttir.conv2d"(%2105, %arg448, %2106) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1399)
    %2108 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1400)
    %2109 = "ttir.transpose"(%2107, %2108) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1400)
    %2110 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc1401)
    %2111 = "ttir.transpose"(%2109, %2110) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc1401)
    %2112 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc220)
    %2113 = "ttir.multiply"(%2111, %arg219, %2112) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc220)
    %2114 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc221)
    %2115 = "ttir.add"(%2113, %arg220, %2114) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc221)
    %2116 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc949)
    %2117 = "ttir.sigmoid"(%2115, %2116) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc949)
    %2118 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc950)
    %2119 = "ttir.multiply"(%2115, %2117, %2118) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc950)
    %2120 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1402)
    %2121 = "ttir.transpose"(%2119, %2120) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1402)
    %2122 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1403)
    %2123 = "ttir.transpose"(%2121, %2122) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1403)
    %2124 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1404)
    %2125 = "ttir.conv2d"(%2123, %arg449, %2124) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1404)
    %2126 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1405)
    %2127 = "ttir.transpose"(%2125, %2126) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1405)
    %2128 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc1406)
    %2129 = "ttir.transpose"(%2127, %2128) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc1406)
    %2130 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc222)
    %2131 = "ttir.multiply"(%2129, %arg221, %2130) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc222)
    %2132 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc223)
    %2133 = "ttir.add"(%2131, %arg222, %2132) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc223)
    %2134 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc952)
    %2135 = "ttir.sigmoid"(%2133, %2134) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc952)
    %2136 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc953)
    %2137 = "ttir.multiply"(%2133, %2135, %2136) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc953)
    %2138 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1407)
    %2139 = "ttir.transpose"(%2137, %2138) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1407)
    %2140 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1408)
    %2141 = "ttir.transpose"(%2139, %2140) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1408)
    %2142 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1409)
    %2143 = "ttir.conv2d"(%2141, %arg450, %2142) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1409)
    %2144 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1410)
    %2145 = "ttir.transpose"(%2143, %2144) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1410)
    %2146 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc1411)
    %2147 = "ttir.transpose"(%2145, %2146) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc1411)
    %2148 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc224)
    %2149 = "ttir.multiply"(%2147, %arg223, %2148) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc224)
    %2150 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc225)
    %2151 = "ttir.add"(%2149, %arg224, %2150) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc225)
    %2152 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc955)
    %2153 = "ttir.sigmoid"(%2151, %2152) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc955)
    %2154 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc956)
    %2155 = "ttir.multiply"(%2151, %2153, %2154) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc956)
    %2156 = ttir.empty() : tensor<1x800x80x80xbf16> loc(#loc463)
    %2157 = "ttir.concat"(%2045, %2047, %2083, %2119, %2155, %2156) <{dim = -3 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x800x80x80xbf16>) -> tensor<1x800x80x80xbf16> loc(#loc463)
    %2158 = ttir.empty() : tensor<1x80x800x80xbf16> loc(#loc957)
    %2159 = "ttir.transpose"(%2157, %2158) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x800x80x80xbf16>, tensor<1x80x800x80xbf16>) -> tensor<1x80x800x80xbf16> loc(#loc957)
    %2160 = ttir.empty() : tensor<1x80x80x800xbf16> loc(#loc958)
    %2161 = "ttir.transpose"(%2159, %2160) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x800x80xbf16>, tensor<1x80x80x800xbf16>) -> tensor<1x80x80x800xbf16> loc(#loc958)
    %2162 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc959)
    %2163 = "ttir.conv2d"(%2161, %arg451, %2162) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x800xbf16>, tensor<320x800x1x1xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc959)
    %2164 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc960)
    %2165 = "ttir.transpose"(%2163, %2164) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x320xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc960)
    %2166 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc961)
    %2167 = "ttir.transpose"(%2165, %2166) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc961)
    %2168 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc226)
    %2169 = "ttir.multiply"(%2167, %arg225, %2168) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc226)
    %2170 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc227)
    %2171 = "ttir.add"(%2169, %arg226, %2170) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc227)
    %2172 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc668)
    %2173 = "ttir.sigmoid"(%2171, %2172) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc668)
    %2174 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc669)
    %2175 = "ttir.multiply"(%2171, %2173, %2174) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc669)
    %2176 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc1412)
    %2177 = "ttir.transpose"(%2175, %2176) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x80x80xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc1412)
    %2178 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc1413)
    %2179 = "ttir.transpose"(%2177, %2178) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc1413)
    %2180 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc1414)
    %2181 = "ttir.conv2d"(%2179, %arg452, %2180) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x320xbf16>, tensor<80x320x3x3xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc1414)
    %2182 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc1415)
    %2183 = "ttir.transpose"(%2181, %2182) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc1415)
    %2184 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc1416)
    %2185 = "ttir.transpose"(%2183, %2184) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc1416)
    %2186 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc228)
    %2187 = "ttir.multiply"(%2185, %arg227, %2186) : (tensor<1x80x80x80xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc228)
    %2188 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc229)
    %2189 = "ttir.add"(%2187, %arg228, %2188) : (tensor<1x80x80x80xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc229)
    %2190 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc963)
    %2191 = "ttir.sigmoid"(%2189, %2190) : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc963)
    %2192 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc964)
    %2193 = "ttir.multiply"(%2189, %2191, %2192) : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc964)
    %2194 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc1417)
    %2195 = "ttir.transpose"(%2193, %2194) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc1417)
    %2196 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc1418)
    %2197 = "ttir.transpose"(%2195, %2196) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc1418)
    %2198 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc1419)
    %2199 = "ttir.conv2d"(%2197, %arg453, %2198) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x80xbf16>, tensor<80x80x3x3xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc1419)
    %2200 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc1420)
    %2201 = "ttir.transpose"(%2199, %2200) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc1420)
    %2202 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc1421)
    %2203 = "ttir.transpose"(%2201, %2202) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc1421)
    %2204 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc230)
    %2205 = "ttir.multiply"(%2203, %arg229, %2204) : (tensor<1x80x80x80xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc230)
    %2206 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc231)
    %2207 = "ttir.add"(%2205, %arg230, %2206) : (tensor<1x80x80x80xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc231)
    %2208 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc966)
    %2209 = "ttir.sigmoid"(%2207, %2208) : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc966)
    %2210 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc967)
    %2211 = "ttir.multiply"(%2207, %2209, %2210) : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc967)
    %2212 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc968)
    %2213 = "ttir.transpose"(%2211, %2212) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc968)
    %2214 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc969)
    %2215 = "ttir.transpose"(%2213, %2214) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc969)
    %2216 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc970)
    %2217 = "ttir.conv2d"(%2215, %arg454, %arg455, %2216) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x80xbf16>, tensor<64x80x1x1xbf16>, tensor<1x1x1x64xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc970)
    %2218 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc971)
    %2219 = "ttir.transpose"(%2217, %2218) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x64xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc971)
    %2220 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc972)
    %2221 = "ttir.transpose"(%2219, %2220) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc972)
    %2222 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc1868)
    %2223 = "ttir.transpose"(%2175, %2222) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x80x80xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc1868)
    %2224 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc1869)
    %2225 = "ttir.transpose"(%2223, %2224) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc1869)
    %2226 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc1870)
    %2227 = "ttir.conv2d"(%2225, %arg456, %2226) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc1870)
    %2228 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc1871)
    %2229 = "ttir.transpose"(%2227, %2228) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x320xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc1871)
    %2230 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc1872)
    %2231 = "ttir.transpose"(%2229, %2230) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc1872)
    %2232 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc232)
    %2233 = "ttir.multiply"(%2231, %arg231, %2232) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc232)
    %2234 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc233)
    %2235 = "ttir.add"(%2233, %arg232, %2234) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc233)
    %2236 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc1423)
    %2237 = "ttir.sigmoid"(%2235, %2236) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc1423)
    %2238 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc1424)
    %2239 = "ttir.multiply"(%2235, %2237, %2238) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc1424)
    %2240 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc1873)
    %2241 = "ttir.transpose"(%2239, %2240) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x80x80xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc1873)
    %2242 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc1874)
    %2243 = "ttir.transpose"(%2241, %2242) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc1874)
    %2244 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc1875)
    %2245 = "ttir.conv2d"(%2243, %arg457, %2244) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x320xbf16>, tensor<320x320x1x1xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc1875)
    %2246 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc1876)
    %2247 = "ttir.transpose"(%2245, %2246) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x320xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc1876)
    %2248 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc1877)
    %2249 = "ttir.transpose"(%2247, %2248) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc1877)
    %2250 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc234)
    %2251 = "ttir.multiply"(%2249, %arg233, %2250) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc234)
    %2252 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc235)
    %2253 = "ttir.add"(%2251, %arg234, %2252) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc235)
    %2254 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc1426)
    %2255 = "ttir.sigmoid"(%2253, %2254) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc1426)
    %2256 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc1427)
    %2257 = "ttir.multiply"(%2253, %2255, %2256) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc1427)
    %2258 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc1878)
    %2259 = "ttir.transpose"(%2257, %2258) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x80x80xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc1878)
    %2260 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc1879)
    %2261 = "ttir.transpose"(%2259, %2260) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc1879)
    %2262 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc1880)
    %2263 = "ttir.conv2d"(%2261, %arg458, %2262) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc1880)
    %2264 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc1881)
    %2265 = "ttir.transpose"(%2263, %2264) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x320xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc1881)
    %2266 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc1882)
    %2267 = "ttir.transpose"(%2265, %2266) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc1882)
    %2268 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc236)
    %2269 = "ttir.multiply"(%2267, %arg235, %2268) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc236)
    %2270 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc237)
    %2271 = "ttir.add"(%2269, %arg236, %2270) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc237)
    %2272 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc1429)
    %2273 = "ttir.sigmoid"(%2271, %2272) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc1429)
    %2274 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc1430)
    %2275 = "ttir.multiply"(%2271, %2273, %2274) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc1430)
    %2276 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc1883)
    %2277 = "ttir.transpose"(%2275, %2276) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x80x80xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc1883)
    %2278 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc1884)
    %2279 = "ttir.transpose"(%2277, %2278) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc1884)
    %2280 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc1885)
    %2281 = "ttir.conv2d"(%2279, %arg459, %2280) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x320xbf16>, tensor<320x320x1x1xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc1885)
    %2282 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc1886)
    %2283 = "ttir.transpose"(%2281, %2282) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x320xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc1886)
    %2284 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc1887)
    %2285 = "ttir.transpose"(%2283, %2284) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc1887)
    %2286 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc238)
    %2287 = "ttir.multiply"(%2285, %arg237, %2286) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc238)
    %2288 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc239)
    %2289 = "ttir.add"(%2287, %arg238, %2288) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc239)
    %2290 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc1432)
    %2291 = "ttir.sigmoid"(%2289, %2290) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc1432)
    %2292 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc1433)
    %2293 = "ttir.multiply"(%2289, %2291, %2292) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc1433)
    %2294 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc977)
    %2295 = "ttir.transpose"(%2293, %2294) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x80x80xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc977)
    %2296 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc978)
    %2297 = "ttir.transpose"(%2295, %2296) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc978)
    %2298 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc979)
    %2299 = "ttir.conv2d"(%2297, %arg460, %arg461, %2298) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x320xbf16>, tensor<80x320x1x1xbf16>, tensor<1x1x1x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc979)
    %2300 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc980)
    %2301 = "ttir.transpose"(%2299, %2300) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc980)
    %2302 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc981)
    %2303 = "ttir.transpose"(%2301, %2302) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc981)
    %2304 = ttir.empty() : tensor<1x144x80x80xbf16> loc(#loc466)
    %2305 = "ttir.concat"(%2221, %2303, %2304) <{dim = -3 : si32}> : (tensor<1x64x80x80xbf16>, tensor<1x80x80x80xbf16>, tensor<1x144x80x80xbf16>) -> tensor<1x144x80x80xbf16> loc(#loc466)
    %2306 = ttir.empty() : tensor<1x144x6400xbf16> loc(#loc467)
    %2307 = "ttir.reshape"(%2305, %2306) <{shape = [1 : i32, 144 : i32, 6400 : i32]}> : (tensor<1x144x80x80xbf16>, tensor<1x144x6400xbf16>) -> tensor<1x144x6400xbf16> loc(#loc467)
    %2308 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc675)
    %2309 = "ttir.transpose"(%2175, %2308) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x80x80xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc675)
    %2310 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc676)
    %2311 = "ttir.transpose"(%2309, %2310) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc676)
    %2312 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc677)
    %2313 = "ttir.conv2d"(%2311, %arg462, %2312) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 2, 2>}> {channel_last = 1 : si32} : (tensor<1x80x80x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc677)
    %2314 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc678)
    %2315 = "ttir.transpose"(%2313, %2314) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc678)
    %2316 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc679)
    %2317 = "ttir.transpose"(%2315, %2316) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc679)
    %2318 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc240)
    %2319 = "ttir.multiply"(%2317, %arg239, %2318) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc240)
    %2320 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc241)
    %2321 = "ttir.add"(%2319, %arg240, %2320) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc241)
    %2322 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc469)
    %2323 = "ttir.sigmoid"(%2321, %2322) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc469)
    %2324 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc470)
    %2325 = "ttir.multiply"(%2321, %2323, %2324) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc470)
    %2326 = ttir.empty() : tensor<1x960x40x40xbf16> loc(#loc471)
    %2327 = "ttir.concat"(%2325, %2013, %2326) <{dim = -3 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x960x40x40xbf16>) -> tensor<1x960x40x40xbf16> loc(#loc471)
    %2328 = ttir.empty() : tensor<1x40x960x40xbf16> loc(#loc982)
    %2329 = "ttir.transpose"(%2327, %2328) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x960x40x40xbf16>, tensor<1x40x960x40xbf16>) -> tensor<1x40x960x40xbf16> loc(#loc982)
    %2330 = ttir.empty() : tensor<1x40x40x960xbf16> loc(#loc983)
    %2331 = "ttir.transpose"(%2329, %2330) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x960x40xbf16>, tensor<1x40x40x960xbf16>) -> tensor<1x40x40x960xbf16> loc(#loc983)
    %2332 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc984)
    %2333 = "ttir.conv2d"(%2331, %arg463, %2332) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x960xbf16>, tensor<640x960x1x1xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc984)
    %2334 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc985)
    %2335 = "ttir.transpose"(%2333, %2334) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc985)
    %2336 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc986)
    %2337 = "ttir.transpose"(%2335, %2336) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc986)
    %2338 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc242)
    %2339 = "ttir.multiply"(%2337, %arg241, %2338) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc242)
    %2340 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc243)
    %2341 = "ttir.add"(%2339, %arg242, %2340) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc243)
    %2342 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc681)
    %2343 = "ttir.sigmoid"(%2341, %2342) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc681)
    %2344 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc682)
    %2345 = "ttir.multiply"(%2341, %2343, %2344) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc682)
    %2346 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc473)
    %2347 = "ttir.index"(%2345, %2346) <{begin = 0 : i32, dim = 1 : i32, end = 320 : i32, step = 1 : i32}> : (tensor<1x640x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc473)
    %2348 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc474)
    %2349 = "ttir.index"(%2345, %2348) <{begin = 320 : i32, dim = 1 : i32, end = 640 : i32, step = 1 : i32}> : (tensor<1x640x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc474)
    %2350 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1888)
    %2351 = "ttir.transpose"(%2349, %2350) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1888)
    %2352 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1889)
    %2353 = "ttir.transpose"(%2351, %2352) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1889)
    %2354 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1890)
    %2355 = "ttir.conv2d"(%2353, %arg464, %2354) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1890)
    %2356 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1891)
    %2357 = "ttir.transpose"(%2355, %2356) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1891)
    %2358 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1892)
    %2359 = "ttir.transpose"(%2357, %2358) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1892)
    %2360 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc244)
    %2361 = "ttir.multiply"(%2359, %arg243, %2360) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc244)
    %2362 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc245)
    %2363 = "ttir.add"(%2361, %arg244, %2362) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc245)
    %2364 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1435)
    %2365 = "ttir.sigmoid"(%2363, %2364) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1435)
    %2366 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1436)
    %2367 = "ttir.multiply"(%2363, %2365, %2366) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1436)
    %2368 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1893)
    %2369 = "ttir.transpose"(%2367, %2368) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1893)
    %2370 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1894)
    %2371 = "ttir.transpose"(%2369, %2370) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1894)
    %2372 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1895)
    %2373 = "ttir.conv2d"(%2371, %arg465, %2372) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<640x320x1x1xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1895)
    %2374 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1896)
    %2375 = "ttir.transpose"(%2373, %2374) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1896)
    %2376 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1897)
    %2377 = "ttir.transpose"(%2375, %2376) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1897)
    %2378 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc246)
    %2379 = "ttir.multiply"(%2377, %arg245, %2378) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc246)
    %2380 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc247)
    %2381 = "ttir.add"(%2379, %arg246, %2380) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc247)
    %2382 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1438)
    %2383 = "ttir.sigmoid"(%2381, %2382) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1438)
    %2384 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1439)
    %2385 = "ttir.multiply"(%2381, %2383, %2384) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1439)
    %2386 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1898)
    %2387 = "ttir.transpose"(%2385, %2386) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1898)
    %2388 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1899)
    %2389 = "ttir.transpose"(%2387, %2388) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1899)
    %2390 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1900)
    %2391 = "ttir.conv2d"(%2389, %arg466, %2390) <{dilation = array<i32: 1, 1>, groups = 640 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<640x1x3x3xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1900)
    %2392 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1901)
    %2393 = "ttir.transpose"(%2391, %2392) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1901)
    %2394 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1902)
    %2395 = "ttir.transpose"(%2393, %2394) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1902)
    %2396 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc248)
    %2397 = "ttir.multiply"(%2395, %arg247, %2396) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc248)
    %2398 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc249)
    %2399 = "ttir.add"(%2397, %arg248, %2398) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc249)
    %2400 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1441)
    %2401 = "ttir.sigmoid"(%2399, %2400) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1441)
    %2402 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1442)
    %2403 = "ttir.multiply"(%2399, %2401, %2402) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1442)
    %2404 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1903)
    %2405 = "ttir.transpose"(%2403, %2404) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1903)
    %2406 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1904)
    %2407 = "ttir.transpose"(%2405, %2406) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1904)
    %2408 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1905)
    %2409 = "ttir.conv2d"(%2407, %arg467, %2408) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<320x640x1x1xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1905)
    %2410 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1906)
    %2411 = "ttir.transpose"(%2409, %2410) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1906)
    %2412 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1907)
    %2413 = "ttir.transpose"(%2411, %2412) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1907)
    %2414 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc250)
    %2415 = "ttir.multiply"(%2413, %arg249, %2414) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc250)
    %2416 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc251)
    %2417 = "ttir.add"(%2415, %arg250, %2416) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc251)
    %2418 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1444)
    %2419 = "ttir.sigmoid"(%2417, %2418) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1444)
    %2420 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1445)
    %2421 = "ttir.multiply"(%2417, %2419, %2420) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1445)
    %2422 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1908)
    %2423 = "ttir.transpose"(%2421, %2422) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1908)
    %2424 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1909)
    %2425 = "ttir.transpose"(%2423, %2424) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1909)
    %2426 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1910)
    %2427 = "ttir.conv2d"(%2425, %arg468, %2426) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1910)
    %2428 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1911)
    %2429 = "ttir.transpose"(%2427, %2428) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1911)
    %2430 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1912)
    %2431 = "ttir.transpose"(%2429, %2430) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1912)
    %2432 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc252)
    %2433 = "ttir.multiply"(%2431, %arg251, %2432) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc252)
    %2434 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc253)
    %2435 = "ttir.add"(%2433, %arg252, %2434) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc253)
    %2436 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1447)
    %2437 = "ttir.sigmoid"(%2435, %2436) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1447)
    %2438 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1448)
    %2439 = "ttir.multiply"(%2435, %2437, %2438) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1448)
    %2440 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc684)
    %2441 = "ttir.add"(%2349, %2439, %2440) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc684)
    %2442 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1913)
    %2443 = "ttir.transpose"(%2441, %2442) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1913)
    %2444 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1914)
    %2445 = "ttir.transpose"(%2443, %2444) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1914)
    %2446 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1915)
    %2447 = "ttir.conv2d"(%2445, %arg469, %2446) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1915)
    %2448 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1916)
    %2449 = "ttir.transpose"(%2447, %2448) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1916)
    %2450 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1917)
    %2451 = "ttir.transpose"(%2449, %2450) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1917)
    %2452 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc254)
    %2453 = "ttir.multiply"(%2451, %arg253, %2452) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc254)
    %2454 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc255)
    %2455 = "ttir.add"(%2453, %arg254, %2454) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc255)
    %2456 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1450)
    %2457 = "ttir.sigmoid"(%2455, %2456) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1450)
    %2458 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1451)
    %2459 = "ttir.multiply"(%2455, %2457, %2458) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1451)
    %2460 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1918)
    %2461 = "ttir.transpose"(%2459, %2460) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1918)
    %2462 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1919)
    %2463 = "ttir.transpose"(%2461, %2462) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1919)
    %2464 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1920)
    %2465 = "ttir.conv2d"(%2463, %arg470, %2464) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<640x320x1x1xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1920)
    %2466 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1921)
    %2467 = "ttir.transpose"(%2465, %2466) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1921)
    %2468 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1922)
    %2469 = "ttir.transpose"(%2467, %2468) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1922)
    %2470 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc256)
    %2471 = "ttir.multiply"(%2469, %arg255, %2470) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc256)
    %2472 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc257)
    %2473 = "ttir.add"(%2471, %arg256, %2472) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc257)
    %2474 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1453)
    %2475 = "ttir.sigmoid"(%2473, %2474) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1453)
    %2476 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1454)
    %2477 = "ttir.multiply"(%2473, %2475, %2476) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1454)
    %2478 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1923)
    %2479 = "ttir.transpose"(%2477, %2478) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1923)
    %2480 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1924)
    %2481 = "ttir.transpose"(%2479, %2480) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1924)
    %2482 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1925)
    %2483 = "ttir.conv2d"(%2481, %arg471, %2482) <{dilation = array<i32: 1, 1>, groups = 640 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<640x1x3x3xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1925)
    %2484 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1926)
    %2485 = "ttir.transpose"(%2483, %2484) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1926)
    %2486 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1927)
    %2487 = "ttir.transpose"(%2485, %2486) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1927)
    %2488 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc258)
    %2489 = "ttir.multiply"(%2487, %arg257, %2488) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc258)
    %2490 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc259)
    %2491 = "ttir.add"(%2489, %arg258, %2490) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc259)
    %2492 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1456)
    %2493 = "ttir.sigmoid"(%2491, %2492) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1456)
    %2494 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1457)
    %2495 = "ttir.multiply"(%2491, %2493, %2494) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1457)
    %2496 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1928)
    %2497 = "ttir.transpose"(%2495, %2496) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1928)
    %2498 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1929)
    %2499 = "ttir.transpose"(%2497, %2498) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1929)
    %2500 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1930)
    %2501 = "ttir.conv2d"(%2499, %arg472, %2500) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<320x640x1x1xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1930)
    %2502 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1931)
    %2503 = "ttir.transpose"(%2501, %2502) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1931)
    %2504 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1932)
    %2505 = "ttir.transpose"(%2503, %2504) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1932)
    %2506 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc260)
    %2507 = "ttir.multiply"(%2505, %arg259, %2506) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc260)
    %2508 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc261)
    %2509 = "ttir.add"(%2507, %arg260, %2508) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc261)
    %2510 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1459)
    %2511 = "ttir.sigmoid"(%2509, %2510) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1459)
    %2512 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1460)
    %2513 = "ttir.multiply"(%2509, %2511, %2512) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1460)
    %2514 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1933)
    %2515 = "ttir.transpose"(%2513, %2514) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1933)
    %2516 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1934)
    %2517 = "ttir.transpose"(%2515, %2516) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1934)
    %2518 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1935)
    %2519 = "ttir.conv2d"(%2517, %arg473, %2518) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1935)
    %2520 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1936)
    %2521 = "ttir.transpose"(%2519, %2520) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1936)
    %2522 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1937)
    %2523 = "ttir.transpose"(%2521, %2522) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1937)
    %2524 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc262)
    %2525 = "ttir.multiply"(%2523, %arg261, %2524) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc262)
    %2526 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc263)
    %2527 = "ttir.add"(%2525, %arg262, %2526) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc263)
    %2528 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1462)
    %2529 = "ttir.sigmoid"(%2527, %2528) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1462)
    %2530 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1463)
    %2531 = "ttir.multiply"(%2527, %2529, %2530) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1463)
    %2532 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc686)
    %2533 = "ttir.add"(%2441, %2531, %2532) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc686)
    %2534 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1938)
    %2535 = "ttir.transpose"(%2533, %2534) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1938)
    %2536 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1939)
    %2537 = "ttir.transpose"(%2535, %2536) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1939)
    %2538 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1940)
    %2539 = "ttir.conv2d"(%2537, %arg474, %2538) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1940)
    %2540 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1941)
    %2541 = "ttir.transpose"(%2539, %2540) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1941)
    %2542 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1942)
    %2543 = "ttir.transpose"(%2541, %2542) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1942)
    %2544 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc264)
    %2545 = "ttir.multiply"(%2543, %arg263, %2544) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc264)
    %2546 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc265)
    %2547 = "ttir.add"(%2545, %arg264, %2546) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc265)
    %2548 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1465)
    %2549 = "ttir.sigmoid"(%2547, %2548) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1465)
    %2550 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1466)
    %2551 = "ttir.multiply"(%2547, %2549, %2550) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1466)
    %2552 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1943)
    %2553 = "ttir.transpose"(%2551, %2552) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1943)
    %2554 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1944)
    %2555 = "ttir.transpose"(%2553, %2554) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1944)
    %2556 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1945)
    %2557 = "ttir.conv2d"(%2555, %arg475, %2556) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<640x320x1x1xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1945)
    %2558 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1946)
    %2559 = "ttir.transpose"(%2557, %2558) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1946)
    %2560 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1947)
    %2561 = "ttir.transpose"(%2559, %2560) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1947)
    %2562 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc266)
    %2563 = "ttir.multiply"(%2561, %arg265, %2562) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc266)
    %2564 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc267)
    %2565 = "ttir.add"(%2563, %arg266, %2564) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc267)
    %2566 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1468)
    %2567 = "ttir.sigmoid"(%2565, %2566) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1468)
    %2568 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1469)
    %2569 = "ttir.multiply"(%2565, %2567, %2568) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1469)
    %2570 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1948)
    %2571 = "ttir.transpose"(%2569, %2570) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1948)
    %2572 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1949)
    %2573 = "ttir.transpose"(%2571, %2572) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1949)
    %2574 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1950)
    %2575 = "ttir.conv2d"(%2573, %arg476, %2574) <{dilation = array<i32: 1, 1>, groups = 640 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<640x1x3x3xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1950)
    %2576 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1951)
    %2577 = "ttir.transpose"(%2575, %2576) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1951)
    %2578 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1952)
    %2579 = "ttir.transpose"(%2577, %2578) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1952)
    %2580 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc268)
    %2581 = "ttir.multiply"(%2579, %arg267, %2580) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc268)
    %2582 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc269)
    %2583 = "ttir.add"(%2581, %arg268, %2582) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc269)
    %2584 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1471)
    %2585 = "ttir.sigmoid"(%2583, %2584) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1471)
    %2586 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1472)
    %2587 = "ttir.multiply"(%2583, %2585, %2586) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1472)
    %2588 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1953)
    %2589 = "ttir.transpose"(%2587, %2588) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1953)
    %2590 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1954)
    %2591 = "ttir.transpose"(%2589, %2590) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1954)
    %2592 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1955)
    %2593 = "ttir.conv2d"(%2591, %arg477, %2592) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<320x640x1x1xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1955)
    %2594 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1956)
    %2595 = "ttir.transpose"(%2593, %2594) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1956)
    %2596 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1957)
    %2597 = "ttir.transpose"(%2595, %2596) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1957)
    %2598 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc270)
    %2599 = "ttir.multiply"(%2597, %arg269, %2598) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc270)
    %2600 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc271)
    %2601 = "ttir.add"(%2599, %arg270, %2600) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc271)
    %2602 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1474)
    %2603 = "ttir.sigmoid"(%2601, %2602) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1474)
    %2604 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1475)
    %2605 = "ttir.multiply"(%2601, %2603, %2604) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1475)
    %2606 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1958)
    %2607 = "ttir.transpose"(%2605, %2606) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1958)
    %2608 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1959)
    %2609 = "ttir.transpose"(%2607, %2608) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1959)
    %2610 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1960)
    %2611 = "ttir.conv2d"(%2609, %arg478, %2610) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1960)
    %2612 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1961)
    %2613 = "ttir.transpose"(%2611, %2612) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1961)
    %2614 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1962)
    %2615 = "ttir.transpose"(%2613, %2614) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1962)
    %2616 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc272)
    %2617 = "ttir.multiply"(%2615, %arg271, %2616) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc272)
    %2618 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc273)
    %2619 = "ttir.add"(%2617, %arg272, %2618) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc273)
    %2620 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1477)
    %2621 = "ttir.sigmoid"(%2619, %2620) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1477)
    %2622 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1478)
    %2623 = "ttir.multiply"(%2619, %2621, %2622) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1478)
    %2624 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc688)
    %2625 = "ttir.add"(%2533, %2623, %2624) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc688)
    %2626 = ttir.empty() : tensor<1x1600x40x40xbf16> loc(#loc478)
    %2627 = "ttir.concat"(%2347, %2349, %2441, %2533, %2625, %2626) <{dim = -3 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x1600x40x40xbf16>) -> tensor<1x1600x40x40xbf16> loc(#loc478)
    %2628 = ttir.empty() : tensor<1x40x1600x40xbf16> loc(#loc1002)
    %2629 = "ttir.transpose"(%2627, %2628) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x1600x40x40xbf16>, tensor<1x40x1600x40xbf16>) -> tensor<1x40x1600x40xbf16> loc(#loc1002)
    %2630 = ttir.empty() : tensor<1x40x40x1600xbf16> loc(#loc1003)
    %2631 = "ttir.transpose"(%2629, %2630) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x1600x40xbf16>, tensor<1x40x40x1600xbf16>) -> tensor<1x40x40x1600xbf16> loc(#loc1003)
    %2632 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1004)
    %2633 = "ttir.conv2d"(%2631, %arg479, %2632) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x1600xbf16>, tensor<640x1600x1x1xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1004)
    %2634 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1005)
    %2635 = "ttir.transpose"(%2633, %2634) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1005)
    %2636 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1006)
    %2637 = "ttir.transpose"(%2635, %2636) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1006)
    %2638 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc274)
    %2639 = "ttir.multiply"(%2637, %arg273, %2638) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc274)
    %2640 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc275)
    %2641 = "ttir.add"(%2639, %arg274, %2640) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc275)
    %2642 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc690)
    %2643 = "ttir.sigmoid"(%2641, %2642) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc690)
    %2644 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc691)
    %2645 = "ttir.multiply"(%2641, %2643, %2644) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc691)
    %2646 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1479)
    %2647 = "ttir.transpose"(%2645, %2646) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1479)
    %2648 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1480)
    %2649 = "ttir.transpose"(%2647, %2648) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1480)
    %2650 = ttir.empty() : tensor<1x40x40x80xbf16> loc(#loc1481)
    %2651 = "ttir.conv2d"(%2649, %arg480, %2650) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<80x640x3x3xbf16>, tensor<1x40x40x80xbf16>) -> tensor<1x40x40x80xbf16> loc(#loc1481)
    %2652 = ttir.empty() : tensor<1x40x80x40xbf16> loc(#loc1482)
    %2653 = "ttir.transpose"(%2651, %2652) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x80xbf16>, tensor<1x40x80x40xbf16>) -> tensor<1x40x80x40xbf16> loc(#loc1482)
    %2654 = ttir.empty() : tensor<1x80x40x40xbf16> loc(#loc1483)
    %2655 = "ttir.transpose"(%2653, %2654) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x80x40xbf16>, tensor<1x80x40x40xbf16>) -> tensor<1x80x40x40xbf16> loc(#loc1483)
    %2656 = ttir.empty() : tensor<1x80x40x40xbf16> loc(#loc276)
    %2657 = "ttir.multiply"(%2655, %arg275, %2656) : (tensor<1x80x40x40xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x40x40xbf16>) -> tensor<1x80x40x40xbf16> loc(#loc276)
    %2658 = ttir.empty() : tensor<1x80x40x40xbf16> loc(#loc277)
    %2659 = "ttir.add"(%2657, %arg276, %2658) : (tensor<1x80x40x40xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x40x40xbf16>) -> tensor<1x80x40x40xbf16> loc(#loc277)
    %2660 = ttir.empty() : tensor<1x80x40x40xbf16> loc(#loc1008)
    %2661 = "ttir.sigmoid"(%2659, %2660) : (tensor<1x80x40x40xbf16>, tensor<1x80x40x40xbf16>) -> tensor<1x80x40x40xbf16> loc(#loc1008)
    %2662 = ttir.empty() : tensor<1x80x40x40xbf16> loc(#loc1009)
    %2663 = "ttir.multiply"(%2659, %2661, %2662) : (tensor<1x80x40x40xbf16>, tensor<1x80x40x40xbf16>, tensor<1x80x40x40xbf16>) -> tensor<1x80x40x40xbf16> loc(#loc1009)
    %2664 = ttir.empty() : tensor<1x40x80x40xbf16> loc(#loc1484)
    %2665 = "ttir.transpose"(%2663, %2664) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x40x40xbf16>, tensor<1x40x80x40xbf16>) -> tensor<1x40x80x40xbf16> loc(#loc1484)
    %2666 = ttir.empty() : tensor<1x40x40x80xbf16> loc(#loc1485)
    %2667 = "ttir.transpose"(%2665, %2666) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x80x40xbf16>, tensor<1x40x40x80xbf16>) -> tensor<1x40x40x80xbf16> loc(#loc1485)
    %2668 = ttir.empty() : tensor<1x40x40x80xbf16> loc(#loc1486)
    %2669 = "ttir.conv2d"(%2667, %arg481, %2668) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x80xbf16>, tensor<80x80x3x3xbf16>, tensor<1x40x40x80xbf16>) -> tensor<1x40x40x80xbf16> loc(#loc1486)
    %2670 = ttir.empty() : tensor<1x40x80x40xbf16> loc(#loc1487)
    %2671 = "ttir.transpose"(%2669, %2670) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x80xbf16>, tensor<1x40x80x40xbf16>) -> tensor<1x40x80x40xbf16> loc(#loc1487)
    %2672 = ttir.empty() : tensor<1x80x40x40xbf16> loc(#loc1488)
    %2673 = "ttir.transpose"(%2671, %2672) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x80x40xbf16>, tensor<1x80x40x40xbf16>) -> tensor<1x80x40x40xbf16> loc(#loc1488)
    %2674 = ttir.empty() : tensor<1x80x40x40xbf16> loc(#loc278)
    %2675 = "ttir.multiply"(%2673, %arg277, %2674) : (tensor<1x80x40x40xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x40x40xbf16>) -> tensor<1x80x40x40xbf16> loc(#loc278)
    %2676 = ttir.empty() : tensor<1x80x40x40xbf16> loc(#loc279)
    %2677 = "ttir.add"(%2675, %arg278, %2676) : (tensor<1x80x40x40xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x40x40xbf16>) -> tensor<1x80x40x40xbf16> loc(#loc279)
    %2678 = ttir.empty() : tensor<1x80x40x40xbf16> loc(#loc1011)
    %2679 = "ttir.sigmoid"(%2677, %2678) : (tensor<1x80x40x40xbf16>, tensor<1x80x40x40xbf16>) -> tensor<1x80x40x40xbf16> loc(#loc1011)
    %2680 = ttir.empty() : tensor<1x80x40x40xbf16> loc(#loc1012)
    %2681 = "ttir.multiply"(%2677, %2679, %2680) : (tensor<1x80x40x40xbf16>, tensor<1x80x40x40xbf16>, tensor<1x80x40x40xbf16>) -> tensor<1x80x40x40xbf16> loc(#loc1012)
    %2682 = ttir.empty() : tensor<1x40x80x40xbf16> loc(#loc1013)
    %2683 = "ttir.transpose"(%2681, %2682) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x40x40xbf16>, tensor<1x40x80x40xbf16>) -> tensor<1x40x80x40xbf16> loc(#loc1013)
    %2684 = ttir.empty() : tensor<1x40x40x80xbf16> loc(#loc1014)
    %2685 = "ttir.transpose"(%2683, %2684) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x80x40xbf16>, tensor<1x40x40x80xbf16>) -> tensor<1x40x40x80xbf16> loc(#loc1014)
    %2686 = ttir.empty() : tensor<1x40x40x64xbf16> loc(#loc1015)
    %2687 = "ttir.conv2d"(%2685, %arg482, %arg483, %2686) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x80xbf16>, tensor<64x80x1x1xbf16>, tensor<1x1x1x64xbf16>, tensor<1x40x40x64xbf16>) -> tensor<1x40x40x64xbf16> loc(#loc1015)
    %2688 = ttir.empty() : tensor<1x40x64x40xbf16> loc(#loc1016)
    %2689 = "ttir.transpose"(%2687, %2688) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x64xbf16>, tensor<1x40x64x40xbf16>) -> tensor<1x40x64x40xbf16> loc(#loc1016)
    %2690 = ttir.empty() : tensor<1x64x40x40xbf16> loc(#loc1017)
    %2691 = "ttir.transpose"(%2689, %2690) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x64x40xbf16>, tensor<1x64x40x40xbf16>) -> tensor<1x64x40x40xbf16> loc(#loc1017)
    %2692 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1963)
    %2693 = "ttir.transpose"(%2645, %2692) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1963)
    %2694 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1964)
    %2695 = "ttir.transpose"(%2693, %2694) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1964)
    %2696 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1965)
    %2697 = "ttir.conv2d"(%2695, %arg484, %2696) <{dilation = array<i32: 1, 1>, groups = 640 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<640x1x3x3xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1965)
    %2698 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1966)
    %2699 = "ttir.transpose"(%2697, %2698) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1966)
    %2700 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1967)
    %2701 = "ttir.transpose"(%2699, %2700) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1967)
    %2702 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc280)
    %2703 = "ttir.multiply"(%2701, %arg279, %2702) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc280)
    %2704 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc281)
    %2705 = "ttir.add"(%2703, %arg280, %2704) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc281)
    %2706 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1490)
    %2707 = "ttir.sigmoid"(%2705, %2706) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1490)
    %2708 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1491)
    %2709 = "ttir.multiply"(%2705, %2707, %2708) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1491)
    %2710 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1968)
    %2711 = "ttir.transpose"(%2709, %2710) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1968)
    %2712 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1969)
    %2713 = "ttir.transpose"(%2711, %2712) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1969)
    %2714 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1970)
    %2715 = "ttir.conv2d"(%2713, %arg485, %2714) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<320x640x1x1xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1970)
    %2716 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1971)
    %2717 = "ttir.transpose"(%2715, %2716) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1971)
    %2718 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1972)
    %2719 = "ttir.transpose"(%2717, %2718) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1972)
    %2720 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc282)
    %2721 = "ttir.multiply"(%2719, %arg281, %2720) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc282)
    %2722 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc283)
    %2723 = "ttir.add"(%2721, %arg282, %2722) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc283)
    %2724 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1493)
    %2725 = "ttir.sigmoid"(%2723, %2724) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1493)
    %2726 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1494)
    %2727 = "ttir.multiply"(%2723, %2725, %2726) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1494)
    %2728 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1973)
    %2729 = "ttir.transpose"(%2727, %2728) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1973)
    %2730 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1974)
    %2731 = "ttir.transpose"(%2729, %2730) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1974)
    %2732 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1975)
    %2733 = "ttir.conv2d"(%2731, %arg486, %2732) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1975)
    %2734 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1976)
    %2735 = "ttir.transpose"(%2733, %2734) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1976)
    %2736 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1977)
    %2737 = "ttir.transpose"(%2735, %2736) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1977)
    %2738 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc284)
    %2739 = "ttir.multiply"(%2737, %arg283, %2738) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc284)
    %2740 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc285)
    %2741 = "ttir.add"(%2739, %arg284, %2740) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc285)
    %2742 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1496)
    %2743 = "ttir.sigmoid"(%2741, %2742) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1496)
    %2744 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1497)
    %2745 = "ttir.multiply"(%2741, %2743, %2744) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1497)
    %2746 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1978)
    %2747 = "ttir.transpose"(%2745, %2746) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1978)
    %2748 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1979)
    %2749 = "ttir.transpose"(%2747, %2748) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1979)
    %2750 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1980)
    %2751 = "ttir.conv2d"(%2749, %arg487, %2750) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x320x1x1xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1980)
    %2752 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1981)
    %2753 = "ttir.transpose"(%2751, %2752) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1981)
    %2754 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1982)
    %2755 = "ttir.transpose"(%2753, %2754) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1982)
    %2756 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc286)
    %2757 = "ttir.multiply"(%2755, %arg285, %2756) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc286)
    %2758 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc287)
    %2759 = "ttir.add"(%2757, %arg286, %2758) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc287)
    %2760 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1499)
    %2761 = "ttir.sigmoid"(%2759, %2760) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1499)
    %2762 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1500)
    %2763 = "ttir.multiply"(%2759, %2761, %2762) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1500)
    %2764 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1022)
    %2765 = "ttir.transpose"(%2763, %2764) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1022)
    %2766 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1023)
    %2767 = "ttir.transpose"(%2765, %2766) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1023)
    %2768 = ttir.empty() : tensor<1x40x40x80xbf16> loc(#loc1024)
    %2769 = "ttir.conv2d"(%2767, %arg488, %arg489, %2768) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<80x320x1x1xbf16>, tensor<1x1x1x80xbf16>, tensor<1x40x40x80xbf16>) -> tensor<1x40x40x80xbf16> loc(#loc1024)
    %2770 = ttir.empty() : tensor<1x40x80x40xbf16> loc(#loc1025)
    %2771 = "ttir.transpose"(%2769, %2770) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x80xbf16>, tensor<1x40x80x40xbf16>) -> tensor<1x40x80x40xbf16> loc(#loc1025)
    %2772 = ttir.empty() : tensor<1x80x40x40xbf16> loc(#loc1026)
    %2773 = "ttir.transpose"(%2771, %2772) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x80x40xbf16>, tensor<1x80x40x40xbf16>) -> tensor<1x80x40x40xbf16> loc(#loc1026)
    %2774 = ttir.empty() : tensor<1x144x40x40xbf16> loc(#loc481)
    %2775 = "ttir.concat"(%2691, %2773, %2774) <{dim = -3 : si32}> : (tensor<1x64x40x40xbf16>, tensor<1x80x40x40xbf16>, tensor<1x144x40x40xbf16>) -> tensor<1x144x40x40xbf16> loc(#loc481)
    %2776 = ttir.empty() : tensor<1x144x1600xbf16> loc(#loc482)
    %2777 = "ttir.reshape"(%2775, %2776) <{shape = [1 : i32, 144 : i32, 1600 : i32]}> : (tensor<1x144x40x40xbf16>, tensor<1x144x1600xbf16>) -> tensor<1x144x1600xbf16> loc(#loc482)
    %2778 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1027)
    %2779 = "ttir.transpose"(%2645, %2778) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1027)
    %2780 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1028)
    %2781 = "ttir.transpose"(%2779, %2780) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1028)
    %2782 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1029)
    %2783 = "ttir.conv2d"(%2781, %arg490, %2782) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<640x640x1x1xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1029)
    %2784 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1030)
    %2785 = "ttir.transpose"(%2783, %2784) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1030)
    %2786 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc1031)
    %2787 = "ttir.transpose"(%2785, %2786) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc1031)
    %2788 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc288)
    %2789 = "ttir.multiply"(%2787, %arg287, %2788) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc288)
    %2790 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc289)
    %2791 = "ttir.add"(%2789, %arg288, %2790) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc289)
    %2792 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc698)
    %2793 = "ttir.sigmoid"(%2791, %2792) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc698)
    %2794 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc699)
    %2795 = "ttir.multiply"(%2791, %2793, %2794) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc699)
    %2796 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1032)
    %2797 = "ttir.transpose"(%2795, %2796) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1032)
    %2798 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1033)
    %2799 = "ttir.transpose"(%2797, %2798) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1033)
    %2800 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc1034)
    %2801 = "ttir.conv2d"(%2799, %arg491, %2800) <{dilation = array<i32: 1, 1>, groups = 640 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 2, 2>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<640x1x3x3xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc1034)
    %2802 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc1035)
    %2803 = "ttir.transpose"(%2801, %2802) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc1035)
    %2804 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1036)
    %2805 = "ttir.transpose"(%2803, %2804) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1036)
    %2806 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc290)
    %2807 = "ttir.multiply"(%2805, %arg289, %2806) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc290)
    %2808 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc291)
    %2809 = "ttir.add"(%2807, %arg290, %2808) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc291)
    %2810 = ttir.empty() : tensor<1x1280x20x20xbf16> loc(#loc485)
    %2811 = "ttir.concat"(%2809, %1683, %2810) <{dim = -3 : si32}> : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x1280x20x20xbf16>) -> tensor<1x1280x20x20xbf16> loc(#loc485)
    %2812 = ttir.empty() : tensor<1x20x1280x20xbf16> loc(#loc1037)
    %2813 = "ttir.transpose"(%2811, %2812) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x1280x20x20xbf16>, tensor<1x20x1280x20xbf16>) -> tensor<1x20x1280x20xbf16> loc(#loc1037)
    %2814 = ttir.empty() : tensor<1x20x20x1280xbf16> loc(#loc1038)
    %2815 = "ttir.transpose"(%2813, %2814) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x1280x20xbf16>, tensor<1x20x20x1280xbf16>) -> tensor<1x20x20x1280xbf16> loc(#loc1038)
    %2816 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc1039)
    %2817 = "ttir.conv2d"(%2815, %arg492, %2816) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x1280xbf16>, tensor<640x1280x1x1xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc1039)
    %2818 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc1040)
    %2819 = "ttir.transpose"(%2817, %2818) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc1040)
    %2820 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1041)
    %2821 = "ttir.transpose"(%2819, %2820) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1041)
    %2822 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc292)
    %2823 = "ttir.multiply"(%2821, %arg291, %2822) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc292)
    %2824 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc293)
    %2825 = "ttir.add"(%2823, %arg292, %2824) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc293)
    %2826 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc702)
    %2827 = "ttir.sigmoid"(%2825, %2826) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc702)
    %2828 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc703)
    %2829 = "ttir.multiply"(%2825, %2827, %2828) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc703)
    %2830 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc487)
    %2831 = "ttir.index"(%2829, %2830) <{begin = 0 : i32, dim = 1 : i32, end = 320 : i32, step = 1 : i32}> : (tensor<1x640x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc487)
    %2832 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc488)
    %2833 = "ttir.index"(%2829, %2832) <{begin = 320 : i32, dim = 1 : i32, end = 640 : i32, step = 1 : i32}> : (tensor<1x640x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc488)
    %2834 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1983)
    %2835 = "ttir.transpose"(%2833, %2834) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1983)
    %2836 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1984)
    %2837 = "ttir.transpose"(%2835, %2836) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1984)
    %2838 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1985)
    %2839 = "ttir.conv2d"(%2837, %arg493, %2838) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1985)
    %2840 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1986)
    %2841 = "ttir.transpose"(%2839, %2840) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1986)
    %2842 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1987)
    %2843 = "ttir.transpose"(%2841, %2842) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1987)
    %2844 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc294)
    %2845 = "ttir.multiply"(%2843, %arg293, %2844) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc294)
    %2846 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc295)
    %2847 = "ttir.add"(%2845, %arg294, %2846) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc295)
    %2848 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1502)
    %2849 = "ttir.sigmoid"(%2847, %2848) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1502)
    %2850 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1503)
    %2851 = "ttir.multiply"(%2847, %2849, %2850) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1503)
    %2852 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1988)
    %2853 = "ttir.transpose"(%2851, %2852) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1988)
    %2854 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1989)
    %2855 = "ttir.transpose"(%2853, %2854) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1989)
    %2856 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc1990)
    %2857 = "ttir.conv2d"(%2855, %arg494, %2856) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<640x320x1x1xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc1990)
    %2858 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc1991)
    %2859 = "ttir.transpose"(%2857, %2858) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc1991)
    %2860 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1992)
    %2861 = "ttir.transpose"(%2859, %2860) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1992)
    %2862 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc296)
    %2863 = "ttir.multiply"(%2861, %arg295, %2862) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc296)
    %2864 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc297)
    %2865 = "ttir.add"(%2863, %arg296, %2864) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc297)
    %2866 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1505)
    %2867 = "ttir.sigmoid"(%2865, %2866) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1505)
    %2868 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1506)
    %2869 = "ttir.multiply"(%2865, %2867, %2868) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1506)
    %2870 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc1993)
    %2871 = "ttir.transpose"(%2869, %2870) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x20x20xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc1993)
    %2872 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc1994)
    %2873 = "ttir.transpose"(%2871, %2872) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc1994)
    %2874 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc1995)
    %2875 = "ttir.conv2d"(%2873, %arg495, %2874) <{dilation = array<i32: 1, 1>, groups = 640 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x640xbf16>, tensor<640x1x3x3xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc1995)
    %2876 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc1996)
    %2877 = "ttir.transpose"(%2875, %2876) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc1996)
    %2878 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1997)
    %2879 = "ttir.transpose"(%2877, %2878) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1997)
    %2880 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc298)
    %2881 = "ttir.multiply"(%2879, %arg297, %2880) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc298)
    %2882 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc299)
    %2883 = "ttir.add"(%2881, %arg298, %2882) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc299)
    %2884 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1508)
    %2885 = "ttir.sigmoid"(%2883, %2884) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1508)
    %2886 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1509)
    %2887 = "ttir.multiply"(%2883, %2885, %2886) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1509)
    %2888 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc1998)
    %2889 = "ttir.transpose"(%2887, %2888) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x20x20xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc1998)
    %2890 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc1999)
    %2891 = "ttir.transpose"(%2889, %2890) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc1999)
    %2892 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc2000)
    %2893 = "ttir.conv2d"(%2891, %arg496, %2892) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x640xbf16>, tensor<320x640x1x1xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc2000)
    %2894 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc2001)
    %2895 = "ttir.transpose"(%2893, %2894) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc2001)
    %2896 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc2002)
    %2897 = "ttir.transpose"(%2895, %2896) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc2002)
    %2898 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc300)
    %2899 = "ttir.multiply"(%2897, %arg299, %2898) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc300)
    %2900 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc301)
    %2901 = "ttir.add"(%2899, %arg300, %2900) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc301)
    %2902 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1511)
    %2903 = "ttir.sigmoid"(%2901, %2902) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1511)
    %2904 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1512)
    %2905 = "ttir.multiply"(%2901, %2903, %2904) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1512)
    %2906 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc2003)
    %2907 = "ttir.transpose"(%2905, %2906) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc2003)
    %2908 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc2004)
    %2909 = "ttir.transpose"(%2907, %2908) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc2004)
    %2910 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc2005)
    %2911 = "ttir.conv2d"(%2909, %arg497, %2910) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc2005)
    %2912 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc2006)
    %2913 = "ttir.transpose"(%2911, %2912) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc2006)
    %2914 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc2007)
    %2915 = "ttir.transpose"(%2913, %2914) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc2007)
    %2916 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc302)
    %2917 = "ttir.multiply"(%2915, %arg301, %2916) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc302)
    %2918 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc303)
    %2919 = "ttir.add"(%2917, %arg302, %2918) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc303)
    %2920 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1514)
    %2921 = "ttir.sigmoid"(%2919, %2920) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1514)
    %2922 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1515)
    %2923 = "ttir.multiply"(%2919, %2921, %2922) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1515)
    %2924 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc705)
    %2925 = "ttir.add"(%2833, %2923, %2924) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc705)
    %2926 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc2008)
    %2927 = "ttir.transpose"(%2925, %2926) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc2008)
    %2928 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc2009)
    %2929 = "ttir.transpose"(%2927, %2928) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc2009)
    %2930 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc2010)
    %2931 = "ttir.conv2d"(%2929, %arg498, %2930) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc2010)
    %2932 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc2011)
    %2933 = "ttir.transpose"(%2931, %2932) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc2011)
    %2934 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc2012)
    %2935 = "ttir.transpose"(%2933, %2934) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc2012)
    %2936 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc304)
    %2937 = "ttir.multiply"(%2935, %arg303, %2936) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc304)
    %2938 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc305)
    %2939 = "ttir.add"(%2937, %arg304, %2938) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc305)
    %2940 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1517)
    %2941 = "ttir.sigmoid"(%2939, %2940) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1517)
    %2942 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1518)
    %2943 = "ttir.multiply"(%2939, %2941, %2942) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1518)
    %2944 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc2013)
    %2945 = "ttir.transpose"(%2943, %2944) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc2013)
    %2946 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc2014)
    %2947 = "ttir.transpose"(%2945, %2946) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc2014)
    %2948 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc2015)
    %2949 = "ttir.conv2d"(%2947, %arg499, %2948) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<640x320x1x1xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc2015)
    %2950 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc2016)
    %2951 = "ttir.transpose"(%2949, %2950) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc2016)
    %2952 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc2017)
    %2953 = "ttir.transpose"(%2951, %2952) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc2017)
    %2954 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc306)
    %2955 = "ttir.multiply"(%2953, %arg305, %2954) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc306)
    %2956 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc307)
    %2957 = "ttir.add"(%2955, %arg306, %2956) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc307)
    %2958 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1520)
    %2959 = "ttir.sigmoid"(%2957, %2958) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1520)
    %2960 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1521)
    %2961 = "ttir.multiply"(%2957, %2959, %2960) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1521)
    %2962 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc2018)
    %2963 = "ttir.transpose"(%2961, %2962) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x20x20xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc2018)
    %2964 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc2019)
    %2965 = "ttir.transpose"(%2963, %2964) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc2019)
    %2966 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc2020)
    %2967 = "ttir.conv2d"(%2965, %arg500, %2966) <{dilation = array<i32: 1, 1>, groups = 640 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x640xbf16>, tensor<640x1x3x3xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc2020)
    %2968 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc2021)
    %2969 = "ttir.transpose"(%2967, %2968) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc2021)
    %2970 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc2022)
    %2971 = "ttir.transpose"(%2969, %2970) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc2022)
    %2972 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc308)
    %2973 = "ttir.multiply"(%2971, %arg307, %2972) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc308)
    %2974 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc309)
    %2975 = "ttir.add"(%2973, %arg308, %2974) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc309)
    %2976 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1523)
    %2977 = "ttir.sigmoid"(%2975, %2976) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1523)
    %2978 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1524)
    %2979 = "ttir.multiply"(%2975, %2977, %2978) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1524)
    %2980 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc2023)
    %2981 = "ttir.transpose"(%2979, %2980) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x20x20xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc2023)
    %2982 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc2024)
    %2983 = "ttir.transpose"(%2981, %2982) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc2024)
    %2984 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc2025)
    %2985 = "ttir.conv2d"(%2983, %arg501, %2984) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x640xbf16>, tensor<320x640x1x1xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc2025)
    %2986 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc2026)
    %2987 = "ttir.transpose"(%2985, %2986) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc2026)
    %2988 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc2027)
    %2989 = "ttir.transpose"(%2987, %2988) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc2027)
    %2990 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc310)
    %2991 = "ttir.multiply"(%2989, %arg309, %2990) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc310)
    %2992 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc311)
    %2993 = "ttir.add"(%2991, %arg310, %2992) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc311)
    %2994 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1526)
    %2995 = "ttir.sigmoid"(%2993, %2994) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1526)
    %2996 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1527)
    %2997 = "ttir.multiply"(%2993, %2995, %2996) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1527)
    %2998 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc2028)
    %2999 = "ttir.transpose"(%2997, %2998) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc2028)
    %3000 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc2029)
    %3001 = "ttir.transpose"(%2999, %3000) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc2029)
    %3002 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc2030)
    %3003 = "ttir.conv2d"(%3001, %arg502, %3002) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc2030)
    %3004 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc2031)
    %3005 = "ttir.transpose"(%3003, %3004) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc2031)
    %3006 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc2032)
    %3007 = "ttir.transpose"(%3005, %3006) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc2032)
    %3008 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc312)
    %3009 = "ttir.multiply"(%3007, %arg311, %3008) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc312)
    %3010 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc313)
    %3011 = "ttir.add"(%3009, %arg312, %3010) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc313)
    %3012 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1529)
    %3013 = "ttir.sigmoid"(%3011, %3012) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1529)
    %3014 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1530)
    %3015 = "ttir.multiply"(%3011, %3013, %3014) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1530)
    %3016 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc707)
    %3017 = "ttir.add"(%2925, %3015, %3016) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc707)
    %3018 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc2033)
    %3019 = "ttir.transpose"(%3017, %3018) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc2033)
    %3020 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc2034)
    %3021 = "ttir.transpose"(%3019, %3020) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc2034)
    %3022 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc2035)
    %3023 = "ttir.conv2d"(%3021, %arg503, %3022) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc2035)
    %3024 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc2036)
    %3025 = "ttir.transpose"(%3023, %3024) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc2036)
    %3026 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc2037)
    %3027 = "ttir.transpose"(%3025, %3026) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc2037)
    %3028 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc314)
    %3029 = "ttir.multiply"(%3027, %arg313, %3028) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc314)
    %3030 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc315)
    %3031 = "ttir.add"(%3029, %arg314, %3030) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc315)
    %3032 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1532)
    %3033 = "ttir.sigmoid"(%3031, %3032) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1532)
    %3034 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1533)
    %3035 = "ttir.multiply"(%3031, %3033, %3034) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1533)
    %3036 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc2038)
    %3037 = "ttir.transpose"(%3035, %3036) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc2038)
    %3038 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc2039)
    %3039 = "ttir.transpose"(%3037, %3038) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc2039)
    %3040 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc2040)
    %3041 = "ttir.conv2d"(%3039, %arg504, %3040) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<640x320x1x1xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc2040)
    %3042 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc2041)
    %3043 = "ttir.transpose"(%3041, %3042) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc2041)
    %3044 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc2042)
    %3045 = "ttir.transpose"(%3043, %3044) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc2042)
    %3046 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc316)
    %3047 = "ttir.multiply"(%3045, %arg315, %3046) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc316)
    %3048 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc317)
    %3049 = "ttir.add"(%3047, %arg316, %3048) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc317)
    %3050 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1535)
    %3051 = "ttir.sigmoid"(%3049, %3050) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1535)
    %3052 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1536)
    %3053 = "ttir.multiply"(%3049, %3051, %3052) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1536)
    %3054 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc2043)
    %3055 = "ttir.transpose"(%3053, %3054) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x20x20xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc2043)
    %3056 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc2044)
    %3057 = "ttir.transpose"(%3055, %3056) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc2044)
    %3058 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc2045)
    %3059 = "ttir.conv2d"(%3057, %arg505, %3058) <{dilation = array<i32: 1, 1>, groups = 640 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x640xbf16>, tensor<640x1x3x3xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc2045)
    %3060 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc2046)
    %3061 = "ttir.transpose"(%3059, %3060) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc2046)
    %3062 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc2047)
    %3063 = "ttir.transpose"(%3061, %3062) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc2047)
    %3064 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc318)
    %3065 = "ttir.multiply"(%3063, %arg317, %3064) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc318)
    %3066 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc319)
    %3067 = "ttir.add"(%3065, %arg318, %3066) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc319)
    %3068 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1538)
    %3069 = "ttir.sigmoid"(%3067, %3068) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1538)
    %3070 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1539)
    %3071 = "ttir.multiply"(%3067, %3069, %3070) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1539)
    %3072 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc2048)
    %3073 = "ttir.transpose"(%3071, %3072) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x20x20xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc2048)
    %3074 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc2049)
    %3075 = "ttir.transpose"(%3073, %3074) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc2049)
    %3076 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc2050)
    %3077 = "ttir.conv2d"(%3075, %arg506, %3076) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x640xbf16>, tensor<320x640x1x1xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc2050)
    %3078 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc2051)
    %3079 = "ttir.transpose"(%3077, %3078) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc2051)
    %3080 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc2052)
    %3081 = "ttir.transpose"(%3079, %3080) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc2052)
    %3082 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc320)
    %3083 = "ttir.multiply"(%3081, %arg319, %3082) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc320)
    %3084 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc321)
    %3085 = "ttir.add"(%3083, %arg320, %3084) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc321)
    %3086 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1541)
    %3087 = "ttir.sigmoid"(%3085, %3086) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1541)
    %3088 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1542)
    %3089 = "ttir.multiply"(%3085, %3087, %3088) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1542)
    %3090 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc2053)
    %3091 = "ttir.transpose"(%3089, %3090) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc2053)
    %3092 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc2054)
    %3093 = "ttir.transpose"(%3091, %3092) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc2054)
    %3094 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc2055)
    %3095 = "ttir.conv2d"(%3093, %arg507, %3094) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc2055)
    %3096 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc2056)
    %3097 = "ttir.transpose"(%3095, %3096) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc2056)
    %3098 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc2057)
    %3099 = "ttir.transpose"(%3097, %3098) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc2057)
    %3100 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc322)
    %3101 = "ttir.multiply"(%3099, %arg321, %3100) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc322)
    %3102 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc323)
    %3103 = "ttir.add"(%3101, %arg322, %3102) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc323)
    %3104 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1544)
    %3105 = "ttir.sigmoid"(%3103, %3104) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1544)
    %3106 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1545)
    %3107 = "ttir.multiply"(%3103, %3105, %3106) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1545)
    %3108 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc709)
    %3109 = "ttir.add"(%3017, %3107, %3108) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc709)
    %3110 = ttir.empty() : tensor<1x1600x20x20xbf16> loc(#loc492)
    %3111 = "ttir.concat"(%2831, %2833, %2925, %3017, %3109, %3110) <{dim = -3 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x1600x20x20xbf16>) -> tensor<1x1600x20x20xbf16> loc(#loc492)
    %3112 = ttir.empty() : tensor<1x20x1600x20xbf16> loc(#loc1057)
    %3113 = "ttir.transpose"(%3111, %3112) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x1600x20x20xbf16>, tensor<1x20x1600x20xbf16>) -> tensor<1x20x1600x20xbf16> loc(#loc1057)
    %3114 = ttir.empty() : tensor<1x20x20x1600xbf16> loc(#loc1058)
    %3115 = "ttir.transpose"(%3113, %3114) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x1600x20xbf16>, tensor<1x20x20x1600xbf16>) -> tensor<1x20x20x1600xbf16> loc(#loc1058)
    %3116 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc1059)
    %3117 = "ttir.conv2d"(%3115, %arg508, %3116) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x1600xbf16>, tensor<640x1600x1x1xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc1059)
    %3118 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc1060)
    %3119 = "ttir.transpose"(%3117, %3118) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc1060)
    %3120 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1061)
    %3121 = "ttir.transpose"(%3119, %3120) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1061)
    %3122 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc324)
    %3123 = "ttir.multiply"(%3121, %arg323, %3122) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc324)
    %3124 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc325)
    %3125 = "ttir.add"(%3123, %arg324, %3124) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc325)
    %3126 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc711)
    %3127 = "ttir.sigmoid"(%3125, %3126) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc711)
    %3128 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc712)
    %3129 = "ttir.multiply"(%3125, %3127, %3128) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc712)
    %3130 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc1546)
    %3131 = "ttir.transpose"(%3129, %3130) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x20x20xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc1546)
    %3132 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc1547)
    %3133 = "ttir.transpose"(%3131, %3132) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc1547)
    %3134 = ttir.empty() : tensor<1x20x20x80xbf16> loc(#loc1548)
    %3135 = "ttir.conv2d"(%3133, %arg509, %3134) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x640xbf16>, tensor<80x640x3x3xbf16>, tensor<1x20x20x80xbf16>) -> tensor<1x20x20x80xbf16> loc(#loc1548)
    %3136 = ttir.empty() : tensor<1x20x80x20xbf16> loc(#loc1549)
    %3137 = "ttir.transpose"(%3135, %3136) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x80xbf16>, tensor<1x20x80x20xbf16>) -> tensor<1x20x80x20xbf16> loc(#loc1549)
    %3138 = ttir.empty() : tensor<1x80x20x20xbf16> loc(#loc1550)
    %3139 = "ttir.transpose"(%3137, %3138) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x80x20xbf16>, tensor<1x80x20x20xbf16>) -> tensor<1x80x20x20xbf16> loc(#loc1550)
    %3140 = ttir.empty() : tensor<1x80x20x20xbf16> loc(#loc326)
    %3141 = "ttir.multiply"(%3139, %arg325, %3140) : (tensor<1x80x20x20xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x20x20xbf16>) -> tensor<1x80x20x20xbf16> loc(#loc326)
    %3142 = ttir.empty() : tensor<1x80x20x20xbf16> loc(#loc327)
    %3143 = "ttir.add"(%3141, %arg326, %3142) : (tensor<1x80x20x20xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x20x20xbf16>) -> tensor<1x80x20x20xbf16> loc(#loc327)
    %3144 = ttir.empty() : tensor<1x80x20x20xbf16> loc(#loc1063)
    %3145 = "ttir.sigmoid"(%3143, %3144) : (tensor<1x80x20x20xbf16>, tensor<1x80x20x20xbf16>) -> tensor<1x80x20x20xbf16> loc(#loc1063)
    %3146 = ttir.empty() : tensor<1x80x20x20xbf16> loc(#loc1064)
    %3147 = "ttir.multiply"(%3143, %3145, %3146) : (tensor<1x80x20x20xbf16>, tensor<1x80x20x20xbf16>, tensor<1x80x20x20xbf16>) -> tensor<1x80x20x20xbf16> loc(#loc1064)
    %3148 = ttir.empty() : tensor<1x20x80x20xbf16> loc(#loc1551)
    %3149 = "ttir.transpose"(%3147, %3148) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x20x20xbf16>, tensor<1x20x80x20xbf16>) -> tensor<1x20x80x20xbf16> loc(#loc1551)
    %3150 = ttir.empty() : tensor<1x20x20x80xbf16> loc(#loc1552)
    %3151 = "ttir.transpose"(%3149, %3150) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x80x20xbf16>, tensor<1x20x20x80xbf16>) -> tensor<1x20x20x80xbf16> loc(#loc1552)
    %3152 = ttir.empty() : tensor<1x20x20x80xbf16> loc(#loc1553)
    %3153 = "ttir.conv2d"(%3151, %arg510, %3152) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x80xbf16>, tensor<80x80x3x3xbf16>, tensor<1x20x20x80xbf16>) -> tensor<1x20x20x80xbf16> loc(#loc1553)
    %3154 = ttir.empty() : tensor<1x20x80x20xbf16> loc(#loc1554)
    %3155 = "ttir.transpose"(%3153, %3154) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x80xbf16>, tensor<1x20x80x20xbf16>) -> tensor<1x20x80x20xbf16> loc(#loc1554)
    %3156 = ttir.empty() : tensor<1x80x20x20xbf16> loc(#loc1555)
    %3157 = "ttir.transpose"(%3155, %3156) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x80x20xbf16>, tensor<1x80x20x20xbf16>) -> tensor<1x80x20x20xbf16> loc(#loc1555)
    %3158 = ttir.empty() : tensor<1x80x20x20xbf16> loc(#loc328)
    %3159 = "ttir.multiply"(%3157, %arg327, %3158) : (tensor<1x80x20x20xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x20x20xbf16>) -> tensor<1x80x20x20xbf16> loc(#loc328)
    %3160 = ttir.empty() : tensor<1x80x20x20xbf16> loc(#loc329)
    %3161 = "ttir.add"(%3159, %arg328, %3160) : (tensor<1x80x20x20xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x20x20xbf16>) -> tensor<1x80x20x20xbf16> loc(#loc329)
    %3162 = ttir.empty() : tensor<1x80x20x20xbf16> loc(#loc1066)
    %3163 = "ttir.sigmoid"(%3161, %3162) : (tensor<1x80x20x20xbf16>, tensor<1x80x20x20xbf16>) -> tensor<1x80x20x20xbf16> loc(#loc1066)
    %3164 = ttir.empty() : tensor<1x80x20x20xbf16> loc(#loc1067)
    %3165 = "ttir.multiply"(%3161, %3163, %3164) : (tensor<1x80x20x20xbf16>, tensor<1x80x20x20xbf16>, tensor<1x80x20x20xbf16>) -> tensor<1x80x20x20xbf16> loc(#loc1067)
    %3166 = ttir.empty() : tensor<1x20x80x20xbf16> loc(#loc1068)
    %3167 = "ttir.transpose"(%3165, %3166) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x20x20xbf16>, tensor<1x20x80x20xbf16>) -> tensor<1x20x80x20xbf16> loc(#loc1068)
    %3168 = ttir.empty() : tensor<1x20x20x80xbf16> loc(#loc1069)
    %3169 = "ttir.transpose"(%3167, %3168) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x80x20xbf16>, tensor<1x20x20x80xbf16>) -> tensor<1x20x20x80xbf16> loc(#loc1069)
    %3170 = ttir.empty() : tensor<1x20x20x64xbf16> loc(#loc1070)
    %3171 = "ttir.conv2d"(%3169, %arg511, %arg512, %3170) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x80xbf16>, tensor<64x80x1x1xbf16>, tensor<1x1x1x64xbf16>, tensor<1x20x20x64xbf16>) -> tensor<1x20x20x64xbf16> loc(#loc1070)
    %3172 = ttir.empty() : tensor<1x20x64x20xbf16> loc(#loc1071)
    %3173 = "ttir.transpose"(%3171, %3172) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x64xbf16>, tensor<1x20x64x20xbf16>) -> tensor<1x20x64x20xbf16> loc(#loc1071)
    %3174 = ttir.empty() : tensor<1x64x20x20xbf16> loc(#loc1072)
    %3175 = "ttir.transpose"(%3173, %3174) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x64x20xbf16>, tensor<1x64x20x20xbf16>) -> tensor<1x64x20x20xbf16> loc(#loc1072)
    %3176 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc2058)
    %3177 = "ttir.transpose"(%3129, %3176) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x20x20xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc2058)
    %3178 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc2059)
    %3179 = "ttir.transpose"(%3177, %3178) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc2059)
    %3180 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc2060)
    %3181 = "ttir.conv2d"(%3179, %arg513, %3180) <{dilation = array<i32: 1, 1>, groups = 640 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x640xbf16>, tensor<640x1x3x3xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc2060)
    %3182 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc2061)
    %3183 = "ttir.transpose"(%3181, %3182) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc2061)
    %3184 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc2062)
    %3185 = "ttir.transpose"(%3183, %3184) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc2062)
    %3186 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc330)
    %3187 = "ttir.multiply"(%3185, %arg329, %3186) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc330)
    %3188 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc331)
    %3189 = "ttir.add"(%3187, %arg330, %3188) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc331)
    %3190 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1557)
    %3191 = "ttir.sigmoid"(%3189, %3190) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1557)
    %3192 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc1558)
    %3193 = "ttir.multiply"(%3189, %3191, %3192) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc1558)
    %3194 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc2063)
    %3195 = "ttir.transpose"(%3193, %3194) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x20x20xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc2063)
    %3196 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc2064)
    %3197 = "ttir.transpose"(%3195, %3196) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc2064)
    %3198 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc2065)
    %3199 = "ttir.conv2d"(%3197, %arg514, %3198) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x640xbf16>, tensor<320x640x1x1xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc2065)
    %3200 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc2066)
    %3201 = "ttir.transpose"(%3199, %3200) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc2066)
    %3202 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc2067)
    %3203 = "ttir.transpose"(%3201, %3202) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc2067)
    %3204 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc332)
    %3205 = "ttir.multiply"(%3203, %arg331, %3204) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc332)
    %3206 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc333)
    %3207 = "ttir.add"(%3205, %arg332, %3206) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc333)
    %3208 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1560)
    %3209 = "ttir.sigmoid"(%3207, %3208) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1560)
    %3210 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1561)
    %3211 = "ttir.multiply"(%3207, %3209, %3210) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1561)
    %3212 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc2068)
    %3213 = "ttir.transpose"(%3211, %3212) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc2068)
    %3214 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc2069)
    %3215 = "ttir.transpose"(%3213, %3214) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc2069)
    %3216 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc2070)
    %3217 = "ttir.conv2d"(%3215, %arg515, %3216) <{dilation = array<i32: 1, 1>, groups = 320 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x1x3x3xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc2070)
    %3218 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc2071)
    %3219 = "ttir.transpose"(%3217, %3218) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc2071)
    %3220 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc2072)
    %3221 = "ttir.transpose"(%3219, %3220) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc2072)
    %3222 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc334)
    %3223 = "ttir.multiply"(%3221, %arg333, %3222) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc334)
    %3224 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc335)
    %3225 = "ttir.add"(%3223, %arg334, %3224) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc335)
    %3226 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1563)
    %3227 = "ttir.sigmoid"(%3225, %3226) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1563)
    %3228 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1564)
    %3229 = "ttir.multiply"(%3225, %3227, %3228) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1564)
    %3230 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc2073)
    %3231 = "ttir.transpose"(%3229, %3230) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc2073)
    %3232 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc2074)
    %3233 = "ttir.transpose"(%3231, %3232) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc2074)
    %3234 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc2075)
    %3235 = "ttir.conv2d"(%3233, %arg516, %3234) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x320x1x1xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc2075)
    %3236 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc2076)
    %3237 = "ttir.transpose"(%3235, %3236) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc2076)
    %3238 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc2077)
    %3239 = "ttir.transpose"(%3237, %3238) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc2077)
    %3240 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc336)
    %3241 = "ttir.multiply"(%3239, %arg335, %3240) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc336)
    %3242 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc337)
    %3243 = "ttir.add"(%3241, %arg336, %3242) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc337)
    %3244 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1566)
    %3245 = "ttir.sigmoid"(%3243, %3244) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1566)
    %3246 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1567)
    %3247 = "ttir.multiply"(%3243, %3245, %3246) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1567)
    %3248 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1077)
    %3249 = "ttir.transpose"(%3247, %3248) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1077)
    %3250 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1078)
    %3251 = "ttir.transpose"(%3249, %3250) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1078)
    %3252 = ttir.empty() : tensor<1x20x20x80xbf16> loc(#loc1079)
    %3253 = "ttir.conv2d"(%3251, %arg517, %arg518, %3252) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<80x320x1x1xbf16>, tensor<1x1x1x80xbf16>, tensor<1x20x20x80xbf16>) -> tensor<1x20x20x80xbf16> loc(#loc1079)
    %3254 = ttir.empty() : tensor<1x20x80x20xbf16> loc(#loc1080)
    %3255 = "ttir.transpose"(%3253, %3254) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x80xbf16>, tensor<1x20x80x20xbf16>) -> tensor<1x20x80x20xbf16> loc(#loc1080)
    %3256 = ttir.empty() : tensor<1x80x20x20xbf16> loc(#loc1081)
    %3257 = "ttir.transpose"(%3255, %3256) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x80x20xbf16>, tensor<1x80x20x20xbf16>) -> tensor<1x80x20x20xbf16> loc(#loc1081)
    %3258 = ttir.empty() : tensor<1x144x20x20xbf16> loc(#loc495)
    %3259 = "ttir.concat"(%3175, %3257, %3258) <{dim = -3 : si32}> : (tensor<1x64x20x20xbf16>, tensor<1x80x20x20xbf16>, tensor<1x144x20x20xbf16>) -> tensor<1x144x20x20xbf16> loc(#loc495)
    %3260 = ttir.empty() : tensor<1x144x400xbf16> loc(#loc496)
    %3261 = "ttir.reshape"(%3259, %3260) <{shape = [1 : i32, 144 : i32, 400 : i32]}> : (tensor<1x144x20x20xbf16>, tensor<1x144x400xbf16>) -> tensor<1x144x400xbf16> loc(#loc496)
    %3262 = ttir.empty() : tensor<1x144x8400xbf16> loc(#loc497)
    %3263 = "ttir.concat"(%2307, %2777, %3261, %3262) <{dim = -1 : si32}> : (tensor<1x144x6400xbf16>, tensor<1x144x1600xbf16>, tensor<1x144x400xbf16>, tensor<1x144x8400xbf16>) -> tensor<1x144x8400xbf16> loc(#loc497)
    %3264 = ttir.empty() : tensor<1x64x8400xbf16> loc(#loc498)
    %3265 = "ttir.index"(%3263, %3264) <{begin = 0 : i32, dim = 1 : i32, end = 64 : i32, step = 1 : i32}> : (tensor<1x144x8400xbf16>, tensor<1x64x8400xbf16>) -> tensor<1x64x8400xbf16> loc(#loc498)
    %3266 = ttir.empty() : tensor<1x4x16x8400xbf16> loc(#loc718)
    %3267 = "ttir.reshape"(%3265, %3266) <{shape = [1 : i32, 4 : i32, 16 : i32, 8400 : i32]}> : (tensor<1x64x8400xbf16>, tensor<1x4x16x8400xbf16>) -> tensor<1x4x16x8400xbf16> loc(#loc718)
    %3268 = ttir.empty() : tensor<1x16x4x8400xbf16> loc(#loc719)
    %3269 = "ttir.transpose"(%3267, %3268) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x4x16x8400xbf16>, tensor<1x16x4x8400xbf16>) -> tensor<1x16x4x8400xbf16> loc(#loc719)
    %3270 = ttir.empty() : tensor<1x16x4x8400xbf16> loc(#loc720)
    %3271 = "ttir.softmax"(%3269, %3270) <{dimension = 1 : si32}> : (tensor<1x16x4x8400xbf16>, tensor<1x16x4x8400xbf16>) -> tensor<1x16x4x8400xbf16> loc(#loc720)
    %3272 = ttir.empty() : tensor<1x4x16x8400xbf16> loc(#loc1082)
    %3273 = "ttir.transpose"(%3271, %3272) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x16x4x8400xbf16>, tensor<1x4x16x8400xbf16>) -> tensor<1x4x16x8400xbf16> loc(#loc1082)
    %3274 = ttir.empty() : tensor<1x4x8400x16xbf16> loc(#loc1083)
    %3275 = "ttir.transpose"(%3273, %3274) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x4x16x8400xbf16>, tensor<1x4x8400x16xbf16>) -> tensor<1x4x8400x16xbf16> loc(#loc1083)
    %3276 = ttir.empty() : tensor<1x4x8400x1xbf16> loc(#loc1084)
    %3277 = "ttir.conv2d"(%3275, %arg337, %3276) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x4x8400x16xbf16>, tensor<1x16x1x1xbf16>, tensor<1x4x8400x1xbf16>) -> tensor<1x4x8400x1xbf16> loc(#loc1084)
    %3278 = ttir.empty() : tensor<1x4x1x8400xbf16> loc(#loc1085)
    %3279 = "ttir.transpose"(%3277, %3278) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x4x8400x1xbf16>, tensor<1x4x1x8400xbf16>) -> tensor<1x4x1x8400xbf16> loc(#loc1085)
    %3280 = ttir.empty() : tensor<1x1x4x8400xbf16> loc(#loc1086)
    %3281 = "ttir.transpose"(%3279, %3280) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x4x1x8400xbf16>, tensor<1x1x4x8400xbf16>) -> tensor<1x1x4x8400xbf16> loc(#loc1086)
    %3282 = ttir.empty() : tensor<1x4x8400xbf16> loc(#loc722)
    %3283 = "ttir.squeeze"(%3281, %3282) <{dim = 0 : si32}> : (tensor<1x1x4x8400xbf16>, tensor<1x4x8400xbf16>) -> tensor<1x4x8400xbf16> loc(#loc722)
    %3284 = ttir.empty() : tensor<1x2x8400xbf16> loc(#loc500)
    %3285 = "ttir.index"(%3283, %3284) <{begin = 0 : i32, dim = 1 : i32, end = 2 : i32, step = 1 : i32}> : (tensor<1x4x8400xbf16>, tensor<1x2x8400xbf16>) -> tensor<1x2x8400xbf16> loc(#loc500)
    %3286 = ttir.empty() : tensor<1x2x8400xbf16> loc(#loc501)
    %3287 = "ttir.subtract"(%arg1, %3285, %3286) : (tensor<1x2x8400xbf16>, tensor<1x2x8400xbf16>, tensor<1x2x8400xbf16>) -> tensor<1x2x8400xbf16> loc(#loc501)
    %3288 = ttir.empty() : tensor<1x2x8400xbf16> loc(#loc502)
    %3289 = "ttir.index"(%3283, %3288) <{begin = 2 : i32, dim = 1 : i32, end = 4 : i32, step = 1 : i32}> : (tensor<1x4x8400xbf16>, tensor<1x2x8400xbf16>) -> tensor<1x2x8400xbf16> loc(#loc502)
    %3290 = ttir.empty() : tensor<1x2x8400xbf16> loc(#loc503)
    %3291 = "ttir.add"(%arg1, %3289, %3290) : (tensor<1x2x8400xbf16>, tensor<1x2x8400xbf16>, tensor<1x2x8400xbf16>) -> tensor<1x2x8400xbf16> loc(#loc503)
    %3292 = ttir.empty() : tensor<1x2x8400xbf16> loc(#loc504)
    %3293 = "ttir.add"(%3287, %3291, %3292) : (tensor<1x2x8400xbf16>, tensor<1x2x8400xbf16>, tensor<1x2x8400xbf16>) -> tensor<1x2x8400xbf16> loc(#loc504)
    %3294 = ttir.empty() : tensor<1x2x8400xbf16> loc(#loc505)
    %3295 = "ttir.div"(%3293, %arg338, %3294) : (tensor<1x2x8400xbf16>, tensor<1xbf16>, tensor<1x2x8400xbf16>) -> tensor<1x2x8400xbf16> loc(#loc505)
    %3296 = ttir.empty() : tensor<1x2x8400xbf16> loc(#loc506)
    %3297 = "ttir.subtract"(%3291, %3287, %3296) : (tensor<1x2x8400xbf16>, tensor<1x2x8400xbf16>, tensor<1x2x8400xbf16>) -> tensor<1x2x8400xbf16> loc(#loc506)
    %3298 = ttir.empty() : tensor<1x4x8400xbf16> loc(#loc507)
    %3299 = "ttir.concat"(%3295, %3297, %3298) <{dim = -2 : si32}> : (tensor<1x2x8400xbf16>, tensor<1x2x8400xbf16>, tensor<1x4x8400xbf16>) -> tensor<1x4x8400xbf16> loc(#loc507)
    %3300 = ttir.empty() : tensor<1x4x8400xbf16> loc(#loc508)
    %3301 = "ttir.multiply"(%3299, %arg339, %3300) : (tensor<1x4x8400xbf16>, tensor<1x8400xbf16>, tensor<1x4x8400xbf16>) -> tensor<1x4x8400xbf16> loc(#loc508)
    %3302 = ttir.empty() : tensor<1x80x8400xbf16> loc(#loc509)
    %3303 = "ttir.index"(%3263, %3302) <{begin = 64 : i32, dim = 1 : i32, end = 144 : i32, step = 1 : i32}> : (tensor<1x144x8400xbf16>, tensor<1x80x8400xbf16>) -> tensor<1x80x8400xbf16> loc(#loc509)
    %3304 = ttir.empty() : tensor<1x80x8400xbf16> loc(#loc510)
    %3305 = "ttir.sigmoid"(%3303, %3304) : (tensor<1x80x8400xbf16>, tensor<1x80x8400xbf16>) -> tensor<1x80x8400xbf16> loc(#loc510)
    %3306 = ttir.empty() : tensor<1x84x8400xbf16> loc(#loc511)
    %3307 = "ttir.concat"(%3301, %3305, %3306) <{dim = -2 : si32}> : (tensor<1x4x8400xbf16>, tensor<1x80x8400xbf16>, tensor<1x84x8400xbf16>) -> tensor<1x84x8400xbf16> loc(#loc511)
    return %3307, %2305, %2775, %3259 : tensor<1x84x8400xbf16>, tensor<1x144x80x80xbf16>, tensor<1x144x40x40xbf16>, tensor<1x144x20x20xbf16> loc(#loc338)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("test.benchmark.utils.YoloWrapper::")
#loc2 = loc("multiply_7")
#loc3 = loc("add_13")
#loc4 = loc("multiply_23")
#loc5 = loc("add_29")
#loc6 = loc("multiply_39")
#loc7 = loc("add_45")
#loc8 = loc("multiply_57")
#loc9 = loc("add_63")
#loc10 = loc("multiply_73")
#loc11 = loc("add_79")
#loc12 = loc("multiply_90")
#loc13 = loc("add_96")
#loc14 = loc("multiply_106")
#loc15 = loc("add_112")
#loc16 = loc("multiply_123")
#loc17 = loc("add_129")
#loc18 = loc("multiply_139")
#loc19 = loc("add_145")
#loc20 = loc("multiply_157")
#loc21 = loc("add_163")
#loc22 = loc("multiply_173")
#loc23 = loc("add_179")
#loc24 = loc("multiply_189")
#loc25 = loc("add_195")
#loc26 = loc("multiply_207")
#loc27 = loc("add_213")
#loc28 = loc("multiply_223")
#loc29 = loc("add_229")
#loc30 = loc("multiply_240")
#loc31 = loc("add_246")
#loc32 = loc("multiply_256")
#loc33 = loc("add_262")
#loc34 = loc("multiply_273")
#loc35 = loc("add_279")
#loc36 = loc("multiply_289")
#loc37 = loc("add_295")
#loc38 = loc("multiply_306")
#loc39 = loc("add_312")
#loc40 = loc("multiply_322")
#loc41 = loc("add_328")
#loc42 = loc("multiply_339")
#loc43 = loc("add_345")
#loc44 = loc("multiply_355")
#loc45 = loc("add_361")
#loc46 = loc("multiply_372")
#loc47 = loc("add_378")
#loc48 = loc("multiply_388")
#loc49 = loc("add_394")
#loc50 = loc("multiply_406")
#loc51 = loc("add_412")
#loc52 = loc("multiply_422")
#loc53 = loc("add_428")
#loc54 = loc("multiply_439")
#loc55 = loc("add_445")
#loc56 = loc("multiply_453")
#loc57 = loc("add_459")
#loc58 = loc("multiply_472")
#loc59 = loc("add_478")
#loc60 = loc("multiply_488")
#loc61 = loc("add_494")
#loc62 = loc("multiply_505")
#loc63 = loc("add_511")
#loc64 = loc("multiply_521")
#loc65 = loc("add_527")
#loc66 = loc("multiply_538")
#loc67 = loc("add_544")
#loc68 = loc("multiply_556")
#loc69 = loc("add_562")
#loc70 = loc("multiply_572")
#loc71 = loc("add_578")
#loc72 = loc("multiply_589")
#loc73 = loc("add_595")
#loc74 = loc("multiply_605")
#loc75 = loc("add_611")
#loc76 = loc("multiply_622")
#loc77 = loc("add_628")
#loc78 = loc("multiply_640")
#loc79 = loc("add_646")
#loc80 = loc("multiply_656")
#loc81 = loc("add_662")
#loc82 = loc("multiply_673")
#loc83 = loc("add_679")
#loc84 = loc("multiply_689")
#loc85 = loc("add_695")
#loc86 = loc("multiply_706")
#loc87 = loc("add_712")
#loc88 = loc("multiply_724")
#loc89 = loc("add_730")
#loc90 = loc("multiply_740")
#loc91 = loc("add_746")
#loc92 = loc("multiply_757")
#loc93 = loc("add_763")
#loc94 = loc("multiply_773")
#loc95 = loc("add_779")
#loc96 = loc("multiply_790")
#loc97 = loc("add_796")
#loc98 = loc("multiply_808")
#loc99 = loc("add_814")
#loc100 = loc("multiply_824")
#loc101 = loc("add_830")
#loc102 = loc("multiply_841")
#loc103 = loc("add_847")
#loc104 = loc("multiply_857")
#loc105 = loc("add_863")
#loc106 = loc("multiply_874")
#loc107 = loc("add_880")
#loc108 = loc("multiply_892")
#loc109 = loc("add_898")
#loc110 = loc("multiply_908")
#loc111 = loc("add_914")
#loc112 = loc("multiply_925")
#loc113 = loc("add_931")
#loc114 = loc("multiply_941")
#loc115 = loc("add_947")
#loc116 = loc("multiply_958")
#loc117 = loc("add_964")
#loc118 = loc("multiply_976")
#loc119 = loc("add_982")
#loc120 = loc("multiply_992")
#loc121 = loc("add_998")
#loc122 = loc("multiply_1009")
#loc123 = loc("add_1015")
#loc124 = loc("multiply_1023")
#loc125 = loc("add_1029")
#loc126 = loc("multiply_1042")
#loc127 = loc("add_1048")
#loc128 = loc("multiply_1058")
#loc129 = loc("add_1064")
#loc130 = loc("multiply_1075")
#loc131 = loc("add_1081")
#loc132 = loc("multiply_1091")
#loc133 = loc("add_1097")
#loc134 = loc("multiply_1108")
#loc135 = loc("add_1114")
#loc136 = loc("multiply_1126")
#loc137 = loc("add_1132")
#loc138 = loc("multiply_1142")
#loc139 = loc("add_1148")
#loc140 = loc("multiply_1159")
#loc141 = loc("add_1165")
#loc142 = loc("multiply_1175")
#loc143 = loc("add_1181")
#loc144 = loc("multiply_1192")
#loc145 = loc("add_1198")
#loc146 = loc("multiply_1210")
#loc147 = loc("add_1216")
#loc148 = loc("multiply_1226")
#loc149 = loc("add_1232")
#loc150 = loc("multiply_1243")
#loc151 = loc("add_1249")
#loc152 = loc("multiply_1259")
#loc153 = loc("add_1265")
#loc154 = loc("multiply_1276")
#loc155 = loc("add_1282")
#loc156 = loc("multiply_1294")
#loc157 = loc("add_1300")
#loc158 = loc("multiply_1310")
#loc159 = loc("add_1316")
#loc160 = loc("multiply_1330")
#loc161 = loc("add_1336")
#loc162 = loc("multiply_1346")
#loc163 = loc("add_1352")
#loc164 = loc("multiply_1364")
#loc165 = loc("add_1370")
#loc166 = loc("transpose_1380")
#loc167 = loc("transpose_1386")
#loc168 = loc("multiply_1398")
#loc169 = loc("add_1404")
#loc170 = loc("multiply_1413")
#loc171 = loc("add_1419")
#loc172 = loc("multiply_1428")
#loc173 = loc("add_1434")
#loc174 = loc("multiply_1444")
#loc175 = loc("add_1450")
#loc176 = loc("multiply_1460")
#loc177 = loc("add_1466")
#loc178 = loc("multiply_1478")
#loc179 = loc("add_1484")
#loc180 = loc("multiply_1497")
#loc181 = loc("add_1503")
#loc182 = loc("multiply_1513")
#loc183 = loc("add_1519")
#loc184 = loc("multiply_1530")
#loc185 = loc("add_1536")
#loc186 = loc("multiply_1546")
#loc187 = loc("add_1552")
#loc188 = loc("multiply_1563")
#loc189 = loc("add_1569")
#loc190 = loc("multiply_1581")
#loc191 = loc("add_1587")
#loc192 = loc("multiply_1597")
#loc193 = loc("add_1603")
#loc194 = loc("multiply_1614")
#loc195 = loc("add_1620")
#loc196 = loc("multiply_1630")
#loc197 = loc("add_1636")
#loc198 = loc("multiply_1647")
#loc199 = loc("add_1653")
#loc200 = loc("multiply_1665")
#loc201 = loc("add_1671")
#loc202 = loc("multiply_1681")
#loc203 = loc("add_1687")
#loc204 = loc("multiply_1698")
#loc205 = loc("add_1704")
#loc206 = loc("multiply_1714")
#loc207 = loc("add_1720")
#loc208 = loc("multiply_1731")
#loc209 = loc("add_1737")
#loc210 = loc("multiply_1749")
#loc211 = loc("add_1755")
#loc212 = loc("multiply_1767")
#loc213 = loc("add_1773")
#loc214 = loc("multiply_1785")
#loc215 = loc("add_1791")
#loc216 = loc("multiply_1801")
#loc217 = loc("add_1807")
#loc218 = loc("multiply_1817")
#loc219 = loc("add_1823")
#loc220 = loc("multiply_1833")
#loc221 = loc("add_1839")
#loc222 = loc("multiply_1849")
#loc223 = loc("add_1855")
#loc224 = loc("multiply_1865")
#loc225 = loc("add_1871")
#loc226 = loc("multiply_1882")
#loc227 = loc("add_1888")
#loc228 = loc("multiply_1898")
#loc229 = loc("add_1904")
#loc230 = loc("multiply_1914")
#loc231 = loc("add_1920")
#loc232 = loc("multiply_1935")
#loc233 = loc("add_1941")
#loc234 = loc("multiply_1951")
#loc235 = loc("add_1957")
#loc236 = loc("multiply_1968")
#loc237 = loc("add_1974")
#loc238 = loc("multiply_1984")
#loc239 = loc("add_1990")
#loc240 = loc("multiply_2006")
#loc241 = loc("add_2012")
#loc242 = loc("multiply_2023")
#loc243 = loc("add_2029")
#loc244 = loc("multiply_2042")
#loc245 = loc("add_2048")
#loc246 = loc("multiply_2058")
#loc247 = loc("add_2064")
#loc248 = loc("multiply_2075")
#loc249 = loc("add_2081")
#loc250 = loc("multiply_2091")
#loc251 = loc("add_2097")
#loc252 = loc("multiply_2108")
#loc253 = loc("add_2114")
#loc254 = loc("multiply_2126")
#loc255 = loc("add_2132")
#loc256 = loc("multiply_2142")
#loc257 = loc("add_2148")
#loc258 = loc("multiply_2159")
#loc259 = loc("add_2165")
#loc260 = loc("multiply_2175")
#loc261 = loc("add_2181")
#loc262 = loc("multiply_2192")
#loc263 = loc("add_2198")
#loc264 = loc("multiply_2210")
#loc265 = loc("add_2216")
#loc266 = loc("multiply_2226")
#loc267 = loc("add_2232")
#loc268 = loc("multiply_2243")
#loc269 = loc("add_2249")
#loc270 = loc("multiply_2259")
#loc271 = loc("add_2265")
#loc272 = loc("multiply_2276")
#loc273 = loc("add_2282")
#loc274 = loc("multiply_2294")
#loc275 = loc("add_2300")
#loc276 = loc("multiply_2310")
#loc277 = loc("add_2316")
#loc278 = loc("multiply_2326")
#loc279 = loc("add_2332")
#loc280 = loc("multiply_2347")
#loc281 = loc("add_2353")
#loc282 = loc("multiply_2363")
#loc283 = loc("add_2369")
#loc284 = loc("multiply_2380")
#loc285 = loc("add_2386")
#loc286 = loc("multiply_2396")
#loc287 = loc("add_2402")
#loc288 = loc("multiply_2418")
#loc289 = loc("add_2424")
#loc290 = loc("multiply_2435")
#loc291 = loc("add_2441")
#loc292 = loc("multiply_2450")
#loc293 = loc("add_2456")
#loc294 = loc("multiply_2469")
#loc295 = loc("add_2475")
#loc296 = loc("multiply_2485")
#loc297 = loc("add_2491")
#loc298 = loc("multiply_2502")
#loc299 = loc("add_2508")
#loc300 = loc("multiply_2518")
#loc301 = loc("add_2524")
#loc302 = loc("multiply_2535")
#loc303 = loc("add_2541")
#loc304 = loc("multiply_2553")
#loc305 = loc("add_2559")
#loc306 = loc("multiply_2569")
#loc307 = loc("add_2575")
#loc308 = loc("multiply_2586")
#loc309 = loc("add_2592")
#loc310 = loc("multiply_2602")
#loc311 = loc("add_2608")
#loc312 = loc("multiply_2619")
#loc313 = loc("add_2625")
#loc314 = loc("multiply_2637")
#loc315 = loc("add_2643")
#loc316 = loc("multiply_2653")
#loc317 = loc("add_2659")
#loc318 = loc("multiply_2670")
#loc319 = loc("add_2676")
#loc320 = loc("multiply_2686")
#loc321 = loc("add_2692")
#loc322 = loc("multiply_2703")
#loc323 = loc("add_2709")
#loc324 = loc("multiply_2721")
#loc325 = loc("add_2727")
#loc326 = loc("multiply_2737")
#loc327 = loc("add_2743")
#loc328 = loc("multiply_2753")
#loc329 = loc("add_2759")
#loc330 = loc("multiply_2774")
#loc331 = loc("add_2780")
#loc332 = loc("multiply_2790")
#loc333 = loc("add_2796")
#loc334 = loc("multiply_2807")
#loc335 = loc("add_2813")
#loc336 = loc("multiply_2823")
#loc337 = loc("add_2829")
#loc338 = loc(unknown)
#loc339 = loc("ultralytics.nn.tasks.DetectionModel::model"(#loc1))
#loc340 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc339))
#loc341 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc339))
#loc342 = loc("ultralytics.nn.modules.block.C2f::2"(#loc339))
#loc343 = loc("ultralytics.nn.modules.conv.Conv::3"(#loc339))
#loc344 = loc("ultralytics.nn.modules.block.C2f::4"(#loc339))
#loc345 = loc("ultralytics.nn.modules.block.SCDown::5"(#loc339))
#loc346 = loc("ultralytics.nn.modules.block.C2fCIB::6"(#loc339))
#loc347 = loc("ultralytics.nn.modules.block.SCDown::7"(#loc339))
#loc348 = loc("ultralytics.nn.modules.block.C2fCIB::8"(#loc339))
#loc349 = loc("ultralytics.nn.modules.block.SPPF::9"(#loc339))
#loc350 = loc("ultralytics.nn.modules.block.PSA::10"(#loc339))
#loc351 = loc("torch.nn.modules.upsampling.Upsample::11"(#loc339))
#loc352 = loc("ultralytics.nn.modules.conv.Concat::12"(#loc339))
#loc353 = loc("ultralytics.nn.modules.block.C2fCIB::13"(#loc339))
#loc354 = loc("torch.nn.modules.upsampling.Upsample::14"(#loc339))
#loc355 = loc("ultralytics.nn.modules.conv.Concat::15"(#loc339))
#loc356 = loc("ultralytics.nn.modules.block.C2f::16"(#loc339))
#loc357 = loc("ultralytics.nn.modules.head.v10Detect::23"(#loc339))
#loc358 = loc("ultralytics.nn.modules.conv.Conv::17"(#loc339))
#loc359 = loc("ultralytics.nn.modules.conv.Concat::18"(#loc339))
#loc360 = loc("ultralytics.nn.modules.block.C2fCIB::19"(#loc339))
#loc361 = loc("ultralytics.nn.modules.block.SCDown::20"(#loc339))
#loc362 = loc("ultralytics.nn.modules.conv.Concat::21"(#loc339))
#loc363 = loc("ultralytics.nn.modules.block.C2fCIB::22"(#loc339))
#loc364 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc340))
#loc365 = loc("torch.nn.modules.activation.SiLU::"(#loc340))
#loc366 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc341))
#loc367 = loc("sigmoid_30"(#loc341))
#loc368 = loc("multiply_31"(#loc341))
#loc369 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc342))
#loc370 = loc("index_48"(#loc342))
#loc371 = loc("index_49"(#loc342))
#loc372 = loc("ultralytics.nn.modules.block.Bottleneck::m.0"(#loc342))
#loc373 = loc("ultralytics.nn.modules.block.Bottleneck::m.1"(#loc342))
#loc374 = loc("ultralytics.nn.modules.block.Bottleneck::m.2"(#loc342))
#loc375 = loc("concatenate_149"(#loc342))
#loc376 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc342))
#loc377 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc343))
#loc378 = loc("sigmoid_180"(#loc343))
#loc379 = loc("multiply_181"(#loc343))
#loc380 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc344))
#loc381 = loc("index_198"(#loc344))
#loc382 = loc("index_199"(#loc344))
#loc383 = loc("ultralytics.nn.modules.block.Bottleneck::0"(#loc344))
#loc384 = loc("ultralytics.nn.modules.block.Bottleneck::1"(#loc344))
#loc385 = loc("ultralytics.nn.modules.block.Bottleneck::2"(#loc344))
#loc386 = loc("ultralytics.nn.modules.block.Bottleneck::3"(#loc344))
#loc387 = loc("ultralytics.nn.modules.block.Bottleneck::4"(#loc344))
#loc388 = loc("ultralytics.nn.modules.block.Bottleneck::5"(#loc344))
#loc389 = loc("concatenate_398"(#loc344))
#loc390 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc344))
#loc391 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc345))
#loc392 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc345))
#loc393 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc346))
#loc394 = loc("index_462"(#loc346))
#loc395 = loc("index_463"(#loc346))
#loc396 = loc("ultralytics.nn.modules.block.CIB::0"(#loc346))
#loc397 = loc("ultralytics.nn.modules.block.CIB::1"(#loc346))
#loc398 = loc("ultralytics.nn.modules.block.CIB::2"(#loc346))
#loc399 = loc("ultralytics.nn.modules.block.CIB::3"(#loc346))
#loc400 = loc("ultralytics.nn.modules.block.CIB::4"(#loc346))
#loc401 = loc("ultralytics.nn.modules.block.CIB::5"(#loc346))
#loc402 = loc("concatenate_968"(#loc346))
#loc403 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc346))
#loc404 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc347))
#loc405 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc347))
#loc406 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc348))
#loc407 = loc("index_1032"(#loc348))
#loc408 = loc("index_1033"(#loc348))
#loc409 = loc("ultralytics.nn.modules.block.CIB::0"(#loc348))
#loc410 = loc("ultralytics.nn.modules.block.CIB::1"(#loc348))
#loc411 = loc("ultralytics.nn.modules.block.CIB::2"(#loc348))
#loc412 = loc("concatenate_1286"(#loc348))
#loc413 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc348))
#loc414 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc349))
#loc415 = loc("torch.nn.modules.pooling.MaxPool2d::m"(#loc349))
#loc416 = loc("max_pool2d_1320.dc.transpose.0"(#loc349))
#loc417 = loc("max_pool2d_1320.dc.transpose.1"(#loc349))
#loc418 = loc("max_pool2d_1320.dc.max_pool2d.2"(#loc349))
#loc419 = loc("max_pool2d_1320.dc.transpose.3"(#loc349))
#loc420 = loc("max_pool2d_1320.dc.transpose.4"(#loc349))
#loc421 = loc("max_pool2d_1321.dc.transpose.0"(#loc349))
#loc422 = loc("max_pool2d_1321.dc.transpose.1"(#loc349))
#loc423 = loc("max_pool2d_1321.dc.max_pool2d.2"(#loc349))
#loc424 = loc("max_pool2d_1321.dc.transpose.3"(#loc349))
#loc425 = loc("max_pool2d_1321.dc.transpose.4"(#loc349))
#loc426 = loc("concatenate_1322"(#loc349))
#loc427 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc349))
#loc428 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc350))
#loc429 = loc("index_1355"(#loc350))
#loc430 = loc("index_1356"(#loc350))
#loc431 = loc("ultralytics.nn.modules.block.Attention::attn"(#loc350))
#loc432 = loc("add_1420"(#loc350))
#loc433 = loc("torch.nn.modules.container.Sequential::ffn"(#loc350))
#loc434 = loc("add_1451"(#loc350))
#loc435 = loc("concatenate_1452"(#loc350))
#loc436 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc350))
#loc437 = loc("resize2d_1469.dc.transpose.0"(#loc351))
#loc438 = loc("resize2d_1469.dc.transpose.1"(#loc351))
#loc439 = loc("resize2d_1469.dc.upsample2d.2"(#loc351))
#loc440 = loc("resize2d_1469.dc.transpose.3"(#loc351))
#loc441 = loc("resize2d_1469.dc.transpose.4"(#loc351))
#loc442 = loc("concatenate_1470"(#loc352))
#loc443 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc353))
#loc444 = loc("index_1487"(#loc353))
#loc445 = loc("index_1488"(#loc353))
#loc446 = loc("ultralytics.nn.modules.block.CIB::0"(#loc353))
#loc447 = loc("ultralytics.nn.modules.block.CIB::1"(#loc353))
#loc448 = loc("ultralytics.nn.modules.block.CIB::2"(#loc353))
#loc449 = loc("concatenate_1741"(#loc353))
#loc450 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc353))
#loc451 = loc("resize2d_1758.dc.transpose.0"(#loc354))
#loc452 = loc("resize2d_1758.dc.transpose.1"(#loc354))
#loc453 = loc("resize2d_1758.dc.upsample2d.2"(#loc354))
#loc454 = loc("resize2d_1758.dc.transpose.3"(#loc354))
#loc455 = loc("resize2d_1758.dc.transpose.4"(#loc354))
#loc456 = loc("concatenate_1759"(#loc355))
#loc457 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc356))
#loc458 = loc("index_1776"(#loc356))
#loc459 = loc("index_1777"(#loc356))
#loc460 = loc("ultralytics.nn.modules.block.Bottleneck::0"(#loc356))
#loc461 = loc("ultralytics.nn.modules.block.Bottleneck::1"(#loc356))
#loc462 = loc("ultralytics.nn.modules.block.Bottleneck::2"(#loc356))
#loc463 = loc("concatenate_1874"(#loc356))
#loc464 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc356))
#loc465 = loc("torch.nn.modules.container.Sequential::0"(#loc357))
#loc466 = loc("concatenate_1997"(#loc357))
#loc467 = loc("reshape_1998"(#loc357))
#loc468 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc358))
#loc469 = loc("sigmoid_2013"(#loc358))
#loc470 = loc("multiply_2014"(#loc358))
#loc471 = loc("concatenate_2015"(#loc359))
#loc472 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc360))
#loc473 = loc("index_2032"(#loc360))
#loc474 = loc("index_2033"(#loc360))
#loc475 = loc("ultralytics.nn.modules.block.CIB::0"(#loc360))
#loc476 = loc("ultralytics.nn.modules.block.CIB::1"(#loc360))
#loc477 = loc("ultralytics.nn.modules.block.CIB::2"(#loc360))
#loc478 = loc("concatenate_2286"(#loc360))
#loc479 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc360))
#loc480 = loc("torch.nn.modules.container.Sequential::1"(#loc357))
#loc481 = loc("concatenate_2409"(#loc357))
#loc482 = loc("reshape_2410"(#loc357))
#loc483 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc361))
#loc484 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc361))
#loc485 = loc("concatenate_2442"(#loc362))
#loc486 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc363))
#loc487 = loc("index_2459"(#loc363))
#loc488 = loc("index_2460"(#loc363))
#loc489 = loc("ultralytics.nn.modules.block.CIB::0"(#loc363))
#loc490 = loc("ultralytics.nn.modules.block.CIB::1"(#loc363))
#loc491 = loc("ultralytics.nn.modules.block.CIB::2"(#loc363))
#loc492 = loc("concatenate_2713"(#loc363))
#loc493 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc363))
#loc494 = loc("torch.nn.modules.container.Sequential::2"(#loc357))
#loc495 = loc("concatenate_2836"(#loc357))
#loc496 = loc("reshape_2837"(#loc357))
#loc497 = loc("concatenate_2838"(#loc357))
#loc498 = loc("index_2839"(#loc357))
#loc499 = loc("ultralytics.nn.modules.block.DFL::dfl"(#loc357))
#loc500 = loc("index_2845"(#loc357))
#loc501 = loc("subtract_2846"(#loc357))
#loc502 = loc("index_2847"(#loc357))
#loc503 = loc("add_2848"(#loc357))
#loc504 = loc("add_2849"(#loc357))
#loc505 = loc("divide_2850"(#loc357))
#loc506 = loc("subtract_2851"(#loc357))
#loc507 = loc("concatenate_2852"(#loc357))
#loc508 = loc("multiply_2853"(#loc357))
#loc509 = loc("index_2854"(#loc357))
#loc510 = loc("sigmoid_2855"(#loc357))
#loc511 = loc("concatenate_2856"(#loc357))
#loc512 = loc("conv2d_0.dc.transpose.0"(#loc364))
#loc513 = loc("conv2d_0.dc.transpose.1"(#loc364))
#loc514 = loc("conv2d_0.dc.conv2d.2"(#loc364))
#loc515 = loc("conv2d_0.dc.transpose.3"(#loc364))
#loc516 = loc("conv2d_0.dc.transpose.4"(#loc364))
#loc517 = loc("sigmoid_14"(#loc365))
#loc518 = loc("multiply_15"(#loc365))
#loc519 = loc("conv2d_16.dc.transpose.0"(#loc366))
#loc520 = loc("conv2d_16.dc.transpose.1"(#loc366))
#loc521 = loc("conv2d_16.dc.conv2d.2"(#loc366))
#loc522 = loc("conv2d_16.dc.transpose.3"(#loc366))
#loc523 = loc("conv2d_16.dc.transpose.4"(#loc366))
#loc524 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc369))
#loc525 = loc("sigmoid_46"(#loc369))
#loc526 = loc("multiply_47"(#loc369))
#loc527 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc372))
#loc528 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc372))
#loc529 = loc("add_82"(#loc372))
#loc530 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc373))
#loc531 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc373))
#loc532 = loc("add_115"(#loc373))
#loc533 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc374))
#loc534 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc374))
#loc535 = loc("add_148"(#loc374))
#loc536 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc376))
#loc537 = loc("sigmoid_164"(#loc376))
#loc538 = loc("multiply_165"(#loc376))
#loc539 = loc("conv2d_166.dc.transpose.0"(#loc377))
#loc540 = loc("conv2d_166.dc.transpose.1"(#loc377))
#loc541 = loc("conv2d_166.dc.conv2d.2"(#loc377))
#loc542 = loc("conv2d_166.dc.transpose.3"(#loc377))
#loc543 = loc("conv2d_166.dc.transpose.4"(#loc377))
#loc544 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc380))
#loc545 = loc("sigmoid_196"(#loc380))
#loc546 = loc("multiply_197"(#loc380))
#loc547 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc383))
#loc548 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc383))
#loc549 = loc("add_232"(#loc383))
#loc550 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc384))
#loc551 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc384))
#loc552 = loc("add_265"(#loc384))
#loc553 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc385))
#loc554 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc385))
#loc555 = loc("add_298"(#loc385))
#loc556 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc386))
#loc557 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc386))
#loc558 = loc("add_331"(#loc386))
#loc559 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc387))
#loc560 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc387))
#loc561 = loc("add_364"(#loc387))
#loc562 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc388))
#loc563 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc388))
#loc564 = loc("add_397"(#loc388))
#loc565 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc390))
#loc566 = loc("sigmoid_413"(#loc390))
#loc567 = loc("multiply_414"(#loc390))
#loc568 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc391))
#loc569 = loc("sigmoid_429"(#loc391))
#loc570 = loc("multiply_430"(#loc391))
#loc571 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc392))
#loc572 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc393))
#loc573 = loc("sigmoid_460"(#loc393))
#loc574 = loc("multiply_461"(#loc393))
#loc575 = loc("torch.nn.modules.container.Sequential::cv1"(#loc396))
#loc576 = loc("add_547"(#loc396))
#loc577 = loc("torch.nn.modules.container.Sequential::cv1"(#loc397))
#loc578 = loc("add_631"(#loc397))
#loc579 = loc("torch.nn.modules.container.Sequential::cv1"(#loc398))
#loc580 = loc("add_715"(#loc398))
#loc581 = loc("torch.nn.modules.container.Sequential::cv1"(#loc399))
#loc582 = loc("add_799"(#loc399))
#loc583 = loc("torch.nn.modules.container.Sequential::cv1"(#loc400))
#loc584 = loc("add_883"(#loc400))
#loc585 = loc("torch.nn.modules.container.Sequential::cv1"(#loc401))
#loc586 = loc("add_967"(#loc401))
#loc587 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc403))
#loc588 = loc("sigmoid_983"(#loc403))
#loc589 = loc("multiply_984"(#loc403))
#loc590 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc404))
#loc591 = loc("sigmoid_999"(#loc404))
#loc592 = loc("multiply_1000"(#loc404))
#loc593 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc405))
#loc594 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc406))
#loc595 = loc("sigmoid_1030"(#loc406))
#loc596 = loc("multiply_1031"(#loc406))
#loc597 = loc("torch.nn.modules.container.Sequential::cv1"(#loc409))
#loc598 = loc("add_1117"(#loc409))
#loc599 = loc("torch.nn.modules.container.Sequential::cv1"(#loc410))
#loc600 = loc("add_1201"(#loc410))
#loc601 = loc("torch.nn.modules.container.Sequential::cv1"(#loc411))
#loc602 = loc("add_1285"(#loc411))
#loc603 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc413))
#loc604 = loc("sigmoid_1301"(#loc413))
#loc605 = loc("multiply_1302"(#loc413))
#loc606 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc414))
#loc607 = loc("sigmoid_1317"(#loc414))
#loc608 = loc("multiply_1318"(#loc414))
#loc609 = loc("max_pool2d_1319.dc.transpose.0"(#loc415))
#loc610 = loc("max_pool2d_1319.dc.transpose.1"(#loc415))
#loc611 = loc("max_pool2d_1319.dc.max_pool2d.2"(#loc415))
#loc612 = loc("max_pool2d_1319.dc.transpose.3"(#loc415))
#loc613 = loc("max_pool2d_1319.dc.transpose.4"(#loc415))
#loc614 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc427))
#loc615 = loc("sigmoid_1337"(#loc427))
#loc616 = loc("multiply_1338"(#loc427))
#loc617 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc428))
#loc618 = loc("sigmoid_1353"(#loc428))
#loc619 = loc("multiply_1354"(#loc428))
#loc620 = loc("ultralytics.nn.modules.conv.Conv::qkv"(#loc431))
#loc621 = loc("reshape_1371"(#loc431))
#loc622 = loc("index_1372"(#loc431))
#loc623 = loc("reshape_1373.dc.squeeze.0"(#loc431))
#loc624 = loc("index_1374"(#loc431))
#loc625 = loc("transpose_1375"(#loc431))
#loc626 = loc("reshape_1376.dc.squeeze.0"(#loc431))
#loc627 = loc("index_1377"(#loc431))
#loc628 = loc("transpose_1378"(#loc431))
#loc629 = loc("reshape_1379.dc.squeeze.0"(#loc431))
#loc630 = loc("matmul_1381"(#loc431))
#loc631 = loc("reshape_1382.dc.unsqueeze.0"(#loc431))
#loc632 = loc("multiply_1383"(#loc431))
#loc633 = loc("softmax_1384"(#loc431))
#loc634 = loc("reshape_1385.dc.squeeze.0"(#loc431))
#loc635 = loc("matmul_1387"(#loc431))
#loc636 = loc("reshape_1388"(#loc431))
#loc637 = loc("reshape_1389"(#loc431))
#loc638 = loc("ultralytics.nn.modules.conv.Conv::pe"(#loc431))
#loc639 = loc("add_1405"(#loc431))
#loc640 = loc("ultralytics.nn.modules.conv.Conv::proj"(#loc431))
#loc641 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc433))
#loc642 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc433))
#loc643 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc436))
#loc644 = loc("sigmoid_1467"(#loc436))
#loc645 = loc("multiply_1468"(#loc436))
#loc646 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc443))
#loc647 = loc("sigmoid_1485"(#loc443))
#loc648 = loc("multiply_1486"(#loc443))
#loc649 = loc("torch.nn.modules.container.Sequential::cv1"(#loc446))
#loc650 = loc("add_1572"(#loc446))
#loc651 = loc("torch.nn.modules.container.Sequential::cv1"(#loc447))
#loc652 = loc("add_1656"(#loc447))
#loc653 = loc("torch.nn.modules.container.Sequential::cv1"(#loc448))
#loc654 = loc("add_1740"(#loc448))
#loc655 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc450))
#loc656 = loc("sigmoid_1756"(#loc450))
#loc657 = loc("multiply_1757"(#loc450))
#loc658 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc457))
#loc659 = loc("sigmoid_1774"(#loc457))
#loc660 = loc("multiply_1775"(#loc457))
#loc661 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc460))
#loc662 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc460))
#loc663 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc461))
#loc664 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc461))
#loc665 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc462))
#loc666 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc462))
#loc667 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc464))
#loc668 = loc("sigmoid_1889"(#loc464))
#loc669 = loc("multiply_1890"(#loc464))
#loc670 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc465))
#loc671 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc465))
#loc672 = loc("torch.nn.modules.conv.Conv2d::2"(#loc465))
#loc673 = loc("torch.nn.modules.container.Sequential::0"(#loc465))
#loc674 = loc("torch.nn.modules.container.Sequential::1"(#loc465))
#loc675 = loc("conv2d_1999.dc.transpose.0"(#loc468))
#loc676 = loc("conv2d_1999.dc.transpose.1"(#loc468))
#loc677 = loc("conv2d_1999.dc.conv2d.2"(#loc468))
#loc678 = loc("conv2d_1999.dc.transpose.3"(#loc468))
#loc679 = loc("conv2d_1999.dc.transpose.4"(#loc468))
#loc680 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc472))
#loc681 = loc("sigmoid_2030"(#loc472))
#loc682 = loc("multiply_2031"(#loc472))
#loc683 = loc("torch.nn.modules.container.Sequential::cv1"(#loc475))
#loc684 = loc("add_2117"(#loc475))
#loc685 = loc("torch.nn.modules.container.Sequential::cv1"(#loc476))
#loc686 = loc("add_2201"(#loc476))
#loc687 = loc("torch.nn.modules.container.Sequential::cv1"(#loc477))
#loc688 = loc("add_2285"(#loc477))
#loc689 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc479))
#loc690 = loc("sigmoid_2301"(#loc479))
#loc691 = loc("multiply_2302"(#loc479))
#loc692 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc480))
#loc693 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc480))
#loc694 = loc("torch.nn.modules.conv.Conv2d::2"(#loc480))
#loc695 = loc("torch.nn.modules.container.Sequential::0"(#loc480))
#loc696 = loc("torch.nn.modules.container.Sequential::1"(#loc480))
#loc697 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc483))
#loc698 = loc("sigmoid_2425"(#loc483))
#loc699 = loc("multiply_2426"(#loc483))
#loc700 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc484))
#loc701 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc486))
#loc702 = loc("sigmoid_2457"(#loc486))
#loc703 = loc("multiply_2458"(#loc486))
#loc704 = loc("torch.nn.modules.container.Sequential::cv1"(#loc489))
#loc705 = loc("add_2544"(#loc489))
#loc706 = loc("torch.nn.modules.container.Sequential::cv1"(#loc490))
#loc707 = loc("add_2628"(#loc490))
#loc708 = loc("torch.nn.modules.container.Sequential::cv1"(#loc491))
#loc709 = loc("add_2712"(#loc491))
#loc710 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc493))
#loc711 = loc("sigmoid_2728"(#loc493))
#loc712 = loc("multiply_2729"(#loc493))
#loc713 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc494))
#loc714 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc494))
#loc715 = loc("torch.nn.modules.conv.Conv2d::2"(#loc494))
#loc716 = loc("torch.nn.modules.container.Sequential::0"(#loc494))
#loc717 = loc("torch.nn.modules.container.Sequential::1"(#loc494))
#loc718 = loc("reshape_2840"(#loc499))
#loc719 = loc("transpose_2841"(#loc499))
#loc720 = loc("softmax_2842"(#loc499))
#loc721 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc499))
#loc722 = loc("reshape_2844.dc.squeeze.0"(#loc499))
#loc723 = loc("conv2d_32.dc.transpose.0"(#loc524))
#loc724 = loc("conv2d_32.dc.transpose.1"(#loc524))
#loc725 = loc("conv2d_32.dc.conv2d.2"(#loc524))
#loc726 = loc("conv2d_32.dc.transpose.3"(#loc524))
#loc727 = loc("conv2d_32.dc.transpose.4"(#loc524))
#loc728 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc527))
#loc729 = loc("sigmoid_64"(#loc527))
#loc730 = loc("multiply_65"(#loc527))
#loc731 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc528))
#loc732 = loc("sigmoid_80"(#loc528))
#loc733 = loc("multiply_81"(#loc528))
#loc734 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc530))
#loc735 = loc("sigmoid_97"(#loc530))
#loc736 = loc("multiply_98"(#loc530))
#loc737 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc531))
#loc738 = loc("sigmoid_113"(#loc531))
#loc739 = loc("multiply_114"(#loc531))
#loc740 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc533))
#loc741 = loc("sigmoid_130"(#loc533))
#loc742 = loc("multiply_131"(#loc533))
#loc743 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc534))
#loc744 = loc("sigmoid_146"(#loc534))
#loc745 = loc("multiply_147"(#loc534))
#loc746 = loc("conv2d_150.dc.transpose.0"(#loc536))
#loc747 = loc("conv2d_150.dc.transpose.1"(#loc536))
#loc748 = loc("conv2d_150.dc.conv2d.2"(#loc536))
#loc749 = loc("conv2d_150.dc.transpose.3"(#loc536))
#loc750 = loc("conv2d_150.dc.transpose.4"(#loc536))
#loc751 = loc("conv2d_182.dc.transpose.0"(#loc544))
#loc752 = loc("conv2d_182.dc.transpose.1"(#loc544))
#loc753 = loc("conv2d_182.dc.conv2d.2"(#loc544))
#loc754 = loc("conv2d_182.dc.transpose.3"(#loc544))
#loc755 = loc("conv2d_182.dc.transpose.4"(#loc544))
#loc756 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc547))
#loc757 = loc("sigmoid_214"(#loc547))
#loc758 = loc("multiply_215"(#loc547))
#loc759 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc548))
#loc760 = loc("sigmoid_230"(#loc548))
#loc761 = loc("multiply_231"(#loc548))
#loc762 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc550))
#loc763 = loc("sigmoid_247"(#loc550))
#loc764 = loc("multiply_248"(#loc550))
#loc765 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc551))
#loc766 = loc("sigmoid_263"(#loc551))
#loc767 = loc("multiply_264"(#loc551))
#loc768 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc553))
#loc769 = loc("sigmoid_280"(#loc553))
#loc770 = loc("multiply_281"(#loc553))
#loc771 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc554))
#loc772 = loc("sigmoid_296"(#loc554))
#loc773 = loc("multiply_297"(#loc554))
#loc774 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc556))
#loc775 = loc("sigmoid_313"(#loc556))
#loc776 = loc("multiply_314"(#loc556))
#loc777 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc557))
#loc778 = loc("sigmoid_329"(#loc557))
#loc779 = loc("multiply_330"(#loc557))
#loc780 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc559))
#loc781 = loc("sigmoid_346"(#loc559))
#loc782 = loc("multiply_347"(#loc559))
#loc783 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc560))
#loc784 = loc("sigmoid_362"(#loc560))
#loc785 = loc("multiply_363"(#loc560))
#loc786 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc562))
#loc787 = loc("sigmoid_379"(#loc562))
#loc788 = loc("multiply_380"(#loc562))
#loc789 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc563))
#loc790 = loc("sigmoid_395"(#loc563))
#loc791 = loc("multiply_396"(#loc563))
#loc792 = loc("conv2d_399.dc.transpose.0"(#loc565))
#loc793 = loc("conv2d_399.dc.transpose.1"(#loc565))
#loc794 = loc("conv2d_399.dc.conv2d.2"(#loc565))
#loc795 = loc("conv2d_399.dc.transpose.3"(#loc565))
#loc796 = loc("conv2d_399.dc.transpose.4"(#loc565))
#loc797 = loc("conv2d_415.dc.transpose.0"(#loc568))
#loc798 = loc("conv2d_415.dc.transpose.1"(#loc568))
#loc799 = loc("conv2d_415.dc.conv2d.2"(#loc568))
#loc800 = loc("conv2d_415.dc.transpose.3"(#loc568))
#loc801 = loc("conv2d_415.dc.transpose.4"(#loc568))
#loc802 = loc("conv2d_432.dc.transpose.0"(#loc571))
#loc803 = loc("conv2d_432.dc.transpose.1"(#loc571))
#loc804 = loc("conv2d_432.dc.conv2d.2"(#loc571))
#loc805 = loc("conv2d_432.dc.transpose.3"(#loc571))
#loc806 = loc("conv2d_432.dc.transpose.4"(#loc571))
#loc807 = loc("conv2d_446.dc.transpose.0"(#loc572))
#loc808 = loc("conv2d_446.dc.transpose.1"(#loc572))
#loc809 = loc("conv2d_446.dc.conv2d.2"(#loc572))
#loc810 = loc("conv2d_446.dc.transpose.3"(#loc572))
#loc811 = loc("conv2d_446.dc.transpose.4"(#loc572))
#loc812 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc575))
#loc813 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc575))
#loc814 = loc("ultralytics.nn.modules.conv.Conv::2"(#loc575))
#loc815 = loc("ultralytics.nn.modules.conv.Conv::3"(#loc575))
#loc816 = loc("ultralytics.nn.modules.conv.Conv::4"(#loc575))
#loc817 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc577))
#loc818 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc577))
#loc819 = loc("ultralytics.nn.modules.conv.Conv::2"(#loc577))
#loc820 = loc("ultralytics.nn.modules.conv.Conv::3"(#loc577))
#loc821 = loc("ultralytics.nn.modules.conv.Conv::4"(#loc577))
#loc822 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc579))
#loc823 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc579))
#loc824 = loc("ultralytics.nn.modules.conv.Conv::2"(#loc579))
#loc825 = loc("ultralytics.nn.modules.conv.Conv::3"(#loc579))
#loc826 = loc("ultralytics.nn.modules.conv.Conv::4"(#loc579))
#loc827 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc581))
#loc828 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc581))
#loc829 = loc("ultralytics.nn.modules.conv.Conv::2"(#loc581))
#loc830 = loc("ultralytics.nn.modules.conv.Conv::3"(#loc581))
#loc831 = loc("ultralytics.nn.modules.conv.Conv::4"(#loc581))
#loc832 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc583))
#loc833 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc583))
#loc834 = loc("ultralytics.nn.modules.conv.Conv::2"(#loc583))
#loc835 = loc("ultralytics.nn.modules.conv.Conv::3"(#loc583))
#loc836 = loc("ultralytics.nn.modules.conv.Conv::4"(#loc583))
#loc837 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc585))
#loc838 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc585))
#loc839 = loc("ultralytics.nn.modules.conv.Conv::2"(#loc585))
#loc840 = loc("ultralytics.nn.modules.conv.Conv::3"(#loc585))
#loc841 = loc("ultralytics.nn.modules.conv.Conv::4"(#loc585))
#loc842 = loc("conv2d_969.dc.transpose.0"(#loc587))
#loc843 = loc("conv2d_969.dc.transpose.1"(#loc587))
#loc844 = loc("conv2d_969.dc.conv2d.2"(#loc587))
#loc845 = loc("conv2d_969.dc.transpose.3"(#loc587))
#loc846 = loc("conv2d_969.dc.transpose.4"(#loc587))
#loc847 = loc("conv2d_985.dc.transpose.0"(#loc590))
#loc848 = loc("conv2d_985.dc.transpose.1"(#loc590))
#loc849 = loc("conv2d_985.dc.conv2d.2"(#loc590))
#loc850 = loc("conv2d_985.dc.transpose.3"(#loc590))
#loc851 = loc("conv2d_985.dc.transpose.4"(#loc590))
#loc852 = loc("conv2d_1002.dc.transpose.0"(#loc593))
#loc853 = loc("conv2d_1002.dc.transpose.1"(#loc593))
#loc854 = loc("conv2d_1002.dc.conv2d.2"(#loc593))
#loc855 = loc("conv2d_1002.dc.transpose.3"(#loc593))
#loc856 = loc("conv2d_1002.dc.transpose.4"(#loc593))
#loc857 = loc("conv2d_1016.dc.transpose.0"(#loc594))
#loc858 = loc("conv2d_1016.dc.transpose.1"(#loc594))
#loc859 = loc("conv2d_1016.dc.conv2d.2"(#loc594))
#loc860 = loc("conv2d_1016.dc.transpose.3"(#loc594))
#loc861 = loc("conv2d_1016.dc.transpose.4"(#loc594))
#loc862 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc597))
#loc863 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc597))
#loc864 = loc("ultralytics.nn.modules.conv.Conv::2"(#loc597))
#loc865 = loc("ultralytics.nn.modules.conv.Conv::3"(#loc597))
#loc866 = loc("ultralytics.nn.modules.conv.Conv::4"(#loc597))
#loc867 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc599))
#loc868 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc599))
#loc869 = loc("ultralytics.nn.modules.conv.Conv::2"(#loc599))
#loc870 = loc("ultralytics.nn.modules.conv.Conv::3"(#loc599))
#loc871 = loc("ultralytics.nn.modules.conv.Conv::4"(#loc599))
#loc872 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc601))
#loc873 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc601))
#loc874 = loc("ultralytics.nn.modules.conv.Conv::2"(#loc601))
#loc875 = loc("ultralytics.nn.modules.conv.Conv::3"(#loc601))
#loc876 = loc("ultralytics.nn.modules.conv.Conv::4"(#loc601))
#loc877 = loc("conv2d_1287.dc.transpose.0"(#loc603))
#loc878 = loc("conv2d_1287.dc.transpose.1"(#loc603))
#loc879 = loc("conv2d_1287.dc.conv2d.2"(#loc603))
#loc880 = loc("conv2d_1287.dc.transpose.3"(#loc603))
#loc881 = loc("conv2d_1287.dc.transpose.4"(#loc603))
#loc882 = loc("conv2d_1303.dc.transpose.0"(#loc606))
#loc883 = loc("conv2d_1303.dc.transpose.1"(#loc606))
#loc884 = loc("conv2d_1303.dc.conv2d.2"(#loc606))
#loc885 = loc("conv2d_1303.dc.transpose.3"(#loc606))
#loc886 = loc("conv2d_1303.dc.transpose.4"(#loc606))
#loc887 = loc("conv2d_1323.dc.transpose.0"(#loc614))
#loc888 = loc("conv2d_1323.dc.transpose.1"(#loc614))
#loc889 = loc("conv2d_1323.dc.conv2d.2"(#loc614))
#loc890 = loc("conv2d_1323.dc.transpose.3"(#loc614))
#loc891 = loc("conv2d_1323.dc.transpose.4"(#loc614))
#loc892 = loc("conv2d_1339.dc.transpose.0"(#loc617))
#loc893 = loc("conv2d_1339.dc.transpose.1"(#loc617))
#loc894 = loc("conv2d_1339.dc.conv2d.2"(#loc617))
#loc895 = loc("conv2d_1339.dc.transpose.3"(#loc617))
#loc896 = loc("conv2d_1339.dc.transpose.4"(#loc617))
#loc897 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc620))
#loc898 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc638))
#loc899 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc640))
#loc900 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc641))
#loc901 = loc("sigmoid_1435"(#loc641))
#loc902 = loc("multiply_1436"(#loc641))
#loc903 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc642))
#loc904 = loc("conv2d_1453.dc.transpose.0"(#loc643))
#loc905 = loc("conv2d_1453.dc.transpose.1"(#loc643))
#loc906 = loc("conv2d_1453.dc.conv2d.2"(#loc643))
#loc907 = loc("conv2d_1453.dc.transpose.3"(#loc643))
#loc908 = loc("conv2d_1453.dc.transpose.4"(#loc643))
#loc909 = loc("conv2d_1471.dc.transpose.0"(#loc646))
#loc910 = loc("conv2d_1471.dc.transpose.1"(#loc646))
#loc911 = loc("conv2d_1471.dc.conv2d.2"(#loc646))
#loc912 = loc("conv2d_1471.dc.transpose.3"(#loc646))
#loc913 = loc("conv2d_1471.dc.transpose.4"(#loc646))
#loc914 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc649))
#loc915 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc649))
#loc916 = loc("ultralytics.nn.modules.conv.Conv::2"(#loc649))
#loc917 = loc("ultralytics.nn.modules.conv.Conv::3"(#loc649))
#loc918 = loc("ultralytics.nn.modules.conv.Conv::4"(#loc649))
#loc919 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc651))
#loc920 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc651))
#loc921 = loc("ultralytics.nn.modules.conv.Conv::2"(#loc651))
#loc922 = loc("ultralytics.nn.modules.conv.Conv::3"(#loc651))
#loc923 = loc("ultralytics.nn.modules.conv.Conv::4"(#loc651))
#loc924 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc653))
#loc925 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc653))
#loc926 = loc("ultralytics.nn.modules.conv.Conv::2"(#loc653))
#loc927 = loc("ultralytics.nn.modules.conv.Conv::3"(#loc653))
#loc928 = loc("ultralytics.nn.modules.conv.Conv::4"(#loc653))
#loc929 = loc("conv2d_1742.dc.transpose.0"(#loc655))
#loc930 = loc("conv2d_1742.dc.transpose.1"(#loc655))
#loc931 = loc("conv2d_1742.dc.conv2d.2"(#loc655))
#loc932 = loc("conv2d_1742.dc.transpose.3"(#loc655))
#loc933 = loc("conv2d_1742.dc.transpose.4"(#loc655))
#loc934 = loc("conv2d_1760.dc.transpose.0"(#loc658))
#loc935 = loc("conv2d_1760.dc.transpose.1"(#loc658))
#loc936 = loc("conv2d_1760.dc.conv2d.2"(#loc658))
#loc937 = loc("conv2d_1760.dc.transpose.3"(#loc658))
#loc938 = loc("conv2d_1760.dc.transpose.4"(#loc658))
#loc939 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc661))
#loc940 = loc("sigmoid_1792"(#loc661))
#loc941 = loc("multiply_1793"(#loc661))
#loc942 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc662))
#loc943 = loc("sigmoid_1808"(#loc662))
#loc944 = loc("multiply_1809"(#loc662))
#loc945 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc663))
#loc946 = loc("sigmoid_1824"(#loc663))
#loc947 = loc("multiply_1825"(#loc663))
#loc948 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc664))
#loc949 = loc("sigmoid_1840"(#loc664))
#loc950 = loc("multiply_1841"(#loc664))
#loc951 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc665))
#loc952 = loc("sigmoid_1856"(#loc665))
#loc953 = loc("multiply_1857"(#loc665))
#loc954 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc666))
#loc955 = loc("sigmoid_1872"(#loc666))
#loc956 = loc("multiply_1873"(#loc666))
#loc957 = loc("conv2d_1875.dc.transpose.0"(#loc667))
#loc958 = loc("conv2d_1875.dc.transpose.1"(#loc667))
#loc959 = loc("conv2d_1875.dc.conv2d.2"(#loc667))
#loc960 = loc("conv2d_1875.dc.transpose.3"(#loc667))
#loc961 = loc("conv2d_1875.dc.transpose.4"(#loc667))
#loc962 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc670))
#loc963 = loc("sigmoid_1905"(#loc670))
#loc964 = loc("multiply_1906"(#loc670))
#loc965 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc671))
#loc966 = loc("sigmoid_1921"(#loc671))
#loc967 = loc("multiply_1922"(#loc671))
#loc968 = loc("conv2d_1923.dc.transpose.0"(#loc672))
#loc969 = loc("conv2d_1923.dc.transpose.1"(#loc672))
#loc970 = loc("conv2d_1923.dc.conv2d.4"(#loc672))
#loc971 = loc("conv2d_1923.dc.transpose.5"(#loc672))
#loc972 = loc("conv2d_1923.dc.transpose.6"(#loc672))
#loc973 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc673))
#loc974 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc673))
#loc975 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc674))
#loc976 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc674))
#loc977 = loc("conv2d_1993.dc.transpose.0"(#loc672))
#loc978 = loc("conv2d_1993.dc.transpose.1"(#loc672))
#loc979 = loc("conv2d_1993.dc.conv2d.4"(#loc672))
#loc980 = loc("conv2d_1993.dc.transpose.5"(#loc672))
#loc981 = loc("conv2d_1993.dc.transpose.6"(#loc672))
#loc982 = loc("conv2d_2016.dc.transpose.0"(#loc680))
#loc983 = loc("conv2d_2016.dc.transpose.1"(#loc680))
#loc984 = loc("conv2d_2016.dc.conv2d.2"(#loc680))
#loc985 = loc("conv2d_2016.dc.transpose.3"(#loc680))
#loc986 = loc("conv2d_2016.dc.transpose.4"(#loc680))
#loc987 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc683))
#loc988 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc683))
#loc989 = loc("ultralytics.nn.modules.conv.Conv::2"(#loc683))
#loc990 = loc("ultralytics.nn.modules.conv.Conv::3"(#loc683))
#loc991 = loc("ultralytics.nn.modules.conv.Conv::4"(#loc683))
#loc992 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc685))
#loc993 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc685))
#loc994 = loc("ultralytics.nn.modules.conv.Conv::2"(#loc685))
#loc995 = loc("ultralytics.nn.modules.conv.Conv::3"(#loc685))
#loc996 = loc("ultralytics.nn.modules.conv.Conv::4"(#loc685))
#loc997 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc687))
#loc998 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc687))
#loc999 = loc("ultralytics.nn.modules.conv.Conv::2"(#loc687))
#loc1000 = loc("ultralytics.nn.modules.conv.Conv::3"(#loc687))
#loc1001 = loc("ultralytics.nn.modules.conv.Conv::4"(#loc687))
#loc1002 = loc("conv2d_2287.dc.transpose.0"(#loc689))
#loc1003 = loc("conv2d_2287.dc.transpose.1"(#loc689))
#loc1004 = loc("conv2d_2287.dc.conv2d.2"(#loc689))
#loc1005 = loc("conv2d_2287.dc.transpose.3"(#loc689))
#loc1006 = loc("conv2d_2287.dc.transpose.4"(#loc689))
#loc1007 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc692))
#loc1008 = loc("sigmoid_2317"(#loc692))
#loc1009 = loc("multiply_2318"(#loc692))
#loc1010 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc693))
#loc1011 = loc("sigmoid_2333"(#loc693))
#loc1012 = loc("multiply_2334"(#loc693))
#loc1013 = loc("conv2d_2335.dc.transpose.0"(#loc694))
#loc1014 = loc("conv2d_2335.dc.transpose.1"(#loc694))
#loc1015 = loc("conv2d_2335.dc.conv2d.4"(#loc694))
#loc1016 = loc("conv2d_2335.dc.transpose.5"(#loc694))
#loc1017 = loc("conv2d_2335.dc.transpose.6"(#loc694))
#loc1018 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc695))
#loc1019 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc695))
#loc1020 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc696))
#loc1021 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc696))
#loc1022 = loc("conv2d_2405.dc.transpose.0"(#loc694))
#loc1023 = loc("conv2d_2405.dc.transpose.1"(#loc694))
#loc1024 = loc("conv2d_2405.dc.conv2d.4"(#loc694))
#loc1025 = loc("conv2d_2405.dc.transpose.5"(#loc694))
#loc1026 = loc("conv2d_2405.dc.transpose.6"(#loc694))
#loc1027 = loc("conv2d_2411.dc.transpose.0"(#loc697))
#loc1028 = loc("conv2d_2411.dc.transpose.1"(#loc697))
#loc1029 = loc("conv2d_2411.dc.conv2d.2"(#loc697))
#loc1030 = loc("conv2d_2411.dc.transpose.3"(#loc697))
#loc1031 = loc("conv2d_2411.dc.transpose.4"(#loc697))
#loc1032 = loc("conv2d_2428.dc.transpose.0"(#loc700))
#loc1033 = loc("conv2d_2428.dc.transpose.1"(#loc700))
#loc1034 = loc("conv2d_2428.dc.conv2d.2"(#loc700))
#loc1035 = loc("conv2d_2428.dc.transpose.3"(#loc700))
#loc1036 = loc("conv2d_2428.dc.transpose.4"(#loc700))
#loc1037 = loc("conv2d_2443.dc.transpose.0"(#loc701))
#loc1038 = loc("conv2d_2443.dc.transpose.1"(#loc701))
#loc1039 = loc("conv2d_2443.dc.conv2d.2"(#loc701))
#loc1040 = loc("conv2d_2443.dc.transpose.3"(#loc701))
#loc1041 = loc("conv2d_2443.dc.transpose.4"(#loc701))
#loc1042 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc704))
#loc1043 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc704))
#loc1044 = loc("ultralytics.nn.modules.conv.Conv::2"(#loc704))
#loc1045 = loc("ultralytics.nn.modules.conv.Conv::3"(#loc704))
#loc1046 = loc("ultralytics.nn.modules.conv.Conv::4"(#loc704))
#loc1047 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc706))
#loc1048 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc706))
#loc1049 = loc("ultralytics.nn.modules.conv.Conv::2"(#loc706))
#loc1050 = loc("ultralytics.nn.modules.conv.Conv::3"(#loc706))
#loc1051 = loc("ultralytics.nn.modules.conv.Conv::4"(#loc706))
#loc1052 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc708))
#loc1053 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc708))
#loc1054 = loc("ultralytics.nn.modules.conv.Conv::2"(#loc708))
#loc1055 = loc("ultralytics.nn.modules.conv.Conv::3"(#loc708))
#loc1056 = loc("ultralytics.nn.modules.conv.Conv::4"(#loc708))
#loc1057 = loc("conv2d_2714.dc.transpose.0"(#loc710))
#loc1058 = loc("conv2d_2714.dc.transpose.1"(#loc710))
#loc1059 = loc("conv2d_2714.dc.conv2d.2"(#loc710))
#loc1060 = loc("conv2d_2714.dc.transpose.3"(#loc710))
#loc1061 = loc("conv2d_2714.dc.transpose.4"(#loc710))
#loc1062 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc713))
#loc1063 = loc("sigmoid_2744"(#loc713))
#loc1064 = loc("multiply_2745"(#loc713))
#loc1065 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc714))
#loc1066 = loc("sigmoid_2760"(#loc714))
#loc1067 = loc("multiply_2761"(#loc714))
#loc1068 = loc("conv2d_2762.dc.transpose.0"(#loc715))
#loc1069 = loc("conv2d_2762.dc.transpose.1"(#loc715))
#loc1070 = loc("conv2d_2762.dc.conv2d.4"(#loc715))
#loc1071 = loc("conv2d_2762.dc.transpose.5"(#loc715))
#loc1072 = loc("conv2d_2762.dc.transpose.6"(#loc715))
#loc1073 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc716))
#loc1074 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc716))
#loc1075 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc717))
#loc1076 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc717))
#loc1077 = loc("conv2d_2832.dc.transpose.0"(#loc715))
#loc1078 = loc("conv2d_2832.dc.transpose.1"(#loc715))
#loc1079 = loc("conv2d_2832.dc.conv2d.4"(#loc715))
#loc1080 = loc("conv2d_2832.dc.transpose.5"(#loc715))
#loc1081 = loc("conv2d_2832.dc.transpose.6"(#loc715))
#loc1082 = loc("conv2d_2843.dc.transpose.0"(#loc721))
#loc1083 = loc("conv2d_2843.dc.transpose.1"(#loc721))
#loc1084 = loc("conv2d_2843.dc.conv2d.2"(#loc721))
#loc1085 = loc("conv2d_2843.dc.transpose.3"(#loc721))
#loc1086 = loc("conv2d_2843.dc.transpose.4"(#loc721))
#loc1087 = loc("conv2d_50.dc.transpose.0"(#loc728))
#loc1088 = loc("conv2d_50.dc.transpose.1"(#loc728))
#loc1089 = loc("conv2d_50.dc.conv2d.2"(#loc728))
#loc1090 = loc("conv2d_50.dc.transpose.3"(#loc728))
#loc1091 = loc("conv2d_50.dc.transpose.4"(#loc728))
#loc1092 = loc("conv2d_66.dc.transpose.0"(#loc731))
#loc1093 = loc("conv2d_66.dc.transpose.1"(#loc731))
#loc1094 = loc("conv2d_66.dc.conv2d.2"(#loc731))
#loc1095 = loc("conv2d_66.dc.transpose.3"(#loc731))
#loc1096 = loc("conv2d_66.dc.transpose.4"(#loc731))
#loc1097 = loc("conv2d_83.dc.transpose.0"(#loc734))
#loc1098 = loc("conv2d_83.dc.transpose.1"(#loc734))
#loc1099 = loc("conv2d_83.dc.conv2d.2"(#loc734))
#loc1100 = loc("conv2d_83.dc.transpose.3"(#loc734))
#loc1101 = loc("conv2d_83.dc.transpose.4"(#loc734))
#loc1102 = loc("conv2d_99.dc.transpose.0"(#loc737))
#loc1103 = loc("conv2d_99.dc.transpose.1"(#loc737))
#loc1104 = loc("conv2d_99.dc.conv2d.2"(#loc737))
#loc1105 = loc("conv2d_99.dc.transpose.3"(#loc737))
#loc1106 = loc("conv2d_99.dc.transpose.4"(#loc737))
#loc1107 = loc("conv2d_116.dc.transpose.0"(#loc740))
#loc1108 = loc("conv2d_116.dc.transpose.1"(#loc740))
#loc1109 = loc("conv2d_116.dc.conv2d.2"(#loc740))
#loc1110 = loc("conv2d_116.dc.transpose.3"(#loc740))
#loc1111 = loc("conv2d_116.dc.transpose.4"(#loc740))
#loc1112 = loc("conv2d_132.dc.transpose.0"(#loc743))
#loc1113 = loc("conv2d_132.dc.transpose.1"(#loc743))
#loc1114 = loc("conv2d_132.dc.conv2d.2"(#loc743))
#loc1115 = loc("conv2d_132.dc.transpose.3"(#loc743))
#loc1116 = loc("conv2d_132.dc.transpose.4"(#loc743))
#loc1117 = loc("conv2d_200.dc.transpose.0"(#loc756))
#loc1118 = loc("conv2d_200.dc.transpose.1"(#loc756))
#loc1119 = loc("conv2d_200.dc.conv2d.2"(#loc756))
#loc1120 = loc("conv2d_200.dc.transpose.3"(#loc756))
#loc1121 = loc("conv2d_200.dc.transpose.4"(#loc756))
#loc1122 = loc("conv2d_216.dc.transpose.0"(#loc759))
#loc1123 = loc("conv2d_216.dc.transpose.1"(#loc759))
#loc1124 = loc("conv2d_216.dc.conv2d.2"(#loc759))
#loc1125 = loc("conv2d_216.dc.transpose.3"(#loc759))
#loc1126 = loc("conv2d_216.dc.transpose.4"(#loc759))
#loc1127 = loc("conv2d_233.dc.transpose.0"(#loc762))
#loc1128 = loc("conv2d_233.dc.transpose.1"(#loc762))
#loc1129 = loc("conv2d_233.dc.conv2d.2"(#loc762))
#loc1130 = loc("conv2d_233.dc.transpose.3"(#loc762))
#loc1131 = loc("conv2d_233.dc.transpose.4"(#loc762))
#loc1132 = loc("conv2d_249.dc.transpose.0"(#loc765))
#loc1133 = loc("conv2d_249.dc.transpose.1"(#loc765))
#loc1134 = loc("conv2d_249.dc.conv2d.2"(#loc765))
#loc1135 = loc("conv2d_249.dc.transpose.3"(#loc765))
#loc1136 = loc("conv2d_249.dc.transpose.4"(#loc765))
#loc1137 = loc("conv2d_266.dc.transpose.0"(#loc768))
#loc1138 = loc("conv2d_266.dc.transpose.1"(#loc768))
#loc1139 = loc("conv2d_266.dc.conv2d.2"(#loc768))
#loc1140 = loc("conv2d_266.dc.transpose.3"(#loc768))
#loc1141 = loc("conv2d_266.dc.transpose.4"(#loc768))
#loc1142 = loc("conv2d_282.dc.transpose.0"(#loc771))
#loc1143 = loc("conv2d_282.dc.transpose.1"(#loc771))
#loc1144 = loc("conv2d_282.dc.conv2d.2"(#loc771))
#loc1145 = loc("conv2d_282.dc.transpose.3"(#loc771))
#loc1146 = loc("conv2d_282.dc.transpose.4"(#loc771))
#loc1147 = loc("conv2d_299.dc.transpose.0"(#loc774))
#loc1148 = loc("conv2d_299.dc.transpose.1"(#loc774))
#loc1149 = loc("conv2d_299.dc.conv2d.2"(#loc774))
#loc1150 = loc("conv2d_299.dc.transpose.3"(#loc774))
#loc1151 = loc("conv2d_299.dc.transpose.4"(#loc774))
#loc1152 = loc("conv2d_315.dc.transpose.0"(#loc777))
#loc1153 = loc("conv2d_315.dc.transpose.1"(#loc777))
#loc1154 = loc("conv2d_315.dc.conv2d.2"(#loc777))
#loc1155 = loc("conv2d_315.dc.transpose.3"(#loc777))
#loc1156 = loc("conv2d_315.dc.transpose.4"(#loc777))
#loc1157 = loc("conv2d_332.dc.transpose.0"(#loc780))
#loc1158 = loc("conv2d_332.dc.transpose.1"(#loc780))
#loc1159 = loc("conv2d_332.dc.conv2d.2"(#loc780))
#loc1160 = loc("conv2d_332.dc.transpose.3"(#loc780))
#loc1161 = loc("conv2d_332.dc.transpose.4"(#loc780))
#loc1162 = loc("conv2d_348.dc.transpose.0"(#loc783))
#loc1163 = loc("conv2d_348.dc.transpose.1"(#loc783))
#loc1164 = loc("conv2d_348.dc.conv2d.2"(#loc783))
#loc1165 = loc("conv2d_348.dc.transpose.3"(#loc783))
#loc1166 = loc("conv2d_348.dc.transpose.4"(#loc783))
#loc1167 = loc("conv2d_365.dc.transpose.0"(#loc786))
#loc1168 = loc("conv2d_365.dc.transpose.1"(#loc786))
#loc1169 = loc("conv2d_365.dc.conv2d.2"(#loc786))
#loc1170 = loc("conv2d_365.dc.transpose.3"(#loc786))
#loc1171 = loc("conv2d_365.dc.transpose.4"(#loc786))
#loc1172 = loc("conv2d_381.dc.transpose.0"(#loc789))
#loc1173 = loc("conv2d_381.dc.transpose.1"(#loc789))
#loc1174 = loc("conv2d_381.dc.conv2d.2"(#loc789))
#loc1175 = loc("conv2d_381.dc.transpose.3"(#loc789))
#loc1176 = loc("conv2d_381.dc.transpose.4"(#loc789))
#loc1177 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc812))
#loc1178 = loc("sigmoid_479"(#loc812))
#loc1179 = loc("multiply_480"(#loc812))
#loc1180 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc813))
#loc1181 = loc("sigmoid_495"(#loc813))
#loc1182 = loc("multiply_496"(#loc813))
#loc1183 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc814))
#loc1184 = loc("sigmoid_512"(#loc814))
#loc1185 = loc("multiply_513"(#loc814))
#loc1186 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc815))
#loc1187 = loc("sigmoid_528"(#loc815))
#loc1188 = loc("multiply_529"(#loc815))
#loc1189 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc816))
#loc1190 = loc("sigmoid_545"(#loc816))
#loc1191 = loc("multiply_546"(#loc816))
#loc1192 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc817))
#loc1193 = loc("sigmoid_563"(#loc817))
#loc1194 = loc("multiply_564"(#loc817))
#loc1195 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc818))
#loc1196 = loc("sigmoid_579"(#loc818))
#loc1197 = loc("multiply_580"(#loc818))
#loc1198 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc819))
#loc1199 = loc("sigmoid_596"(#loc819))
#loc1200 = loc("multiply_597"(#loc819))
#loc1201 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc820))
#loc1202 = loc("sigmoid_612"(#loc820))
#loc1203 = loc("multiply_613"(#loc820))
#loc1204 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc821))
#loc1205 = loc("sigmoid_629"(#loc821))
#loc1206 = loc("multiply_630"(#loc821))
#loc1207 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc822))
#loc1208 = loc("sigmoid_647"(#loc822))
#loc1209 = loc("multiply_648"(#loc822))
#loc1210 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc823))
#loc1211 = loc("sigmoid_663"(#loc823))
#loc1212 = loc("multiply_664"(#loc823))
#loc1213 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc824))
#loc1214 = loc("sigmoid_680"(#loc824))
#loc1215 = loc("multiply_681"(#loc824))
#loc1216 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc825))
#loc1217 = loc("sigmoid_696"(#loc825))
#loc1218 = loc("multiply_697"(#loc825))
#loc1219 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc826))
#loc1220 = loc("sigmoid_713"(#loc826))
#loc1221 = loc("multiply_714"(#loc826))
#loc1222 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc827))
#loc1223 = loc("sigmoid_731"(#loc827))
#loc1224 = loc("multiply_732"(#loc827))
#loc1225 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc828))
#loc1226 = loc("sigmoid_747"(#loc828))
#loc1227 = loc("multiply_748"(#loc828))
#loc1228 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc829))
#loc1229 = loc("sigmoid_764"(#loc829))
#loc1230 = loc("multiply_765"(#loc829))
#loc1231 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc830))
#loc1232 = loc("sigmoid_780"(#loc830))
#loc1233 = loc("multiply_781"(#loc830))
#loc1234 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc831))
#loc1235 = loc("sigmoid_797"(#loc831))
#loc1236 = loc("multiply_798"(#loc831))
#loc1237 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc832))
#loc1238 = loc("sigmoid_815"(#loc832))
#loc1239 = loc("multiply_816"(#loc832))
#loc1240 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc833))
#loc1241 = loc("sigmoid_831"(#loc833))
#loc1242 = loc("multiply_832"(#loc833))
#loc1243 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc834))
#loc1244 = loc("sigmoid_848"(#loc834))
#loc1245 = loc("multiply_849"(#loc834))
#loc1246 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc835))
#loc1247 = loc("sigmoid_864"(#loc835))
#loc1248 = loc("multiply_865"(#loc835))
#loc1249 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc836))
#loc1250 = loc("sigmoid_881"(#loc836))
#loc1251 = loc("multiply_882"(#loc836))
#loc1252 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc837))
#loc1253 = loc("sigmoid_899"(#loc837))
#loc1254 = loc("multiply_900"(#loc837))
#loc1255 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc838))
#loc1256 = loc("sigmoid_915"(#loc838))
#loc1257 = loc("multiply_916"(#loc838))
#loc1258 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc839))
#loc1259 = loc("sigmoid_932"(#loc839))
#loc1260 = loc("multiply_933"(#loc839))
#loc1261 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc840))
#loc1262 = loc("sigmoid_948"(#loc840))
#loc1263 = loc("multiply_949"(#loc840))
#loc1264 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc841))
#loc1265 = loc("sigmoid_965"(#loc841))
#loc1266 = loc("multiply_966"(#loc841))
#loc1267 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc862))
#loc1268 = loc("sigmoid_1049"(#loc862))
#loc1269 = loc("multiply_1050"(#loc862))
#loc1270 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc863))
#loc1271 = loc("sigmoid_1065"(#loc863))
#loc1272 = loc("multiply_1066"(#loc863))
#loc1273 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc864))
#loc1274 = loc("sigmoid_1082"(#loc864))
#loc1275 = loc("multiply_1083"(#loc864))
#loc1276 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc865))
#loc1277 = loc("sigmoid_1098"(#loc865))
#loc1278 = loc("multiply_1099"(#loc865))
#loc1279 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc866))
#loc1280 = loc("sigmoid_1115"(#loc866))
#loc1281 = loc("multiply_1116"(#loc866))
#loc1282 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc867))
#loc1283 = loc("sigmoid_1133"(#loc867))
#loc1284 = loc("multiply_1134"(#loc867))
#loc1285 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc868))
#loc1286 = loc("sigmoid_1149"(#loc868))
#loc1287 = loc("multiply_1150"(#loc868))
#loc1288 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc869))
#loc1289 = loc("sigmoid_1166"(#loc869))
#loc1290 = loc("multiply_1167"(#loc869))
#loc1291 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc870))
#loc1292 = loc("sigmoid_1182"(#loc870))
#loc1293 = loc("multiply_1183"(#loc870))
#loc1294 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc871))
#loc1295 = loc("sigmoid_1199"(#loc871))
#loc1296 = loc("multiply_1200"(#loc871))
#loc1297 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc872))
#loc1298 = loc("sigmoid_1217"(#loc872))
#loc1299 = loc("multiply_1218"(#loc872))
#loc1300 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc873))
#loc1301 = loc("sigmoid_1233"(#loc873))
#loc1302 = loc("multiply_1234"(#loc873))
#loc1303 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc874))
#loc1304 = loc("sigmoid_1250"(#loc874))
#loc1305 = loc("multiply_1251"(#loc874))
#loc1306 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc875))
#loc1307 = loc("sigmoid_1266"(#loc875))
#loc1308 = loc("multiply_1267"(#loc875))
#loc1309 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc876))
#loc1310 = loc("sigmoid_1283"(#loc876))
#loc1311 = loc("multiply_1284"(#loc876))
#loc1312 = loc("conv2d_1357.dc.transpose.0"(#loc897))
#loc1313 = loc("conv2d_1357.dc.transpose.1"(#loc897))
#loc1314 = loc("conv2d_1357.dc.conv2d.2"(#loc897))
#loc1315 = loc("conv2d_1357.dc.transpose.3"(#loc897))
#loc1316 = loc("conv2d_1357.dc.transpose.4"(#loc897))
#loc1317 = loc("conv2d_1391.dc.transpose.0"(#loc898))
#loc1318 = loc("conv2d_1391.dc.transpose.1"(#loc898))
#loc1319 = loc("conv2d_1391.dc.conv2d.2"(#loc898))
#loc1320 = loc("conv2d_1391.dc.transpose.3"(#loc898))
#loc1321 = loc("conv2d_1391.dc.transpose.4"(#loc898))
#loc1322 = loc("conv2d_1406.dc.transpose.0"(#loc899))
#loc1323 = loc("conv2d_1406.dc.transpose.1"(#loc899))
#loc1324 = loc("conv2d_1406.dc.conv2d.2"(#loc899))
#loc1325 = loc("conv2d_1406.dc.transpose.3"(#loc899))
#loc1326 = loc("conv2d_1406.dc.transpose.4"(#loc899))
#loc1327 = loc("conv2d_1421.dc.transpose.0"(#loc900))
#loc1328 = loc("conv2d_1421.dc.transpose.1"(#loc900))
#loc1329 = loc("conv2d_1421.dc.conv2d.2"(#loc900))
#loc1330 = loc("conv2d_1421.dc.transpose.3"(#loc900))
#loc1331 = loc("conv2d_1421.dc.transpose.4"(#loc900))
#loc1332 = loc("conv2d_1437.dc.transpose.0"(#loc903))
#loc1333 = loc("conv2d_1437.dc.transpose.1"(#loc903))
#loc1334 = loc("conv2d_1437.dc.conv2d.2"(#loc903))
#loc1335 = loc("conv2d_1437.dc.transpose.3"(#loc903))
#loc1336 = loc("conv2d_1437.dc.transpose.4"(#loc903))
#loc1337 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc914))
#loc1338 = loc("sigmoid_1504"(#loc914))
#loc1339 = loc("multiply_1505"(#loc914))
#loc1340 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc915))
#loc1341 = loc("sigmoid_1520"(#loc915))
#loc1342 = loc("multiply_1521"(#loc915))
#loc1343 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc916))
#loc1344 = loc("sigmoid_1537"(#loc916))
#loc1345 = loc("multiply_1538"(#loc916))
#loc1346 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc917))
#loc1347 = loc("sigmoid_1553"(#loc917))
#loc1348 = loc("multiply_1554"(#loc917))
#loc1349 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc918))
#loc1350 = loc("sigmoid_1570"(#loc918))
#loc1351 = loc("multiply_1571"(#loc918))
#loc1352 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc919))
#loc1353 = loc("sigmoid_1588"(#loc919))
#loc1354 = loc("multiply_1589"(#loc919))
#loc1355 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc920))
#loc1356 = loc("sigmoid_1604"(#loc920))
#loc1357 = loc("multiply_1605"(#loc920))
#loc1358 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc921))
#loc1359 = loc("sigmoid_1621"(#loc921))
#loc1360 = loc("multiply_1622"(#loc921))
#loc1361 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc922))
#loc1362 = loc("sigmoid_1637"(#loc922))
#loc1363 = loc("multiply_1638"(#loc922))
#loc1364 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc923))
#loc1365 = loc("sigmoid_1654"(#loc923))
#loc1366 = loc("multiply_1655"(#loc923))
#loc1367 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc924))
#loc1368 = loc("sigmoid_1672"(#loc924))
#loc1369 = loc("multiply_1673"(#loc924))
#loc1370 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc925))
#loc1371 = loc("sigmoid_1688"(#loc925))
#loc1372 = loc("multiply_1689"(#loc925))
#loc1373 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc926))
#loc1374 = loc("sigmoid_1705"(#loc926))
#loc1375 = loc("multiply_1706"(#loc926))
#loc1376 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc927))
#loc1377 = loc("sigmoid_1721"(#loc927))
#loc1378 = loc("multiply_1722"(#loc927))
#loc1379 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc928))
#loc1380 = loc("sigmoid_1738"(#loc928))
#loc1381 = loc("multiply_1739"(#loc928))
#loc1382 = loc("conv2d_1778.dc.transpose.0"(#loc939))
#loc1383 = loc("conv2d_1778.dc.transpose.1"(#loc939))
#loc1384 = loc("conv2d_1778.dc.conv2d.2"(#loc939))
#loc1385 = loc("conv2d_1778.dc.transpose.3"(#loc939))
#loc1386 = loc("conv2d_1778.dc.transpose.4"(#loc939))
#loc1387 = loc("conv2d_1794.dc.transpose.0"(#loc942))
#loc1388 = loc("conv2d_1794.dc.transpose.1"(#loc942))
#loc1389 = loc("conv2d_1794.dc.conv2d.2"(#loc942))
#loc1390 = loc("conv2d_1794.dc.transpose.3"(#loc942))
#loc1391 = loc("conv2d_1794.dc.transpose.4"(#loc942))
#loc1392 = loc("conv2d_1810.dc.transpose.0"(#loc945))
#loc1393 = loc("conv2d_1810.dc.transpose.1"(#loc945))
#loc1394 = loc("conv2d_1810.dc.conv2d.2"(#loc945))
#loc1395 = loc("conv2d_1810.dc.transpose.3"(#loc945))
#loc1396 = loc("conv2d_1810.dc.transpose.4"(#loc945))
#loc1397 = loc("conv2d_1826.dc.transpose.0"(#loc948))
#loc1398 = loc("conv2d_1826.dc.transpose.1"(#loc948))
#loc1399 = loc("conv2d_1826.dc.conv2d.2"(#loc948))
#loc1400 = loc("conv2d_1826.dc.transpose.3"(#loc948))
#loc1401 = loc("conv2d_1826.dc.transpose.4"(#loc948))
#loc1402 = loc("conv2d_1842.dc.transpose.0"(#loc951))
#loc1403 = loc("conv2d_1842.dc.transpose.1"(#loc951))
#loc1404 = loc("conv2d_1842.dc.conv2d.2"(#loc951))
#loc1405 = loc("conv2d_1842.dc.transpose.3"(#loc951))
#loc1406 = loc("conv2d_1842.dc.transpose.4"(#loc951))
#loc1407 = loc("conv2d_1858.dc.transpose.0"(#loc954))
#loc1408 = loc("conv2d_1858.dc.transpose.1"(#loc954))
#loc1409 = loc("conv2d_1858.dc.conv2d.2"(#loc954))
#loc1410 = loc("conv2d_1858.dc.transpose.3"(#loc954))
#loc1411 = loc("conv2d_1858.dc.transpose.4"(#loc954))
#loc1412 = loc("conv2d_1891.dc.transpose.0"(#loc962))
#loc1413 = loc("conv2d_1891.dc.transpose.1"(#loc962))
#loc1414 = loc("conv2d_1891.dc.conv2d.2"(#loc962))
#loc1415 = loc("conv2d_1891.dc.transpose.3"(#loc962))
#loc1416 = loc("conv2d_1891.dc.transpose.4"(#loc962))
#loc1417 = loc("conv2d_1907.dc.transpose.0"(#loc965))
#loc1418 = loc("conv2d_1907.dc.transpose.1"(#loc965))
#loc1419 = loc("conv2d_1907.dc.conv2d.2"(#loc965))
#loc1420 = loc("conv2d_1907.dc.transpose.3"(#loc965))
#loc1421 = loc("conv2d_1907.dc.transpose.4"(#loc965))
#loc1422 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc973))
#loc1423 = loc("sigmoid_1942"(#loc973))
#loc1424 = loc("multiply_1943"(#loc973))
#loc1425 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc974))
#loc1426 = loc("sigmoid_1958"(#loc974))
#loc1427 = loc("multiply_1959"(#loc974))
#loc1428 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc975))
#loc1429 = loc("sigmoid_1975"(#loc975))
#loc1430 = loc("multiply_1976"(#loc975))
#loc1431 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc976))
#loc1432 = loc("sigmoid_1991"(#loc976))
#loc1433 = loc("multiply_1992"(#loc976))
#loc1434 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc987))
#loc1435 = loc("sigmoid_2049"(#loc987))
#loc1436 = loc("multiply_2050"(#loc987))
#loc1437 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc988))
#loc1438 = loc("sigmoid_2065"(#loc988))
#loc1439 = loc("multiply_2066"(#loc988))
#loc1440 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc989))
#loc1441 = loc("sigmoid_2082"(#loc989))
#loc1442 = loc("multiply_2083"(#loc989))
#loc1443 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc990))
#loc1444 = loc("sigmoid_2098"(#loc990))
#loc1445 = loc("multiply_2099"(#loc990))
#loc1446 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc991))
#loc1447 = loc("sigmoid_2115"(#loc991))
#loc1448 = loc("multiply_2116"(#loc991))
#loc1449 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc992))
#loc1450 = loc("sigmoid_2133"(#loc992))
#loc1451 = loc("multiply_2134"(#loc992))
#loc1452 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc993))
#loc1453 = loc("sigmoid_2149"(#loc993))
#loc1454 = loc("multiply_2150"(#loc993))
#loc1455 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc994))
#loc1456 = loc("sigmoid_2166"(#loc994))
#loc1457 = loc("multiply_2167"(#loc994))
#loc1458 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc995))
#loc1459 = loc("sigmoid_2182"(#loc995))
#loc1460 = loc("multiply_2183"(#loc995))
#loc1461 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc996))
#loc1462 = loc("sigmoid_2199"(#loc996))
#loc1463 = loc("multiply_2200"(#loc996))
#loc1464 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc997))
#loc1465 = loc("sigmoid_2217"(#loc997))
#loc1466 = loc("multiply_2218"(#loc997))
#loc1467 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc998))
#loc1468 = loc("sigmoid_2233"(#loc998))
#loc1469 = loc("multiply_2234"(#loc998))
#loc1470 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc999))
#loc1471 = loc("sigmoid_2250"(#loc999))
#loc1472 = loc("multiply_2251"(#loc999))
#loc1473 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1000))
#loc1474 = loc("sigmoid_2266"(#loc1000))
#loc1475 = loc("multiply_2267"(#loc1000))
#loc1476 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1001))
#loc1477 = loc("sigmoid_2283"(#loc1001))
#loc1478 = loc("multiply_2284"(#loc1001))
#loc1479 = loc("conv2d_2303.dc.transpose.0"(#loc1007))
#loc1480 = loc("conv2d_2303.dc.transpose.1"(#loc1007))
#loc1481 = loc("conv2d_2303.dc.conv2d.2"(#loc1007))
#loc1482 = loc("conv2d_2303.dc.transpose.3"(#loc1007))
#loc1483 = loc("conv2d_2303.dc.transpose.4"(#loc1007))
#loc1484 = loc("conv2d_2319.dc.transpose.0"(#loc1010))
#loc1485 = loc("conv2d_2319.dc.transpose.1"(#loc1010))
#loc1486 = loc("conv2d_2319.dc.conv2d.2"(#loc1010))
#loc1487 = loc("conv2d_2319.dc.transpose.3"(#loc1010))
#loc1488 = loc("conv2d_2319.dc.transpose.4"(#loc1010))
#loc1489 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1018))
#loc1490 = loc("sigmoid_2354"(#loc1018))
#loc1491 = loc("multiply_2355"(#loc1018))
#loc1492 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1019))
#loc1493 = loc("sigmoid_2370"(#loc1019))
#loc1494 = loc("multiply_2371"(#loc1019))
#loc1495 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1020))
#loc1496 = loc("sigmoid_2387"(#loc1020))
#loc1497 = loc("multiply_2388"(#loc1020))
#loc1498 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1021))
#loc1499 = loc("sigmoid_2403"(#loc1021))
#loc1500 = loc("multiply_2404"(#loc1021))
#loc1501 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1042))
#loc1502 = loc("sigmoid_2476"(#loc1042))
#loc1503 = loc("multiply_2477"(#loc1042))
#loc1504 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1043))
#loc1505 = loc("sigmoid_2492"(#loc1043))
#loc1506 = loc("multiply_2493"(#loc1043))
#loc1507 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1044))
#loc1508 = loc("sigmoid_2509"(#loc1044))
#loc1509 = loc("multiply_2510"(#loc1044))
#loc1510 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1045))
#loc1511 = loc("sigmoid_2525"(#loc1045))
#loc1512 = loc("multiply_2526"(#loc1045))
#loc1513 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1046))
#loc1514 = loc("sigmoid_2542"(#loc1046))
#loc1515 = loc("multiply_2543"(#loc1046))
#loc1516 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1047))
#loc1517 = loc("sigmoid_2560"(#loc1047))
#loc1518 = loc("multiply_2561"(#loc1047))
#loc1519 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1048))
#loc1520 = loc("sigmoid_2576"(#loc1048))
#loc1521 = loc("multiply_2577"(#loc1048))
#loc1522 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1049))
#loc1523 = loc("sigmoid_2593"(#loc1049))
#loc1524 = loc("multiply_2594"(#loc1049))
#loc1525 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1050))
#loc1526 = loc("sigmoid_2609"(#loc1050))
#loc1527 = loc("multiply_2610"(#loc1050))
#loc1528 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1051))
#loc1529 = loc("sigmoid_2626"(#loc1051))
#loc1530 = loc("multiply_2627"(#loc1051))
#loc1531 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1052))
#loc1532 = loc("sigmoid_2644"(#loc1052))
#loc1533 = loc("multiply_2645"(#loc1052))
#loc1534 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1053))
#loc1535 = loc("sigmoid_2660"(#loc1053))
#loc1536 = loc("multiply_2661"(#loc1053))
#loc1537 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1054))
#loc1538 = loc("sigmoid_2677"(#loc1054))
#loc1539 = loc("multiply_2678"(#loc1054))
#loc1540 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1055))
#loc1541 = loc("sigmoid_2693"(#loc1055))
#loc1542 = loc("multiply_2694"(#loc1055))
#loc1543 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1056))
#loc1544 = loc("sigmoid_2710"(#loc1056))
#loc1545 = loc("multiply_2711"(#loc1056))
#loc1546 = loc("conv2d_2730.dc.transpose.0"(#loc1062))
#loc1547 = loc("conv2d_2730.dc.transpose.1"(#loc1062))
#loc1548 = loc("conv2d_2730.dc.conv2d.2"(#loc1062))
#loc1549 = loc("conv2d_2730.dc.transpose.3"(#loc1062))
#loc1550 = loc("conv2d_2730.dc.transpose.4"(#loc1062))
#loc1551 = loc("conv2d_2746.dc.transpose.0"(#loc1065))
#loc1552 = loc("conv2d_2746.dc.transpose.1"(#loc1065))
#loc1553 = loc("conv2d_2746.dc.conv2d.2"(#loc1065))
#loc1554 = loc("conv2d_2746.dc.transpose.3"(#loc1065))
#loc1555 = loc("conv2d_2746.dc.transpose.4"(#loc1065))
#loc1556 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1073))
#loc1557 = loc("sigmoid_2781"(#loc1073))
#loc1558 = loc("multiply_2782"(#loc1073))
#loc1559 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1074))
#loc1560 = loc("sigmoid_2797"(#loc1074))
#loc1561 = loc("multiply_2798"(#loc1074))
#loc1562 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1075))
#loc1563 = loc("sigmoid_2814"(#loc1075))
#loc1564 = loc("multiply_2815"(#loc1075))
#loc1565 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1076))
#loc1566 = loc("sigmoid_2830"(#loc1076))
#loc1567 = loc("multiply_2831"(#loc1076))
#loc1568 = loc("conv2d_465.dc.transpose.0"(#loc1177))
#loc1569 = loc("conv2d_465.dc.transpose.1"(#loc1177))
#loc1570 = loc("conv2d_465.dc.conv2d.2"(#loc1177))
#loc1571 = loc("conv2d_465.dc.transpose.3"(#loc1177))
#loc1572 = loc("conv2d_465.dc.transpose.4"(#loc1177))
#loc1573 = loc("conv2d_481.dc.transpose.0"(#loc1180))
#loc1574 = loc("conv2d_481.dc.transpose.1"(#loc1180))
#loc1575 = loc("conv2d_481.dc.conv2d.2"(#loc1180))
#loc1576 = loc("conv2d_481.dc.transpose.3"(#loc1180))
#loc1577 = loc("conv2d_481.dc.transpose.4"(#loc1180))
#loc1578 = loc("conv2d_498.dc.transpose.0"(#loc1183))
#loc1579 = loc("conv2d_498.dc.transpose.1"(#loc1183))
#loc1580 = loc("conv2d_498.dc.conv2d.2"(#loc1183))
#loc1581 = loc("conv2d_498.dc.transpose.3"(#loc1183))
#loc1582 = loc("conv2d_498.dc.transpose.4"(#loc1183))
#loc1583 = loc("conv2d_514.dc.transpose.0"(#loc1186))
#loc1584 = loc("conv2d_514.dc.transpose.1"(#loc1186))
#loc1585 = loc("conv2d_514.dc.conv2d.2"(#loc1186))
#loc1586 = loc("conv2d_514.dc.transpose.3"(#loc1186))
#loc1587 = loc("conv2d_514.dc.transpose.4"(#loc1186))
#loc1588 = loc("conv2d_531.dc.transpose.0"(#loc1189))
#loc1589 = loc("conv2d_531.dc.transpose.1"(#loc1189))
#loc1590 = loc("conv2d_531.dc.conv2d.2"(#loc1189))
#loc1591 = loc("conv2d_531.dc.transpose.3"(#loc1189))
#loc1592 = loc("conv2d_531.dc.transpose.4"(#loc1189))
#loc1593 = loc("conv2d_549.dc.transpose.0"(#loc1192))
#loc1594 = loc("conv2d_549.dc.transpose.1"(#loc1192))
#loc1595 = loc("conv2d_549.dc.conv2d.2"(#loc1192))
#loc1596 = loc("conv2d_549.dc.transpose.3"(#loc1192))
#loc1597 = loc("conv2d_549.dc.transpose.4"(#loc1192))
#loc1598 = loc("conv2d_565.dc.transpose.0"(#loc1195))
#loc1599 = loc("conv2d_565.dc.transpose.1"(#loc1195))
#loc1600 = loc("conv2d_565.dc.conv2d.2"(#loc1195))
#loc1601 = loc("conv2d_565.dc.transpose.3"(#loc1195))
#loc1602 = loc("conv2d_565.dc.transpose.4"(#loc1195))
#loc1603 = loc("conv2d_582.dc.transpose.0"(#loc1198))
#loc1604 = loc("conv2d_582.dc.transpose.1"(#loc1198))
#loc1605 = loc("conv2d_582.dc.conv2d.2"(#loc1198))
#loc1606 = loc("conv2d_582.dc.transpose.3"(#loc1198))
#loc1607 = loc("conv2d_582.dc.transpose.4"(#loc1198))
#loc1608 = loc("conv2d_598.dc.transpose.0"(#loc1201))
#loc1609 = loc("conv2d_598.dc.transpose.1"(#loc1201))
#loc1610 = loc("conv2d_598.dc.conv2d.2"(#loc1201))
#loc1611 = loc("conv2d_598.dc.transpose.3"(#loc1201))
#loc1612 = loc("conv2d_598.dc.transpose.4"(#loc1201))
#loc1613 = loc("conv2d_615.dc.transpose.0"(#loc1204))
#loc1614 = loc("conv2d_615.dc.transpose.1"(#loc1204))
#loc1615 = loc("conv2d_615.dc.conv2d.2"(#loc1204))
#loc1616 = loc("conv2d_615.dc.transpose.3"(#loc1204))
#loc1617 = loc("conv2d_615.dc.transpose.4"(#loc1204))
#loc1618 = loc("conv2d_633.dc.transpose.0"(#loc1207))
#loc1619 = loc("conv2d_633.dc.transpose.1"(#loc1207))
#loc1620 = loc("conv2d_633.dc.conv2d.2"(#loc1207))
#loc1621 = loc("conv2d_633.dc.transpose.3"(#loc1207))
#loc1622 = loc("conv2d_633.dc.transpose.4"(#loc1207))
#loc1623 = loc("conv2d_649.dc.transpose.0"(#loc1210))
#loc1624 = loc("conv2d_649.dc.transpose.1"(#loc1210))
#loc1625 = loc("conv2d_649.dc.conv2d.2"(#loc1210))
#loc1626 = loc("conv2d_649.dc.transpose.3"(#loc1210))
#loc1627 = loc("conv2d_649.dc.transpose.4"(#loc1210))
#loc1628 = loc("conv2d_666.dc.transpose.0"(#loc1213))
#loc1629 = loc("conv2d_666.dc.transpose.1"(#loc1213))
#loc1630 = loc("conv2d_666.dc.conv2d.2"(#loc1213))
#loc1631 = loc("conv2d_666.dc.transpose.3"(#loc1213))
#loc1632 = loc("conv2d_666.dc.transpose.4"(#loc1213))
#loc1633 = loc("conv2d_682.dc.transpose.0"(#loc1216))
#loc1634 = loc("conv2d_682.dc.transpose.1"(#loc1216))
#loc1635 = loc("conv2d_682.dc.conv2d.2"(#loc1216))
#loc1636 = loc("conv2d_682.dc.transpose.3"(#loc1216))
#loc1637 = loc("conv2d_682.dc.transpose.4"(#loc1216))
#loc1638 = loc("conv2d_699.dc.transpose.0"(#loc1219))
#loc1639 = loc("conv2d_699.dc.transpose.1"(#loc1219))
#loc1640 = loc("conv2d_699.dc.conv2d.2"(#loc1219))
#loc1641 = loc("conv2d_699.dc.transpose.3"(#loc1219))
#loc1642 = loc("conv2d_699.dc.transpose.4"(#loc1219))
#loc1643 = loc("conv2d_717.dc.transpose.0"(#loc1222))
#loc1644 = loc("conv2d_717.dc.transpose.1"(#loc1222))
#loc1645 = loc("conv2d_717.dc.conv2d.2"(#loc1222))
#loc1646 = loc("conv2d_717.dc.transpose.3"(#loc1222))
#loc1647 = loc("conv2d_717.dc.transpose.4"(#loc1222))
#loc1648 = loc("conv2d_733.dc.transpose.0"(#loc1225))
#loc1649 = loc("conv2d_733.dc.transpose.1"(#loc1225))
#loc1650 = loc("conv2d_733.dc.conv2d.2"(#loc1225))
#loc1651 = loc("conv2d_733.dc.transpose.3"(#loc1225))
#loc1652 = loc("conv2d_733.dc.transpose.4"(#loc1225))
#loc1653 = loc("conv2d_750.dc.transpose.0"(#loc1228))
#loc1654 = loc("conv2d_750.dc.transpose.1"(#loc1228))
#loc1655 = loc("conv2d_750.dc.conv2d.2"(#loc1228))
#loc1656 = loc("conv2d_750.dc.transpose.3"(#loc1228))
#loc1657 = loc("conv2d_750.dc.transpose.4"(#loc1228))
#loc1658 = loc("conv2d_766.dc.transpose.0"(#loc1231))
#loc1659 = loc("conv2d_766.dc.transpose.1"(#loc1231))
#loc1660 = loc("conv2d_766.dc.conv2d.2"(#loc1231))
#loc1661 = loc("conv2d_766.dc.transpose.3"(#loc1231))
#loc1662 = loc("conv2d_766.dc.transpose.4"(#loc1231))
#loc1663 = loc("conv2d_783.dc.transpose.0"(#loc1234))
#loc1664 = loc("conv2d_783.dc.transpose.1"(#loc1234))
#loc1665 = loc("conv2d_783.dc.conv2d.2"(#loc1234))
#loc1666 = loc("conv2d_783.dc.transpose.3"(#loc1234))
#loc1667 = loc("conv2d_783.dc.transpose.4"(#loc1234))
#loc1668 = loc("conv2d_801.dc.transpose.0"(#loc1237))
#loc1669 = loc("conv2d_801.dc.transpose.1"(#loc1237))
#loc1670 = loc("conv2d_801.dc.conv2d.2"(#loc1237))
#loc1671 = loc("conv2d_801.dc.transpose.3"(#loc1237))
#loc1672 = loc("conv2d_801.dc.transpose.4"(#loc1237))
#loc1673 = loc("conv2d_817.dc.transpose.0"(#loc1240))
#loc1674 = loc("conv2d_817.dc.transpose.1"(#loc1240))
#loc1675 = loc("conv2d_817.dc.conv2d.2"(#loc1240))
#loc1676 = loc("conv2d_817.dc.transpose.3"(#loc1240))
#loc1677 = loc("conv2d_817.dc.transpose.4"(#loc1240))
#loc1678 = loc("conv2d_834.dc.transpose.0"(#loc1243))
#loc1679 = loc("conv2d_834.dc.transpose.1"(#loc1243))
#loc1680 = loc("conv2d_834.dc.conv2d.2"(#loc1243))
#loc1681 = loc("conv2d_834.dc.transpose.3"(#loc1243))
#loc1682 = loc("conv2d_834.dc.transpose.4"(#loc1243))
#loc1683 = loc("conv2d_850.dc.transpose.0"(#loc1246))
#loc1684 = loc("conv2d_850.dc.transpose.1"(#loc1246))
#loc1685 = loc("conv2d_850.dc.conv2d.2"(#loc1246))
#loc1686 = loc("conv2d_850.dc.transpose.3"(#loc1246))
#loc1687 = loc("conv2d_850.dc.transpose.4"(#loc1246))
#loc1688 = loc("conv2d_867.dc.transpose.0"(#loc1249))
#loc1689 = loc("conv2d_867.dc.transpose.1"(#loc1249))
#loc1690 = loc("conv2d_867.dc.conv2d.2"(#loc1249))
#loc1691 = loc("conv2d_867.dc.transpose.3"(#loc1249))
#loc1692 = loc("conv2d_867.dc.transpose.4"(#loc1249))
#loc1693 = loc("conv2d_885.dc.transpose.0"(#loc1252))
#loc1694 = loc("conv2d_885.dc.transpose.1"(#loc1252))
#loc1695 = loc("conv2d_885.dc.conv2d.2"(#loc1252))
#loc1696 = loc("conv2d_885.dc.transpose.3"(#loc1252))
#loc1697 = loc("conv2d_885.dc.transpose.4"(#loc1252))
#loc1698 = loc("conv2d_901.dc.transpose.0"(#loc1255))
#loc1699 = loc("conv2d_901.dc.transpose.1"(#loc1255))
#loc1700 = loc("conv2d_901.dc.conv2d.2"(#loc1255))
#loc1701 = loc("conv2d_901.dc.transpose.3"(#loc1255))
#loc1702 = loc("conv2d_901.dc.transpose.4"(#loc1255))
#loc1703 = loc("conv2d_918.dc.transpose.0"(#loc1258))
#loc1704 = loc("conv2d_918.dc.transpose.1"(#loc1258))
#loc1705 = loc("conv2d_918.dc.conv2d.2"(#loc1258))
#loc1706 = loc("conv2d_918.dc.transpose.3"(#loc1258))
#loc1707 = loc("conv2d_918.dc.transpose.4"(#loc1258))
#loc1708 = loc("conv2d_934.dc.transpose.0"(#loc1261))
#loc1709 = loc("conv2d_934.dc.transpose.1"(#loc1261))
#loc1710 = loc("conv2d_934.dc.conv2d.2"(#loc1261))
#loc1711 = loc("conv2d_934.dc.transpose.3"(#loc1261))
#loc1712 = loc("conv2d_934.dc.transpose.4"(#loc1261))
#loc1713 = loc("conv2d_951.dc.transpose.0"(#loc1264))
#loc1714 = loc("conv2d_951.dc.transpose.1"(#loc1264))
#loc1715 = loc("conv2d_951.dc.conv2d.2"(#loc1264))
#loc1716 = loc("conv2d_951.dc.transpose.3"(#loc1264))
#loc1717 = loc("conv2d_951.dc.transpose.4"(#loc1264))
#loc1718 = loc("conv2d_1035.dc.transpose.0"(#loc1267))
#loc1719 = loc("conv2d_1035.dc.transpose.1"(#loc1267))
#loc1720 = loc("conv2d_1035.dc.conv2d.2"(#loc1267))
#loc1721 = loc("conv2d_1035.dc.transpose.3"(#loc1267))
#loc1722 = loc("conv2d_1035.dc.transpose.4"(#loc1267))
#loc1723 = loc("conv2d_1051.dc.transpose.0"(#loc1270))
#loc1724 = loc("conv2d_1051.dc.transpose.1"(#loc1270))
#loc1725 = loc("conv2d_1051.dc.conv2d.2"(#loc1270))
#loc1726 = loc("conv2d_1051.dc.transpose.3"(#loc1270))
#loc1727 = loc("conv2d_1051.dc.transpose.4"(#loc1270))
#loc1728 = loc("conv2d_1068.dc.transpose.0"(#loc1273))
#loc1729 = loc("conv2d_1068.dc.transpose.1"(#loc1273))
#loc1730 = loc("conv2d_1068.dc.conv2d.2"(#loc1273))
#loc1731 = loc("conv2d_1068.dc.transpose.3"(#loc1273))
#loc1732 = loc("conv2d_1068.dc.transpose.4"(#loc1273))
#loc1733 = loc("conv2d_1084.dc.transpose.0"(#loc1276))
#loc1734 = loc("conv2d_1084.dc.transpose.1"(#loc1276))
#loc1735 = loc("conv2d_1084.dc.conv2d.2"(#loc1276))
#loc1736 = loc("conv2d_1084.dc.transpose.3"(#loc1276))
#loc1737 = loc("conv2d_1084.dc.transpose.4"(#loc1276))
#loc1738 = loc("conv2d_1101.dc.transpose.0"(#loc1279))
#loc1739 = loc("conv2d_1101.dc.transpose.1"(#loc1279))
#loc1740 = loc("conv2d_1101.dc.conv2d.2"(#loc1279))
#loc1741 = loc("conv2d_1101.dc.transpose.3"(#loc1279))
#loc1742 = loc("conv2d_1101.dc.transpose.4"(#loc1279))
#loc1743 = loc("conv2d_1119.dc.transpose.0"(#loc1282))
#loc1744 = loc("conv2d_1119.dc.transpose.1"(#loc1282))
#loc1745 = loc("conv2d_1119.dc.conv2d.2"(#loc1282))
#loc1746 = loc("conv2d_1119.dc.transpose.3"(#loc1282))
#loc1747 = loc("conv2d_1119.dc.transpose.4"(#loc1282))
#loc1748 = loc("conv2d_1135.dc.transpose.0"(#loc1285))
#loc1749 = loc("conv2d_1135.dc.transpose.1"(#loc1285))
#loc1750 = loc("conv2d_1135.dc.conv2d.2"(#loc1285))
#loc1751 = loc("conv2d_1135.dc.transpose.3"(#loc1285))
#loc1752 = loc("conv2d_1135.dc.transpose.4"(#loc1285))
#loc1753 = loc("conv2d_1152.dc.transpose.0"(#loc1288))
#loc1754 = loc("conv2d_1152.dc.transpose.1"(#loc1288))
#loc1755 = loc("conv2d_1152.dc.conv2d.2"(#loc1288))
#loc1756 = loc("conv2d_1152.dc.transpose.3"(#loc1288))
#loc1757 = loc("conv2d_1152.dc.transpose.4"(#loc1288))
#loc1758 = loc("conv2d_1168.dc.transpose.0"(#loc1291))
#loc1759 = loc("conv2d_1168.dc.transpose.1"(#loc1291))
#loc1760 = loc("conv2d_1168.dc.conv2d.2"(#loc1291))
#loc1761 = loc("conv2d_1168.dc.transpose.3"(#loc1291))
#loc1762 = loc("conv2d_1168.dc.transpose.4"(#loc1291))
#loc1763 = loc("conv2d_1185.dc.transpose.0"(#loc1294))
#loc1764 = loc("conv2d_1185.dc.transpose.1"(#loc1294))
#loc1765 = loc("conv2d_1185.dc.conv2d.2"(#loc1294))
#loc1766 = loc("conv2d_1185.dc.transpose.3"(#loc1294))
#loc1767 = loc("conv2d_1185.dc.transpose.4"(#loc1294))
#loc1768 = loc("conv2d_1203.dc.transpose.0"(#loc1297))
#loc1769 = loc("conv2d_1203.dc.transpose.1"(#loc1297))
#loc1770 = loc("conv2d_1203.dc.conv2d.2"(#loc1297))
#loc1771 = loc("conv2d_1203.dc.transpose.3"(#loc1297))
#loc1772 = loc("conv2d_1203.dc.transpose.4"(#loc1297))
#loc1773 = loc("conv2d_1219.dc.transpose.0"(#loc1300))
#loc1774 = loc("conv2d_1219.dc.transpose.1"(#loc1300))
#loc1775 = loc("conv2d_1219.dc.conv2d.2"(#loc1300))
#loc1776 = loc("conv2d_1219.dc.transpose.3"(#loc1300))
#loc1777 = loc("conv2d_1219.dc.transpose.4"(#loc1300))
#loc1778 = loc("conv2d_1236.dc.transpose.0"(#loc1303))
#loc1779 = loc("conv2d_1236.dc.transpose.1"(#loc1303))
#loc1780 = loc("conv2d_1236.dc.conv2d.2"(#loc1303))
#loc1781 = loc("conv2d_1236.dc.transpose.3"(#loc1303))
#loc1782 = loc("conv2d_1236.dc.transpose.4"(#loc1303))
#loc1783 = loc("conv2d_1252.dc.transpose.0"(#loc1306))
#loc1784 = loc("conv2d_1252.dc.transpose.1"(#loc1306))
#loc1785 = loc("conv2d_1252.dc.conv2d.2"(#loc1306))
#loc1786 = loc("conv2d_1252.dc.transpose.3"(#loc1306))
#loc1787 = loc("conv2d_1252.dc.transpose.4"(#loc1306))
#loc1788 = loc("conv2d_1269.dc.transpose.0"(#loc1309))
#loc1789 = loc("conv2d_1269.dc.transpose.1"(#loc1309))
#loc1790 = loc("conv2d_1269.dc.conv2d.2"(#loc1309))
#loc1791 = loc("conv2d_1269.dc.transpose.3"(#loc1309))
#loc1792 = loc("conv2d_1269.dc.transpose.4"(#loc1309))
#loc1793 = loc("conv2d_1490.dc.transpose.0"(#loc1337))
#loc1794 = loc("conv2d_1490.dc.transpose.1"(#loc1337))
#loc1795 = loc("conv2d_1490.dc.conv2d.2"(#loc1337))
#loc1796 = loc("conv2d_1490.dc.transpose.3"(#loc1337))
#loc1797 = loc("conv2d_1490.dc.transpose.4"(#loc1337))
#loc1798 = loc("conv2d_1506.dc.transpose.0"(#loc1340))
#loc1799 = loc("conv2d_1506.dc.transpose.1"(#loc1340))
#loc1800 = loc("conv2d_1506.dc.conv2d.2"(#loc1340))
#loc1801 = loc("conv2d_1506.dc.transpose.3"(#loc1340))
#loc1802 = loc("conv2d_1506.dc.transpose.4"(#loc1340))
#loc1803 = loc("conv2d_1523.dc.transpose.0"(#loc1343))
#loc1804 = loc("conv2d_1523.dc.transpose.1"(#loc1343))
#loc1805 = loc("conv2d_1523.dc.conv2d.2"(#loc1343))
#loc1806 = loc("conv2d_1523.dc.transpose.3"(#loc1343))
#loc1807 = loc("conv2d_1523.dc.transpose.4"(#loc1343))
#loc1808 = loc("conv2d_1539.dc.transpose.0"(#loc1346))
#loc1809 = loc("conv2d_1539.dc.transpose.1"(#loc1346))
#loc1810 = loc("conv2d_1539.dc.conv2d.2"(#loc1346))
#loc1811 = loc("conv2d_1539.dc.transpose.3"(#loc1346))
#loc1812 = loc("conv2d_1539.dc.transpose.4"(#loc1346))
#loc1813 = loc("conv2d_1556.dc.transpose.0"(#loc1349))
#loc1814 = loc("conv2d_1556.dc.transpose.1"(#loc1349))
#loc1815 = loc("conv2d_1556.dc.conv2d.2"(#loc1349))
#loc1816 = loc("conv2d_1556.dc.transpose.3"(#loc1349))
#loc1817 = loc("conv2d_1556.dc.transpose.4"(#loc1349))
#loc1818 = loc("conv2d_1574.dc.transpose.0"(#loc1352))
#loc1819 = loc("conv2d_1574.dc.transpose.1"(#loc1352))
#loc1820 = loc("conv2d_1574.dc.conv2d.2"(#loc1352))
#loc1821 = loc("conv2d_1574.dc.transpose.3"(#loc1352))
#loc1822 = loc("conv2d_1574.dc.transpose.4"(#loc1352))
#loc1823 = loc("conv2d_1590.dc.transpose.0"(#loc1355))
#loc1824 = loc("conv2d_1590.dc.transpose.1"(#loc1355))
#loc1825 = loc("conv2d_1590.dc.conv2d.2"(#loc1355))
#loc1826 = loc("conv2d_1590.dc.transpose.3"(#loc1355))
#loc1827 = loc("conv2d_1590.dc.transpose.4"(#loc1355))
#loc1828 = loc("conv2d_1607.dc.transpose.0"(#loc1358))
#loc1829 = loc("conv2d_1607.dc.transpose.1"(#loc1358))
#loc1830 = loc("conv2d_1607.dc.conv2d.2"(#loc1358))
#loc1831 = loc("conv2d_1607.dc.transpose.3"(#loc1358))
#loc1832 = loc("conv2d_1607.dc.transpose.4"(#loc1358))
#loc1833 = loc("conv2d_1623.dc.transpose.0"(#loc1361))
#loc1834 = loc("conv2d_1623.dc.transpose.1"(#loc1361))
#loc1835 = loc("conv2d_1623.dc.conv2d.2"(#loc1361))
#loc1836 = loc("conv2d_1623.dc.transpose.3"(#loc1361))
#loc1837 = loc("conv2d_1623.dc.transpose.4"(#loc1361))
#loc1838 = loc("conv2d_1640.dc.transpose.0"(#loc1364))
#loc1839 = loc("conv2d_1640.dc.transpose.1"(#loc1364))
#loc1840 = loc("conv2d_1640.dc.conv2d.2"(#loc1364))
#loc1841 = loc("conv2d_1640.dc.transpose.3"(#loc1364))
#loc1842 = loc("conv2d_1640.dc.transpose.4"(#loc1364))
#loc1843 = loc("conv2d_1658.dc.transpose.0"(#loc1367))
#loc1844 = loc("conv2d_1658.dc.transpose.1"(#loc1367))
#loc1845 = loc("conv2d_1658.dc.conv2d.2"(#loc1367))
#loc1846 = loc("conv2d_1658.dc.transpose.3"(#loc1367))
#loc1847 = loc("conv2d_1658.dc.transpose.4"(#loc1367))
#loc1848 = loc("conv2d_1674.dc.transpose.0"(#loc1370))
#loc1849 = loc("conv2d_1674.dc.transpose.1"(#loc1370))
#loc1850 = loc("conv2d_1674.dc.conv2d.2"(#loc1370))
#loc1851 = loc("conv2d_1674.dc.transpose.3"(#loc1370))
#loc1852 = loc("conv2d_1674.dc.transpose.4"(#loc1370))
#loc1853 = loc("conv2d_1691.dc.transpose.0"(#loc1373))
#loc1854 = loc("conv2d_1691.dc.transpose.1"(#loc1373))
#loc1855 = loc("conv2d_1691.dc.conv2d.2"(#loc1373))
#loc1856 = loc("conv2d_1691.dc.transpose.3"(#loc1373))
#loc1857 = loc("conv2d_1691.dc.transpose.4"(#loc1373))
#loc1858 = loc("conv2d_1707.dc.transpose.0"(#loc1376))
#loc1859 = loc("conv2d_1707.dc.transpose.1"(#loc1376))
#loc1860 = loc("conv2d_1707.dc.conv2d.2"(#loc1376))
#loc1861 = loc("conv2d_1707.dc.transpose.3"(#loc1376))
#loc1862 = loc("conv2d_1707.dc.transpose.4"(#loc1376))
#loc1863 = loc("conv2d_1724.dc.transpose.0"(#loc1379))
#loc1864 = loc("conv2d_1724.dc.transpose.1"(#loc1379))
#loc1865 = loc("conv2d_1724.dc.conv2d.2"(#loc1379))
#loc1866 = loc("conv2d_1724.dc.transpose.3"(#loc1379))
#loc1867 = loc("conv2d_1724.dc.transpose.4"(#loc1379))
#loc1868 = loc("conv2d_1928.dc.transpose.0"(#loc1422))
#loc1869 = loc("conv2d_1928.dc.transpose.1"(#loc1422))
#loc1870 = loc("conv2d_1928.dc.conv2d.2"(#loc1422))
#loc1871 = loc("conv2d_1928.dc.transpose.3"(#loc1422))
#loc1872 = loc("conv2d_1928.dc.transpose.4"(#loc1422))
#loc1873 = loc("conv2d_1944.dc.transpose.0"(#loc1425))
#loc1874 = loc("conv2d_1944.dc.transpose.1"(#loc1425))
#loc1875 = loc("conv2d_1944.dc.conv2d.2"(#loc1425))
#loc1876 = loc("conv2d_1944.dc.transpose.3"(#loc1425))
#loc1877 = loc("conv2d_1944.dc.transpose.4"(#loc1425))
#loc1878 = loc("conv2d_1961.dc.transpose.0"(#loc1428))
#loc1879 = loc("conv2d_1961.dc.transpose.1"(#loc1428))
#loc1880 = loc("conv2d_1961.dc.conv2d.2"(#loc1428))
#loc1881 = loc("conv2d_1961.dc.transpose.3"(#loc1428))
#loc1882 = loc("conv2d_1961.dc.transpose.4"(#loc1428))
#loc1883 = loc("conv2d_1977.dc.transpose.0"(#loc1431))
#loc1884 = loc("conv2d_1977.dc.transpose.1"(#loc1431))
#loc1885 = loc("conv2d_1977.dc.conv2d.2"(#loc1431))
#loc1886 = loc("conv2d_1977.dc.transpose.3"(#loc1431))
#loc1887 = loc("conv2d_1977.dc.transpose.4"(#loc1431))
#loc1888 = loc("conv2d_2035.dc.transpose.0"(#loc1434))
#loc1889 = loc("conv2d_2035.dc.transpose.1"(#loc1434))
#loc1890 = loc("conv2d_2035.dc.conv2d.2"(#loc1434))
#loc1891 = loc("conv2d_2035.dc.transpose.3"(#loc1434))
#loc1892 = loc("conv2d_2035.dc.transpose.4"(#loc1434))
#loc1893 = loc("conv2d_2051.dc.transpose.0"(#loc1437))
#loc1894 = loc("conv2d_2051.dc.transpose.1"(#loc1437))
#loc1895 = loc("conv2d_2051.dc.conv2d.2"(#loc1437))
#loc1896 = loc("conv2d_2051.dc.transpose.3"(#loc1437))
#loc1897 = loc("conv2d_2051.dc.transpose.4"(#loc1437))
#loc1898 = loc("conv2d_2068.dc.transpose.0"(#loc1440))
#loc1899 = loc("conv2d_2068.dc.transpose.1"(#loc1440))
#loc1900 = loc("conv2d_2068.dc.conv2d.2"(#loc1440))
#loc1901 = loc("conv2d_2068.dc.transpose.3"(#loc1440))
#loc1902 = loc("conv2d_2068.dc.transpose.4"(#loc1440))
#loc1903 = loc("conv2d_2084.dc.transpose.0"(#loc1443))
#loc1904 = loc("conv2d_2084.dc.transpose.1"(#loc1443))
#loc1905 = loc("conv2d_2084.dc.conv2d.2"(#loc1443))
#loc1906 = loc("conv2d_2084.dc.transpose.3"(#loc1443))
#loc1907 = loc("conv2d_2084.dc.transpose.4"(#loc1443))
#loc1908 = loc("conv2d_2101.dc.transpose.0"(#loc1446))
#loc1909 = loc("conv2d_2101.dc.transpose.1"(#loc1446))
#loc1910 = loc("conv2d_2101.dc.conv2d.2"(#loc1446))
#loc1911 = loc("conv2d_2101.dc.transpose.3"(#loc1446))
#loc1912 = loc("conv2d_2101.dc.transpose.4"(#loc1446))
#loc1913 = loc("conv2d_2119.dc.transpose.0"(#loc1449))
#loc1914 = loc("conv2d_2119.dc.transpose.1"(#loc1449))
#loc1915 = loc("conv2d_2119.dc.conv2d.2"(#loc1449))
#loc1916 = loc("conv2d_2119.dc.transpose.3"(#loc1449))
#loc1917 = loc("conv2d_2119.dc.transpose.4"(#loc1449))
#loc1918 = loc("conv2d_2135.dc.transpose.0"(#loc1452))
#loc1919 = loc("conv2d_2135.dc.transpose.1"(#loc1452))
#loc1920 = loc("conv2d_2135.dc.conv2d.2"(#loc1452))
#loc1921 = loc("conv2d_2135.dc.transpose.3"(#loc1452))
#loc1922 = loc("conv2d_2135.dc.transpose.4"(#loc1452))
#loc1923 = loc("conv2d_2152.dc.transpose.0"(#loc1455))
#loc1924 = loc("conv2d_2152.dc.transpose.1"(#loc1455))
#loc1925 = loc("conv2d_2152.dc.conv2d.2"(#loc1455))
#loc1926 = loc("conv2d_2152.dc.transpose.3"(#loc1455))
#loc1927 = loc("conv2d_2152.dc.transpose.4"(#loc1455))
#loc1928 = loc("conv2d_2168.dc.transpose.0"(#loc1458))
#loc1929 = loc("conv2d_2168.dc.transpose.1"(#loc1458))
#loc1930 = loc("conv2d_2168.dc.conv2d.2"(#loc1458))
#loc1931 = loc("conv2d_2168.dc.transpose.3"(#loc1458))
#loc1932 = loc("conv2d_2168.dc.transpose.4"(#loc1458))
#loc1933 = loc("conv2d_2185.dc.transpose.0"(#loc1461))
#loc1934 = loc("conv2d_2185.dc.transpose.1"(#loc1461))
#loc1935 = loc("conv2d_2185.dc.conv2d.2"(#loc1461))
#loc1936 = loc("conv2d_2185.dc.transpose.3"(#loc1461))
#loc1937 = loc("conv2d_2185.dc.transpose.4"(#loc1461))
#loc1938 = loc("conv2d_2203.dc.transpose.0"(#loc1464))
#loc1939 = loc("conv2d_2203.dc.transpose.1"(#loc1464))
#loc1940 = loc("conv2d_2203.dc.conv2d.2"(#loc1464))
#loc1941 = loc("conv2d_2203.dc.transpose.3"(#loc1464))
#loc1942 = loc("conv2d_2203.dc.transpose.4"(#loc1464))
#loc1943 = loc("conv2d_2219.dc.transpose.0"(#loc1467))
#loc1944 = loc("conv2d_2219.dc.transpose.1"(#loc1467))
#loc1945 = loc("conv2d_2219.dc.conv2d.2"(#loc1467))
#loc1946 = loc("conv2d_2219.dc.transpose.3"(#loc1467))
#loc1947 = loc("conv2d_2219.dc.transpose.4"(#loc1467))
#loc1948 = loc("conv2d_2236.dc.transpose.0"(#loc1470))
#loc1949 = loc("conv2d_2236.dc.transpose.1"(#loc1470))
#loc1950 = loc("conv2d_2236.dc.conv2d.2"(#loc1470))
#loc1951 = loc("conv2d_2236.dc.transpose.3"(#loc1470))
#loc1952 = loc("conv2d_2236.dc.transpose.4"(#loc1470))
#loc1953 = loc("conv2d_2252.dc.transpose.0"(#loc1473))
#loc1954 = loc("conv2d_2252.dc.transpose.1"(#loc1473))
#loc1955 = loc("conv2d_2252.dc.conv2d.2"(#loc1473))
#loc1956 = loc("conv2d_2252.dc.transpose.3"(#loc1473))
#loc1957 = loc("conv2d_2252.dc.transpose.4"(#loc1473))
#loc1958 = loc("conv2d_2269.dc.transpose.0"(#loc1476))
#loc1959 = loc("conv2d_2269.dc.transpose.1"(#loc1476))
#loc1960 = loc("conv2d_2269.dc.conv2d.2"(#loc1476))
#loc1961 = loc("conv2d_2269.dc.transpose.3"(#loc1476))
#loc1962 = loc("conv2d_2269.dc.transpose.4"(#loc1476))
#loc1963 = loc("conv2d_2340.dc.transpose.0"(#loc1489))
#loc1964 = loc("conv2d_2340.dc.transpose.1"(#loc1489))
#loc1965 = loc("conv2d_2340.dc.conv2d.2"(#loc1489))
#loc1966 = loc("conv2d_2340.dc.transpose.3"(#loc1489))
#loc1967 = loc("conv2d_2340.dc.transpose.4"(#loc1489))
#loc1968 = loc("conv2d_2356.dc.transpose.0"(#loc1492))
#loc1969 = loc("conv2d_2356.dc.transpose.1"(#loc1492))
#loc1970 = loc("conv2d_2356.dc.conv2d.2"(#loc1492))
#loc1971 = loc("conv2d_2356.dc.transpose.3"(#loc1492))
#loc1972 = loc("conv2d_2356.dc.transpose.4"(#loc1492))
#loc1973 = loc("conv2d_2373.dc.transpose.0"(#loc1495))
#loc1974 = loc("conv2d_2373.dc.transpose.1"(#loc1495))
#loc1975 = loc("conv2d_2373.dc.conv2d.2"(#loc1495))
#loc1976 = loc("conv2d_2373.dc.transpose.3"(#loc1495))
#loc1977 = loc("conv2d_2373.dc.transpose.4"(#loc1495))
#loc1978 = loc("conv2d_2389.dc.transpose.0"(#loc1498))
#loc1979 = loc("conv2d_2389.dc.transpose.1"(#loc1498))
#loc1980 = loc("conv2d_2389.dc.conv2d.2"(#loc1498))
#loc1981 = loc("conv2d_2389.dc.transpose.3"(#loc1498))
#loc1982 = loc("conv2d_2389.dc.transpose.4"(#loc1498))
#loc1983 = loc("conv2d_2462.dc.transpose.0"(#loc1501))
#loc1984 = loc("conv2d_2462.dc.transpose.1"(#loc1501))
#loc1985 = loc("conv2d_2462.dc.conv2d.2"(#loc1501))
#loc1986 = loc("conv2d_2462.dc.transpose.3"(#loc1501))
#loc1987 = loc("conv2d_2462.dc.transpose.4"(#loc1501))
#loc1988 = loc("conv2d_2478.dc.transpose.0"(#loc1504))
#loc1989 = loc("conv2d_2478.dc.transpose.1"(#loc1504))
#loc1990 = loc("conv2d_2478.dc.conv2d.2"(#loc1504))
#loc1991 = loc("conv2d_2478.dc.transpose.3"(#loc1504))
#loc1992 = loc("conv2d_2478.dc.transpose.4"(#loc1504))
#loc1993 = loc("conv2d_2495.dc.transpose.0"(#loc1507))
#loc1994 = loc("conv2d_2495.dc.transpose.1"(#loc1507))
#loc1995 = loc("conv2d_2495.dc.conv2d.2"(#loc1507))
#loc1996 = loc("conv2d_2495.dc.transpose.3"(#loc1507))
#loc1997 = loc("conv2d_2495.dc.transpose.4"(#loc1507))
#loc1998 = loc("conv2d_2511.dc.transpose.0"(#loc1510))
#loc1999 = loc("conv2d_2511.dc.transpose.1"(#loc1510))
#loc2000 = loc("conv2d_2511.dc.conv2d.2"(#loc1510))
#loc2001 = loc("conv2d_2511.dc.transpose.3"(#loc1510))
#loc2002 = loc("conv2d_2511.dc.transpose.4"(#loc1510))
#loc2003 = loc("conv2d_2528.dc.transpose.0"(#loc1513))
#loc2004 = loc("conv2d_2528.dc.transpose.1"(#loc1513))
#loc2005 = loc("conv2d_2528.dc.conv2d.2"(#loc1513))
#loc2006 = loc("conv2d_2528.dc.transpose.3"(#loc1513))
#loc2007 = loc("conv2d_2528.dc.transpose.4"(#loc1513))
#loc2008 = loc("conv2d_2546.dc.transpose.0"(#loc1516))
#loc2009 = loc("conv2d_2546.dc.transpose.1"(#loc1516))
#loc2010 = loc("conv2d_2546.dc.conv2d.2"(#loc1516))
#loc2011 = loc("conv2d_2546.dc.transpose.3"(#loc1516))
#loc2012 = loc("conv2d_2546.dc.transpose.4"(#loc1516))
#loc2013 = loc("conv2d_2562.dc.transpose.0"(#loc1519))
#loc2014 = loc("conv2d_2562.dc.transpose.1"(#loc1519))
#loc2015 = loc("conv2d_2562.dc.conv2d.2"(#loc1519))
#loc2016 = loc("conv2d_2562.dc.transpose.3"(#loc1519))
#loc2017 = loc("conv2d_2562.dc.transpose.4"(#loc1519))
#loc2018 = loc("conv2d_2579.dc.transpose.0"(#loc1522))
#loc2019 = loc("conv2d_2579.dc.transpose.1"(#loc1522))
#loc2020 = loc("conv2d_2579.dc.conv2d.2"(#loc1522))
#loc2021 = loc("conv2d_2579.dc.transpose.3"(#loc1522))
#loc2022 = loc("conv2d_2579.dc.transpose.4"(#loc1522))
#loc2023 = loc("conv2d_2595.dc.transpose.0"(#loc1525))
#loc2024 = loc("conv2d_2595.dc.transpose.1"(#loc1525))
#loc2025 = loc("conv2d_2595.dc.conv2d.2"(#loc1525))
#loc2026 = loc("conv2d_2595.dc.transpose.3"(#loc1525))
#loc2027 = loc("conv2d_2595.dc.transpose.4"(#loc1525))
#loc2028 = loc("conv2d_2612.dc.transpose.0"(#loc1528))
#loc2029 = loc("conv2d_2612.dc.transpose.1"(#loc1528))
#loc2030 = loc("conv2d_2612.dc.conv2d.2"(#loc1528))
#loc2031 = loc("conv2d_2612.dc.transpose.3"(#loc1528))
#loc2032 = loc("conv2d_2612.dc.transpose.4"(#loc1528))
#loc2033 = loc("conv2d_2630.dc.transpose.0"(#loc1531))
#loc2034 = loc("conv2d_2630.dc.transpose.1"(#loc1531))
#loc2035 = loc("conv2d_2630.dc.conv2d.2"(#loc1531))
#loc2036 = loc("conv2d_2630.dc.transpose.3"(#loc1531))
#loc2037 = loc("conv2d_2630.dc.transpose.4"(#loc1531))
#loc2038 = loc("conv2d_2646.dc.transpose.0"(#loc1534))
#loc2039 = loc("conv2d_2646.dc.transpose.1"(#loc1534))
#loc2040 = loc("conv2d_2646.dc.conv2d.2"(#loc1534))
#loc2041 = loc("conv2d_2646.dc.transpose.3"(#loc1534))
#loc2042 = loc("conv2d_2646.dc.transpose.4"(#loc1534))
#loc2043 = loc("conv2d_2663.dc.transpose.0"(#loc1537))
#loc2044 = loc("conv2d_2663.dc.transpose.1"(#loc1537))
#loc2045 = loc("conv2d_2663.dc.conv2d.2"(#loc1537))
#loc2046 = loc("conv2d_2663.dc.transpose.3"(#loc1537))
#loc2047 = loc("conv2d_2663.dc.transpose.4"(#loc1537))
#loc2048 = loc("conv2d_2679.dc.transpose.0"(#loc1540))
#loc2049 = loc("conv2d_2679.dc.transpose.1"(#loc1540))
#loc2050 = loc("conv2d_2679.dc.conv2d.2"(#loc1540))
#loc2051 = loc("conv2d_2679.dc.transpose.3"(#loc1540))
#loc2052 = loc("conv2d_2679.dc.transpose.4"(#loc1540))
#loc2053 = loc("conv2d_2696.dc.transpose.0"(#loc1543))
#loc2054 = loc("conv2d_2696.dc.transpose.1"(#loc1543))
#loc2055 = loc("conv2d_2696.dc.conv2d.2"(#loc1543))
#loc2056 = loc("conv2d_2696.dc.transpose.3"(#loc1543))
#loc2057 = loc("conv2d_2696.dc.transpose.4"(#loc1543))
#loc2058 = loc("conv2d_2767.dc.transpose.0"(#loc1556))
#loc2059 = loc("conv2d_2767.dc.transpose.1"(#loc1556))
#loc2060 = loc("conv2d_2767.dc.conv2d.2"(#loc1556))
#loc2061 = loc("conv2d_2767.dc.transpose.3"(#loc1556))
#loc2062 = loc("conv2d_2767.dc.transpose.4"(#loc1556))
#loc2063 = loc("conv2d_2783.dc.transpose.0"(#loc1559))
#loc2064 = loc("conv2d_2783.dc.transpose.1"(#loc1559))
#loc2065 = loc("conv2d_2783.dc.conv2d.2"(#loc1559))
#loc2066 = loc("conv2d_2783.dc.transpose.3"(#loc1559))
#loc2067 = loc("conv2d_2783.dc.transpose.4"(#loc1559))
#loc2068 = loc("conv2d_2800.dc.transpose.0"(#loc1562))
#loc2069 = loc("conv2d_2800.dc.transpose.1"(#loc1562))
#loc2070 = loc("conv2d_2800.dc.conv2d.2"(#loc1562))
#loc2071 = loc("conv2d_2800.dc.transpose.3"(#loc1562))
#loc2072 = loc("conv2d_2800.dc.transpose.4"(#loc1562))
#loc2073 = loc("conv2d_2816.dc.transpose.0"(#loc1565))
#loc2074 = loc("conv2d_2816.dc.transpose.1"(#loc1565))
#loc2075 = loc("conv2d_2816.dc.conv2d.2"(#loc1565))
#loc2076 = loc("conv2d_2816.dc.transpose.3"(#loc1565))
#loc2077 = loc("conv2d_2816.dc.transpose.4"(#loc1565))
