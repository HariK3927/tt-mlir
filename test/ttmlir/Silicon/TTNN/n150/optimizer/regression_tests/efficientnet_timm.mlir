// REQUIRES: opmodel, regression
// RUN: ttmlir-opt --ttir-to-ttnn-backend-pipeline="system-desc-path=%system_desc_path% enable-optimizer=true memory-layout-analysis-enabled=false enable-fusing-pass=true" -o efficientnet_timm_ttnn.mlir %s
// RUN: ttmlir-translate --ttnn-to-flatbuffer efficientnet_timm_ttnn.mlir > %t.ttnn
#loc = loc("EfficientNetTimmB0":0:0)
module @EfficientNetTimmB0 {
  func.func @forward(%arg0: tensor<6x3x224x224xbf16> {ttcore.argument_type = #ttcore.argument_type<input>, ttir.name = "input_1"} loc("EfficientNetTimmB0":0:0), %arg1: tensor<1x32x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_3"} loc("EfficientNetTimmB0":0:0), %arg2: tensor<1x32x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_3_fork_clone1455"} loc("EfficientNetTimmB0":0:0), %arg3: tensor<1x32x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_20"} loc("EfficientNetTimmB0":0:0), %arg4: tensor<1x32x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_20_fork_clone1428"} loc("EfficientNetTimmB0":0:0), %arg5: tensor<1x16x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_50"} loc("EfficientNetTimmB0":0:0), %arg6: tensor<1x16x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_50_fork_clone1387"} loc("EfficientNetTimmB0":0:0), %arg7: tensor<1x96x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_64"} loc("EfficientNetTimmB0":0:0), %arg8: tensor<1x96x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_64_fork_clone1358"} loc("EfficientNetTimmB0":0:0), %arg9: tensor<1x96x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_81"} loc("EfficientNetTimmB0":0:0), %arg10: tensor<1x96x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_81_fork_clone1303"} loc("EfficientNetTimmB0":0:0), %arg11: tensor<1x24x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_111"} loc("EfficientNetTimmB0":0:0), %arg12: tensor<1x24x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_111_fork_clone1227"} loc("EfficientNetTimmB0":0:0), %arg13: tensor<1x144x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_125"} loc("EfficientNetTimmB0":0:0), %arg14: tensor<1x144x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_125_fork_clone1351"} loc("EfficientNetTimmB0":0:0), %arg15: tensor<1x144x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_142"} loc("EfficientNetTimmB0":0:0), %arg16: tensor<1x144x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_142_fork_clone1295"} loc("EfficientNetTimmB0":0:0), %arg17: tensor<1x24x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_172"} loc("EfficientNetTimmB0":0:0), %arg18: tensor<1x24x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_172_fork_clone1222"} loc("EfficientNetTimmB0":0:0), %arg19: tensor<1x144x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_187"} loc("EfficientNetTimmB0":0:0), %arg20: tensor<1x144x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_187_fork_clone1179"} loc("EfficientNetTimmB0":0:0), %arg21: tensor<1x144x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_204"} loc("EfficientNetTimmB0":0:0), %arg22: tensor<1x144x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_204_fork_clone1124"} loc("EfficientNetTimmB0":0:0), %arg23: tensor<1x40x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_234"} loc("EfficientNetTimmB0":0:0), %arg24: tensor<1x40x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_234_fork_clone1048"} loc("EfficientNetTimmB0":0:0), %arg25: tensor<1x240x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_248"} loc("EfficientNetTimmB0":0:0), %arg26: tensor<1x240x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_248_fork_clone1172"} loc("EfficientNetTimmB0":0:0), %arg27: tensor<1x240x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_265"} loc("EfficientNetTimmB0":0:0), %arg28: tensor<1x240x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_265_fork_clone1116"} loc("EfficientNetTimmB0":0:0), %arg29: tensor<1x40x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_295"} loc("EfficientNetTimmB0":0:0), %arg30: tensor<1x40x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_295_fork_clone1043"} loc("EfficientNetTimmB0":0:0), %arg31: tensor<1x240x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_310"} loc("EfficientNetTimmB0":0:0), %arg32: tensor<1x240x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_310_fork_clone993"} loc("EfficientNetTimmB0":0:0), %arg33: tensor<1x240x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_327"} loc("EfficientNetTimmB0":0:0), %arg34: tensor<1x240x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_327_fork_clone917"} loc("EfficientNetTimmB0":0:0), %arg35: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_357"} loc("EfficientNetTimmB0":0:0), %arg36: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_357_fork_clone803"} loc("EfficientNetTimmB0":0:0), %arg37: tensor<1x480x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_371"} loc("EfficientNetTimmB0":0:0), %arg38: tensor<1x480x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_371_fork_clone986"} loc("EfficientNetTimmB0":0:0), %arg39: tensor<1x480x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_388"} loc("EfficientNetTimmB0":0:0), %arg40: tensor<1x480x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_388_fork_clone909"} loc("EfficientNetTimmB0":0:0), %arg41: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_418"} loc("EfficientNetTimmB0":0:0), %arg42: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_418_fork_clone798"} loc("EfficientNetTimmB0":0:0), %arg43: tensor<1x480x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_433"} loc("EfficientNetTimmB0":0:0), %arg44: tensor<1x480x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_433_fork_clone969"} loc("EfficientNetTimmB0":0:0), %arg45: tensor<1x480x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_450"} loc("EfficientNetTimmB0":0:0), %arg46: tensor<1x480x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_450_fork_clone875"} loc("EfficientNetTimmB0":0:0), %arg47: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_480"} loc("EfficientNetTimmB0":0:0), %arg48: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_480_fork_clone777"} loc("EfficientNetTimmB0":0:0), %arg49: tensor<1x480x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_495"} loc("EfficientNetTimmB0":0:0), %arg50: tensor<1x480x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_495_fork_clone724"} loc("EfficientNetTimmB0":0:0), %arg51: tensor<1x480x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_512"} loc("EfficientNetTimmB0":0:0), %arg52: tensor<1x480x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_512_fork_clone648"} loc("EfficientNetTimmB0":0:0), %arg53: tensor<1x112x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_542"} loc("EfficientNetTimmB0":0:0), %arg54: tensor<1x112x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_542_fork_clone534"} loc("EfficientNetTimmB0":0:0), %arg55: tensor<1x672x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_556"} loc("EfficientNetTimmB0":0:0), %arg56: tensor<1x672x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_556_fork_clone717"} loc("EfficientNetTimmB0":0:0), %arg57: tensor<1x672x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_573"} loc("EfficientNetTimmB0":0:0), %arg58: tensor<1x672x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_573_fork_clone640"} loc("EfficientNetTimmB0":0:0), %arg59: tensor<1x112x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_603"} loc("EfficientNetTimmB0":0:0), %arg60: tensor<1x112x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_603_fork_clone529"} loc("EfficientNetTimmB0":0:0), %arg61: tensor<1x672x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_618"} loc("EfficientNetTimmB0":0:0), %arg62: tensor<1x672x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_618_fork_clone700"} loc("EfficientNetTimmB0":0:0), %arg63: tensor<1x672x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_635"} loc("EfficientNetTimmB0":0:0), %arg64: tensor<1x672x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_635_fork_clone606"} loc("EfficientNetTimmB0":0:0), %arg65: tensor<1x112x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_665"} loc("EfficientNetTimmB0":0:0), %arg66: tensor<1x112x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_665_fork_clone508"} loc("EfficientNetTimmB0":0:0), %arg67: tensor<1x672x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_680"} loc("EfficientNetTimmB0":0:0), %arg68: tensor<1x672x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_680_fork_clone452"} loc("EfficientNetTimmB0":0:0), %arg69: tensor<1x672x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_697"} loc("EfficientNetTimmB0":0:0), %arg70: tensor<1x672x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_697_fork_clone360"} loc("EfficientNetTimmB0":0:0), %arg71: tensor<1x192x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_727"} loc("EfficientNetTimmB0":0:0), %arg72: tensor<1x192x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_727_fork_clone205"} loc("EfficientNetTimmB0":0:0), %arg73: tensor<1x1152x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_741"} loc("EfficientNetTimmB0":0:0), %arg74: tensor<1x1152x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_741_fork_clone445"} loc("EfficientNetTimmB0":0:0), %arg75: tensor<1x1152x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_758"} loc("EfficientNetTimmB0":0:0), %arg76: tensor<1x1152x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_758_fork_clone352"} loc("EfficientNetTimmB0":0:0), %arg77: tensor<1x192x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_788"} loc("EfficientNetTimmB0":0:0), %arg78: tensor<1x192x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_788_fork_clone200"} loc("EfficientNetTimmB0":0:0), %arg79: tensor<1x1152x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_803"} loc("EfficientNetTimmB0":0:0), %arg80: tensor<1x1152x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_803_fork_clone424"} loc("EfficientNetTimmB0":0:0), %arg81: tensor<1x1152x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_820"} loc("EfficientNetTimmB0":0:0), %arg82: tensor<1x1152x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_820_fork_clone309"} loc("EfficientNetTimmB0":0:0), %arg83: tensor<1x192x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_850"} loc("EfficientNetTimmB0":0:0), %arg84: tensor<1x192x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_850_fork_clone173"} loc("EfficientNetTimmB0":0:0), %arg85: tensor<1x1152x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_865"} loc("EfficientNetTimmB0":0:0), %arg86: tensor<1x1152x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_865_fork_clone394"} loc("EfficientNetTimmB0":0:0), %arg87: tensor<1x1152x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_882"} loc("EfficientNetTimmB0":0:0), %arg88: tensor<1x1152x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_882_fork_clone270"} loc("EfficientNetTimmB0":0:0), %arg89: tensor<1x192x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_912"} loc("EfficientNetTimmB0":0:0), %arg90: tensor<1x192x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_912_fork_clone150"} loc("EfficientNetTimmB0":0:0), %arg91: tensor<1x1152x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_927"} loc("EfficientNetTimmB0":0:0), %arg92: tensor<1x1152x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_927_fork_clone113"} loc("EfficientNetTimmB0":0:0), %arg93: tensor<1x1152x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_944"} loc("EfficientNetTimmB0":0:0), %arg94: tensor<1x1152x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_944_fork_clone84"} loc("EfficientNetTimmB0":0:0), %arg95: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_974"} loc("EfficientNetTimmB0":0:0), %arg96: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_974_fork_clone45"} loc("EfficientNetTimmB0":0:0), %arg97: tensor<1x1280x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_988"} loc("EfficientNetTimmB0":0:0), %arg98: tensor<1x1280x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_988_fork_clone26"} loc("EfficientNetTimmB0":0:0), %arg99: tensor<32x3x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "conv_stem.weight"} loc("EfficientNetTimmB0":0:0), %arg100: tensor<32x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.0.0.conv_dw.weight"} loc("EfficientNetTimmB0":0:0), %arg101: tensor<8x32x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.0.0.se.conv_reduce.weight"} loc("EfficientNetTimmB0":0:0), %arg102: tensor<1x1x1x8xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.0.0.se.conv_reduce.bias"} loc("EfficientNetTimmB0":0:0), %arg103: tensor<32x8x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.0.0.se.conv_expand.weight"} loc("EfficientNetTimmB0":0:0), %arg104: tensor<1x1x1x32xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.0.0.se.conv_expand.bias"} loc("EfficientNetTimmB0":0:0), %arg105: tensor<16x32x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.0.0.conv_pw.weight"} loc("EfficientNetTimmB0":0:0), %arg106: tensor<96x16x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.1.0.conv_pw.weight"} loc("EfficientNetTimmB0":0:0), %arg107: tensor<96x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.1.0.conv_dw.weight"} loc("EfficientNetTimmB0":0:0), %arg108: tensor<4x96x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.1.0.se.conv_reduce.weight"} loc("EfficientNetTimmB0":0:0), %arg109: tensor<1x1x1x4xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.1.0.se.conv_reduce.bias"} loc("EfficientNetTimmB0":0:0), %arg110: tensor<96x4x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.1.0.se.conv_expand.weight"} loc("EfficientNetTimmB0":0:0), %arg111: tensor<1x1x1x96xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.1.0.se.conv_expand.bias"} loc("EfficientNetTimmB0":0:0), %arg112: tensor<24x96x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.1.0.conv_pwl.weight"} loc("EfficientNetTimmB0":0:0), %arg113: tensor<144x24x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.1.1.conv_pw.weight"} loc("EfficientNetTimmB0":0:0), %arg114: tensor<144x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.1.1.conv_dw.weight"} loc("EfficientNetTimmB0":0:0), %arg115: tensor<6x144x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.1.1.se.conv_reduce.weight"} loc("EfficientNetTimmB0":0:0), %arg116: tensor<1x1x1x6xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.1.1.se.conv_reduce.bias"} loc("EfficientNetTimmB0":0:0), %arg117: tensor<144x6x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.1.1.se.conv_expand.weight"} loc("EfficientNetTimmB0":0:0), %arg118: tensor<1x1x1x144xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.1.1.se.conv_expand.bias"} loc("EfficientNetTimmB0":0:0), %arg119: tensor<24x144x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.1.1.conv_pwl.weight"} loc("EfficientNetTimmB0":0:0), %arg120: tensor<144x24x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.2.0.conv_pw.weight"} loc("EfficientNetTimmB0":0:0), %arg121: tensor<144x1x5x5xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.2.0.conv_dw.weight"} loc("EfficientNetTimmB0":0:0), %arg122: tensor<6x144x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.2.0.se.conv_reduce.weight"} loc("EfficientNetTimmB0":0:0), %arg123: tensor<1x1x1x6xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.2.0.se.conv_reduce.bias"} loc("EfficientNetTimmB0":0:0), %arg124: tensor<144x6x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.2.0.se.conv_expand.weight"} loc("EfficientNetTimmB0":0:0), %arg125: tensor<1x1x1x144xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.2.0.se.conv_expand.bias"} loc("EfficientNetTimmB0":0:0), %arg126: tensor<40x144x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.2.0.conv_pwl.weight"} loc("EfficientNetTimmB0":0:0), %arg127: tensor<240x40x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.2.1.conv_pw.weight"} loc("EfficientNetTimmB0":0:0), %arg128: tensor<240x1x5x5xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.2.1.conv_dw.weight"} loc("EfficientNetTimmB0":0:0), %arg129: tensor<10x240x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.2.1.se.conv_reduce.weight"} loc("EfficientNetTimmB0":0:0), %arg130: tensor<1x1x1x10xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.2.1.se.conv_reduce.bias"} loc("EfficientNetTimmB0":0:0), %arg131: tensor<240x10x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.2.1.se.conv_expand.weight"} loc("EfficientNetTimmB0":0:0), %arg132: tensor<1x1x1x240xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.2.1.se.conv_expand.bias"} loc("EfficientNetTimmB0":0:0), %arg133: tensor<40x240x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.2.1.conv_pwl.weight"} loc("EfficientNetTimmB0":0:0), %arg134: tensor<240x40x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.3.0.conv_pw.weight"} loc("EfficientNetTimmB0":0:0), %arg135: tensor<240x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.3.0.conv_dw.weight"} loc("EfficientNetTimmB0":0:0), %arg136: tensor<10x240x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.3.0.se.conv_reduce.weight"} loc("EfficientNetTimmB0":0:0), %arg137: tensor<1x1x1x10xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.3.0.se.conv_reduce.bias"} loc("EfficientNetTimmB0":0:0), %arg138: tensor<240x10x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.3.0.se.conv_expand.weight"} loc("EfficientNetTimmB0":0:0), %arg139: tensor<1x1x1x240xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.3.0.se.conv_expand.bias"} loc("EfficientNetTimmB0":0:0), %arg140: tensor<80x240x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.3.0.conv_pwl.weight"} loc("EfficientNetTimmB0":0:0), %arg141: tensor<480x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.3.1.conv_pw.weight"} loc("EfficientNetTimmB0":0:0), %arg142: tensor<480x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.3.1.conv_dw.weight"} loc("EfficientNetTimmB0":0:0), %arg143: tensor<20x480x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.3.1.se.conv_reduce.weight"} loc("EfficientNetTimmB0":0:0), %arg144: tensor<1x1x1x20xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.3.1.se.conv_reduce.bias"} loc("EfficientNetTimmB0":0:0), %arg145: tensor<480x20x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.3.1.se.conv_expand.weight"} loc("EfficientNetTimmB0":0:0), %arg146: tensor<1x1x1x480xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.3.1.se.conv_expand.bias"} loc("EfficientNetTimmB0":0:0), %arg147: tensor<80x480x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.3.1.conv_pwl.weight"} loc("EfficientNetTimmB0":0:0), %arg148: tensor<480x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.3.2.conv_pw.weight"} loc("EfficientNetTimmB0":0:0), %arg149: tensor<480x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.3.2.conv_dw.weight"} loc("EfficientNetTimmB0":0:0), %arg150: tensor<20x480x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.3.2.se.conv_reduce.weight"} loc("EfficientNetTimmB0":0:0), %arg151: tensor<1x1x1x20xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.3.2.se.conv_reduce.bias"} loc("EfficientNetTimmB0":0:0), %arg152: tensor<480x20x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.3.2.se.conv_expand.weight"} loc("EfficientNetTimmB0":0:0), %arg153: tensor<1x1x1x480xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.3.2.se.conv_expand.bias"} loc("EfficientNetTimmB0":0:0), %arg154: tensor<80x480x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.3.2.conv_pwl.weight"} loc("EfficientNetTimmB0":0:0), %arg155: tensor<480x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.4.0.conv_pw.weight"} loc("EfficientNetTimmB0":0:0), %arg156: tensor<480x1x5x5xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.4.0.conv_dw.weight"} loc("EfficientNetTimmB0":0:0), %arg157: tensor<20x480x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.4.0.se.conv_reduce.weight"} loc("EfficientNetTimmB0":0:0), %arg158: tensor<1x1x1x20xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.4.0.se.conv_reduce.bias"} loc("EfficientNetTimmB0":0:0), %arg159: tensor<480x20x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.4.0.se.conv_expand.weight"} loc("EfficientNetTimmB0":0:0), %arg160: tensor<1x1x1x480xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.4.0.se.conv_expand.bias"} loc("EfficientNetTimmB0":0:0), %arg161: tensor<112x480x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.4.0.conv_pwl.weight"} loc("EfficientNetTimmB0":0:0), %arg162: tensor<672x112x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.4.1.conv_pw.weight"} loc("EfficientNetTimmB0":0:0), %arg163: tensor<672x1x5x5xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.4.1.conv_dw.weight"} loc("EfficientNetTimmB0":0:0), %arg164: tensor<28x672x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.4.1.se.conv_reduce.weight"} loc("EfficientNetTimmB0":0:0), %arg165: tensor<1x1x1x28xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.4.1.se.conv_reduce.bias"} loc("EfficientNetTimmB0":0:0), %arg166: tensor<672x28x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.4.1.se.conv_expand.weight"} loc("EfficientNetTimmB0":0:0), %arg167: tensor<1x1x1x672xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.4.1.se.conv_expand.bias"} loc("EfficientNetTimmB0":0:0), %arg168: tensor<112x672x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.4.1.conv_pwl.weight"} loc("EfficientNetTimmB0":0:0), %arg169: tensor<672x112x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.4.2.conv_pw.weight"} loc("EfficientNetTimmB0":0:0), %arg170: tensor<672x1x5x5xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.4.2.conv_dw.weight"} loc("EfficientNetTimmB0":0:0), %arg171: tensor<28x672x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.4.2.se.conv_reduce.weight"} loc("EfficientNetTimmB0":0:0), %arg172: tensor<1x1x1x28xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.4.2.se.conv_reduce.bias"} loc("EfficientNetTimmB0":0:0), %arg173: tensor<672x28x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.4.2.se.conv_expand.weight"} loc("EfficientNetTimmB0":0:0), %arg174: tensor<1x1x1x672xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.4.2.se.conv_expand.bias"} loc("EfficientNetTimmB0":0:0), %arg175: tensor<112x672x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.4.2.conv_pwl.weight"} loc("EfficientNetTimmB0":0:0), %arg176: tensor<672x112x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.5.0.conv_pw.weight"} loc("EfficientNetTimmB0":0:0), %arg177: tensor<672x1x5x5xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.5.0.conv_dw.weight"} loc("EfficientNetTimmB0":0:0), %arg178: tensor<28x672x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.5.0.se.conv_reduce.weight"} loc("EfficientNetTimmB0":0:0), %arg179: tensor<1x1x1x28xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.5.0.se.conv_reduce.bias"} loc("EfficientNetTimmB0":0:0), %arg180: tensor<672x28x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.5.0.se.conv_expand.weight"} loc("EfficientNetTimmB0":0:0), %arg181: tensor<1x1x1x672xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.5.0.se.conv_expand.bias"} loc("EfficientNetTimmB0":0:0), %arg182: tensor<192x672x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.5.0.conv_pwl.weight"} loc("EfficientNetTimmB0":0:0), %arg183: tensor<1152x192x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.5.1.conv_pw.weight"} loc("EfficientNetTimmB0":0:0), %arg184: tensor<1152x1x5x5xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.5.1.conv_dw.weight"} loc("EfficientNetTimmB0":0:0), %arg185: tensor<48x1152x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.5.1.se.conv_reduce.weight"} loc("EfficientNetTimmB0":0:0), %arg186: tensor<1x1x1x48xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.5.1.se.conv_reduce.bias"} loc("EfficientNetTimmB0":0:0), %arg187: tensor<1152x48x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.5.1.se.conv_expand.weight"} loc("EfficientNetTimmB0":0:0), %arg188: tensor<1x1x1x1152xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.5.1.se.conv_expand.bias"} loc("EfficientNetTimmB0":0:0), %arg189: tensor<192x1152x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.5.1.conv_pwl.weight"} loc("EfficientNetTimmB0":0:0), %arg190: tensor<1152x192x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.5.2.conv_pw.weight"} loc("EfficientNetTimmB0":0:0), %arg191: tensor<1152x1x5x5xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.5.2.conv_dw.weight"} loc("EfficientNetTimmB0":0:0), %arg192: tensor<48x1152x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.5.2.se.conv_reduce.weight"} loc("EfficientNetTimmB0":0:0), %arg193: tensor<1x1x1x48xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.5.2.se.conv_reduce.bias"} loc("EfficientNetTimmB0":0:0), %arg194: tensor<1152x48x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.5.2.se.conv_expand.weight"} loc("EfficientNetTimmB0":0:0), %arg195: tensor<1x1x1x1152xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.5.2.se.conv_expand.bias"} loc("EfficientNetTimmB0":0:0), %arg196: tensor<192x1152x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.5.2.conv_pwl.weight"} loc("EfficientNetTimmB0":0:0), %arg197: tensor<1152x192x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.5.3.conv_pw.weight"} loc("EfficientNetTimmB0":0:0), %arg198: tensor<1152x1x5x5xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.5.3.conv_dw.weight"} loc("EfficientNetTimmB0":0:0), %arg199: tensor<48x1152x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.5.3.se.conv_reduce.weight"} loc("EfficientNetTimmB0":0:0), %arg200: tensor<1x1x1x48xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.5.3.se.conv_reduce.bias"} loc("EfficientNetTimmB0":0:0), %arg201: tensor<1152x48x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.5.3.se.conv_expand.weight"} loc("EfficientNetTimmB0":0:0), %arg202: tensor<1x1x1x1152xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.5.3.se.conv_expand.bias"} loc("EfficientNetTimmB0":0:0), %arg203: tensor<192x1152x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.5.3.conv_pwl.weight"} loc("EfficientNetTimmB0":0:0), %arg204: tensor<1152x192x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.6.0.conv_pw.weight"} loc("EfficientNetTimmB0":0:0), %arg205: tensor<1152x1x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.6.0.conv_dw.weight"} loc("EfficientNetTimmB0":0:0), %arg206: tensor<48x1152x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.6.0.se.conv_reduce.weight"} loc("EfficientNetTimmB0":0:0), %arg207: tensor<1x1x1x48xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.6.0.se.conv_reduce.bias"} loc("EfficientNetTimmB0":0:0), %arg208: tensor<1152x48x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.6.0.se.conv_expand.weight"} loc("EfficientNetTimmB0":0:0), %arg209: tensor<1x1x1x1152xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.6.0.se.conv_expand.bias"} loc("EfficientNetTimmB0":0:0), %arg210: tensor<320x1152x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "blocks.6.0.conv_pwl.weight"} loc("EfficientNetTimmB0":0:0), %arg211: tensor<1280x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "conv_head.weight"} loc("EfficientNetTimmB0":0:0), %arg212: tensor<1280x1000xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "classifier.weight"} loc("EfficientNetTimmB0":0:0), %arg213: tensor<1000xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "classifier.bias"} loc("EfficientNetTimmB0":0:0)) -> (tensor<6x1000xbf16> {ttir.name = "EfficientNetTimmB0.output_add_1007"}) {
    %0 = ttir.empty() : tensor<6x224x3x224xbf16> loc(#loc126)
    %1 = "ttir.transpose"(%arg0, %0) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x3x224x224xbf16>, tensor<6x224x3x224xbf16>) -> tensor<6x224x3x224xbf16> loc(#loc126)
    %2 = ttir.empty() : tensor<6x224x224x3xbf16> loc(#loc127)
    %3 = "ttir.transpose"(%1, %2) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x224x3x224xbf16>, tensor<6x224x224x3xbf16>) -> tensor<6x224x224x3xbf16> loc(#loc127)
    %4 = ttir.empty() : tensor<6x112x112x32xbf16> loc(#loc128)
    %5 = "ttir.conv2d"(%3, %arg99, %4) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 2, 2>}> {channel_last = 1 : si32} : (tensor<6x224x224x3xbf16>, tensor<32x3x3x3xbf16>, tensor<6x112x112x32xbf16>) -> tensor<6x112x112x32xbf16> loc(#loc128)
    %6 = ttir.empty() : tensor<6x112x32x112xbf16> loc(#loc129)
    %7 = "ttir.transpose"(%5, %6) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x112x112x32xbf16>, tensor<6x112x32x112xbf16>) -> tensor<6x112x32x112xbf16> loc(#loc129)
    %8 = ttir.empty() : tensor<6x32x112x112xbf16> loc(#loc130)
    %9 = "ttir.transpose"(%7, %8) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x112x32x112xbf16>, tensor<6x32x112x112xbf16>) -> tensor<6x32x112x112xbf16> loc(#loc130)
    %10 = ttir.empty() : tensor<6x32x112x112xbf16> loc(#loc2)
    %11 = "ttir.multiply"(%9, %arg1, %10) : (tensor<6x32x112x112xbf16>, tensor<1x32x1x1xbf16>, tensor<6x32x112x112xbf16>) -> tensor<6x32x112x112xbf16> loc(#loc2)
    %12 = ttir.empty() : tensor<6x32x112x112xbf16> loc(#loc3)
    %13 = "ttir.add"(%11, %arg2, %12) : (tensor<6x32x112x112xbf16>, tensor<1x32x1x1xbf16>, tensor<6x32x112x112xbf16>) -> tensor<6x32x112x112xbf16> loc(#loc3)
    %14 = ttir.empty() : tensor<6x32x112x112xbf16> loc(#loc148)
    %15 = "ttir.sigmoid"(%13, %14) : (tensor<6x32x112x112xbf16>, tensor<6x32x112x112xbf16>) -> tensor<6x32x112x112xbf16> loc(#loc148)
    %16 = ttir.empty() : tensor<6x32x112x112xbf16> loc(#loc149)
    %17 = "ttir.multiply"(%13, %15, %16) : (tensor<6x32x112x112xbf16>, tensor<6x32x112x112xbf16>, tensor<6x32x112x112xbf16>) -> tensor<6x32x112x112xbf16> loc(#loc149)
    %18 = ttir.empty() : tensor<6x112x32x112xbf16> loc(#loc277)
    %19 = "ttir.transpose"(%17, %18) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x32x112x112xbf16>, tensor<6x112x32x112xbf16>) -> tensor<6x112x32x112xbf16> loc(#loc277)
    %20 = ttir.empty() : tensor<6x112x112x32xbf16> loc(#loc278)
    %21 = "ttir.transpose"(%19, %20) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x112x32x112xbf16>, tensor<6x112x112x32xbf16>) -> tensor<6x112x112x32xbf16> loc(#loc278)
    %22 = ttir.empty() : tensor<6x112x112x32xbf16> loc(#loc279)
    %23 = "ttir.conv2d"(%21, %arg100, %22) <{dilation = array<i32: 1, 1>, groups = 32 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x112x112x32xbf16>, tensor<32x1x3x3xbf16>, tensor<6x112x112x32xbf16>) -> tensor<6x112x112x32xbf16> loc(#loc279)
    %24 = ttir.empty() : tensor<6x112x32x112xbf16> loc(#loc280)
    %25 = "ttir.transpose"(%23, %24) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x112x112x32xbf16>, tensor<6x112x32x112xbf16>) -> tensor<6x112x32x112xbf16> loc(#loc280)
    %26 = ttir.empty() : tensor<6x32x112x112xbf16> loc(#loc281)
    %27 = "ttir.transpose"(%25, %26) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x112x32x112xbf16>, tensor<6x32x112x112xbf16>) -> tensor<6x32x112x112xbf16> loc(#loc281)
    %28 = ttir.empty() : tensor<6x32x112x112xbf16> loc(#loc4)
    %29 = "ttir.multiply"(%27, %arg3, %28) : (tensor<6x32x112x112xbf16>, tensor<1x32x1x1xbf16>, tensor<6x32x112x112xbf16>) -> tensor<6x32x112x112xbf16> loc(#loc4)
    %30 = ttir.empty() : tensor<6x32x112x112xbf16> loc(#loc5)
    %31 = "ttir.add"(%29, %arg4, %30) : (tensor<6x32x112x112xbf16>, tensor<1x32x1x1xbf16>, tensor<6x32x112x112xbf16>) -> tensor<6x32x112x112xbf16> loc(#loc5)
    %32 = ttir.empty() : tensor<6x32x112x112xbf16> loc(#loc639)
    %33 = "ttir.sigmoid"(%31, %32) : (tensor<6x32x112x112xbf16>, tensor<6x32x112x112xbf16>) -> tensor<6x32x112x112xbf16> loc(#loc639)
    %34 = ttir.empty() : tensor<6x32x112x112xbf16> loc(#loc640)
    %35 = "ttir.multiply"(%31, %33, %34) : (tensor<6x32x112x112xbf16>, tensor<6x32x112x112xbf16>, tensor<6x32x112x112xbf16>) -> tensor<6x32x112x112xbf16> loc(#loc640)
    %36 = ttir.empty() : tensor<6x32x1x112xbf16> loc(#loc6)
    %37 = "ttir.mean"(%35, %36) <{dim_arg = [-2 : i32], keep_dim = true}> : (tensor<6x32x112x112xbf16>, tensor<6x32x1x112xbf16>) -> tensor<6x32x1x112xbf16> loc(#loc6)
    %38 = ttir.empty() : tensor<6x32x1x1xbf16> loc(#loc283)
    %39 = "ttir.mean"(%37, %38) <{dim_arg = [-1 : i32], keep_dim = true}> : (tensor<6x32x1x112xbf16>, tensor<6x32x1x1xbf16>) -> tensor<6x32x1x1xbf16> loc(#loc283)
    %40 = ttir.empty() : tensor<6x1x32x1xbf16> loc(#loc641)
    %41 = "ttir.transpose"(%39, %40) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x32x1x1xbf16>, tensor<6x1x32x1xbf16>) -> tensor<6x1x32x1xbf16> loc(#loc641)
    %42 = ttir.empty() : tensor<6x1x1x32xbf16> loc(#loc642)
    %43 = "ttir.transpose"(%41, %42) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x32x1xbf16>, tensor<6x1x1x32xbf16>) -> tensor<6x1x1x32xbf16> loc(#loc642)
    %44 = ttir.empty() : tensor<6x1x1x8xbf16> loc(#loc643)
    %45 = "ttir.conv2d"(%43, %arg101, %arg102, %44) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x32xbf16>, tensor<8x32x1x1xbf16>, tensor<1x1x1x8xbf16>, tensor<6x1x1x8xbf16>) -> tensor<6x1x1x8xbf16> loc(#loc643)
    %46 = ttir.empty() : tensor<6x1x8x1xbf16> loc(#loc644)
    %47 = "ttir.transpose"(%45, %46) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x8xbf16>, tensor<6x1x8x1xbf16>) -> tensor<6x1x8x1xbf16> loc(#loc644)
    %48 = ttir.empty() : tensor<6x8x1x1xbf16> loc(#loc645)
    %49 = "ttir.transpose"(%47, %48) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x8x1xbf16>, tensor<6x8x1x1xbf16>) -> tensor<6x8x1x1xbf16> loc(#loc645)
    %50 = ttir.empty() : tensor<6x8x1x1xbf16> loc(#loc646)
    %51 = "ttir.sigmoid"(%49, %50) : (tensor<6x8x1x1xbf16>, tensor<6x8x1x1xbf16>) -> tensor<6x8x1x1xbf16> loc(#loc646)
    %52 = ttir.empty() : tensor<6x8x1x1xbf16> loc(#loc647)
    %53 = "ttir.multiply"(%49, %51, %52) : (tensor<6x8x1x1xbf16>, tensor<6x8x1x1xbf16>, tensor<6x8x1x1xbf16>) -> tensor<6x8x1x1xbf16> loc(#loc647)
    %54 = ttir.empty() : tensor<6x1x8x1xbf16> loc(#loc648)
    %55 = "ttir.transpose"(%53, %54) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x8x1x1xbf16>, tensor<6x1x8x1xbf16>) -> tensor<6x1x8x1xbf16> loc(#loc648)
    %56 = ttir.empty() : tensor<6x1x1x8xbf16> loc(#loc649)
    %57 = "ttir.transpose"(%55, %56) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x8x1xbf16>, tensor<6x1x1x8xbf16>) -> tensor<6x1x1x8xbf16> loc(#loc649)
    %58 = ttir.empty() : tensor<6x1x1x32xbf16> loc(#loc650)
    %59 = "ttir.conv2d"(%57, %arg103, %arg104, %58) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x8xbf16>, tensor<32x8x1x1xbf16>, tensor<1x1x1x32xbf16>, tensor<6x1x1x32xbf16>) -> tensor<6x1x1x32xbf16> loc(#loc650)
    %60 = ttir.empty() : tensor<6x1x32x1xbf16> loc(#loc651)
    %61 = "ttir.transpose"(%59, %60) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x32xbf16>, tensor<6x1x32x1xbf16>) -> tensor<6x1x32x1xbf16> loc(#loc651)
    %62 = ttir.empty() : tensor<6x32x1x1xbf16> loc(#loc652)
    %63 = "ttir.transpose"(%61, %62) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x32x1xbf16>, tensor<6x32x1x1xbf16>) -> tensor<6x32x1x1xbf16> loc(#loc652)
    %64 = ttir.empty() : tensor<6x32x1x1xbf16> loc(#loc653)
    %65 = "ttir.sigmoid"(%63, %64) : (tensor<6x32x1x1xbf16>, tensor<6x32x1x1xbf16>) -> tensor<6x32x1x1xbf16> loc(#loc653)
    %66 = ttir.empty() : tensor<6x32x112x112xbf16> loc(#loc288)
    %67 = "ttir.multiply"(%35, %65, %66) : (tensor<6x32x112x112xbf16>, tensor<6x32x1x1xbf16>, tensor<6x32x112x112xbf16>) -> tensor<6x32x112x112xbf16> loc(#loc288)
    %68 = ttir.empty() : tensor<6x112x32x112xbf16> loc(#loc289)
    %69 = "ttir.transpose"(%67, %68) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x32x112x112xbf16>, tensor<6x112x32x112xbf16>) -> tensor<6x112x32x112xbf16> loc(#loc289)
    %70 = ttir.empty() : tensor<6x112x112x32xbf16> loc(#loc290)
    %71 = "ttir.transpose"(%69, %70) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x112x32x112xbf16>, tensor<6x112x112x32xbf16>) -> tensor<6x112x112x32xbf16> loc(#loc290)
    %72 = ttir.empty() : tensor<6x112x112x16xbf16> loc(#loc291)
    %73 = "ttir.conv2d"(%71, %arg105, %72) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x112x112x32xbf16>, tensor<16x32x1x1xbf16>, tensor<6x112x112x16xbf16>) -> tensor<6x112x112x16xbf16> loc(#loc291)
    %74 = ttir.empty() : tensor<6x112x16x112xbf16> loc(#loc292)
    %75 = "ttir.transpose"(%73, %74) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x112x112x16xbf16>, tensor<6x112x16x112xbf16>) -> tensor<6x112x16x112xbf16> loc(#loc292)
    %76 = ttir.empty() : tensor<6x16x112x112xbf16> loc(#loc293)
    %77 = "ttir.transpose"(%75, %76) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x112x16x112xbf16>, tensor<6x16x112x112xbf16>) -> tensor<6x16x112x112xbf16> loc(#loc293)
    %78 = ttir.empty() : tensor<6x16x112x112xbf16> loc(#loc7)
    %79 = "ttir.multiply"(%77, %arg5, %78) : (tensor<6x16x112x112xbf16>, tensor<1x16x1x1xbf16>, tensor<6x16x112x112xbf16>) -> tensor<6x16x112x112xbf16> loc(#loc7)
    %80 = ttir.empty() : tensor<6x16x112x112xbf16> loc(#loc8)
    %81 = "ttir.add"(%79, %arg6, %80) : (tensor<6x16x112x112xbf16>, tensor<1x16x1x1xbf16>, tensor<6x16x112x112xbf16>) -> tensor<6x16x112x112xbf16> loc(#loc8)
    %82 = ttir.empty() : tensor<6x112x16x112xbf16> loc(#loc294)
    %83 = "ttir.transpose"(%81, %82) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x16x112x112xbf16>, tensor<6x112x16x112xbf16>) -> tensor<6x112x16x112xbf16> loc(#loc294)
    %84 = ttir.empty() : tensor<6x112x112x16xbf16> loc(#loc295)
    %85 = "ttir.transpose"(%83, %84) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x112x16x112xbf16>, tensor<6x112x112x16xbf16>) -> tensor<6x112x112x16xbf16> loc(#loc295)
    %86 = ttir.empty() : tensor<6x112x112x96xbf16> loc(#loc296)
    %87 = "ttir.conv2d"(%85, %arg106, %86) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x112x112x16xbf16>, tensor<96x16x1x1xbf16>, tensor<6x112x112x96xbf16>) -> tensor<6x112x112x96xbf16> loc(#loc296)
    %88 = ttir.empty() : tensor<6x112x96x112xbf16> loc(#loc297)
    %89 = "ttir.transpose"(%87, %88) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x112x112x96xbf16>, tensor<6x112x96x112xbf16>) -> tensor<6x112x96x112xbf16> loc(#loc297)
    %90 = ttir.empty() : tensor<6x96x112x112xbf16> loc(#loc298)
    %91 = "ttir.transpose"(%89, %90) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x112x96x112xbf16>, tensor<6x96x112x112xbf16>) -> tensor<6x96x112x112xbf16> loc(#loc298)
    %92 = ttir.empty() : tensor<6x96x112x112xbf16> loc(#loc9)
    %93 = "ttir.multiply"(%91, %arg7, %92) : (tensor<6x96x112x112xbf16>, tensor<1x96x1x1xbf16>, tensor<6x96x112x112xbf16>) -> tensor<6x96x112x112xbf16> loc(#loc9)
    %94 = ttir.empty() : tensor<6x96x112x112xbf16> loc(#loc10)
    %95 = "ttir.add"(%93, %arg8, %94) : (tensor<6x96x112x112xbf16>, tensor<1x96x1x1xbf16>, tensor<6x96x112x112xbf16>) -> tensor<6x96x112x112xbf16> loc(#loc10)
    %96 = ttir.empty() : tensor<6x96x112x112xbf16> loc(#loc654)
    %97 = "ttir.sigmoid"(%95, %96) : (tensor<6x96x112x112xbf16>, tensor<6x96x112x112xbf16>) -> tensor<6x96x112x112xbf16> loc(#loc654)
    %98 = ttir.empty() : tensor<6x96x112x112xbf16> loc(#loc655)
    %99 = "ttir.multiply"(%95, %97, %98) : (tensor<6x96x112x112xbf16>, tensor<6x96x112x112xbf16>, tensor<6x96x112x112xbf16>) -> tensor<6x96x112x112xbf16> loc(#loc655)
    %100 = ttir.empty() : tensor<6x112x96x112xbf16> loc(#loc300)
    %101 = "ttir.transpose"(%99, %100) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x96x112x112xbf16>, tensor<6x112x96x112xbf16>) -> tensor<6x112x96x112xbf16> loc(#loc300)
    %102 = ttir.empty() : tensor<6x112x112x96xbf16> loc(#loc301)
    %103 = "ttir.transpose"(%101, %102) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x112x96x112xbf16>, tensor<6x112x112x96xbf16>) -> tensor<6x112x112x96xbf16> loc(#loc301)
    %104 = ttir.empty() : tensor<6x56x56x96xbf16> loc(#loc302)
    %105 = "ttir.conv2d"(%103, %arg107, %104) <{dilation = array<i32: 1, 1>, groups = 96 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 2, 2>}> {channel_last = 1 : si32} : (tensor<6x112x112x96xbf16>, tensor<96x1x3x3xbf16>, tensor<6x56x56x96xbf16>) -> tensor<6x56x56x96xbf16> loc(#loc302)
    %106 = ttir.empty() : tensor<6x56x96x56xbf16> loc(#loc303)
    %107 = "ttir.transpose"(%105, %106) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x56x56x96xbf16>, tensor<6x56x96x56xbf16>) -> tensor<6x56x96x56xbf16> loc(#loc303)
    %108 = ttir.empty() : tensor<6x96x56x56xbf16> loc(#loc304)
    %109 = "ttir.transpose"(%107, %108) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x56x96x56xbf16>, tensor<6x96x56x56xbf16>) -> tensor<6x96x56x56xbf16> loc(#loc304)
    %110 = ttir.empty() : tensor<6x96x56x56xbf16> loc(#loc11)
    %111 = "ttir.multiply"(%109, %arg9, %110) : (tensor<6x96x56x56xbf16>, tensor<1x96x1x1xbf16>, tensor<6x96x56x56xbf16>) -> tensor<6x96x56x56xbf16> loc(#loc11)
    %112 = ttir.empty() : tensor<6x96x56x56xbf16> loc(#loc12)
    %113 = "ttir.add"(%111, %arg10, %112) : (tensor<6x96x56x56xbf16>, tensor<1x96x1x1xbf16>, tensor<6x96x56x56xbf16>) -> tensor<6x96x56x56xbf16> loc(#loc12)
    %114 = ttir.empty() : tensor<6x96x56x56xbf16> loc(#loc656)
    %115 = "ttir.sigmoid"(%113, %114) : (tensor<6x96x56x56xbf16>, tensor<6x96x56x56xbf16>) -> tensor<6x96x56x56xbf16> loc(#loc656)
    %116 = ttir.empty() : tensor<6x96x56x56xbf16> loc(#loc657)
    %117 = "ttir.multiply"(%113, %115, %116) : (tensor<6x96x56x56xbf16>, tensor<6x96x56x56xbf16>, tensor<6x96x56x56xbf16>) -> tensor<6x96x56x56xbf16> loc(#loc657)
    %118 = ttir.empty() : tensor<6x96x1x56xbf16> loc(#loc13)
    %119 = "ttir.mean"(%117, %118) <{dim_arg = [-2 : i32], keep_dim = true}> : (tensor<6x96x56x56xbf16>, tensor<6x96x1x56xbf16>) -> tensor<6x96x1x56xbf16> loc(#loc13)
    %120 = ttir.empty() : tensor<6x96x1x1xbf16> loc(#loc306)
    %121 = "ttir.mean"(%119, %120) <{dim_arg = [-1 : i32], keep_dim = true}> : (tensor<6x96x1x56xbf16>, tensor<6x96x1x1xbf16>) -> tensor<6x96x1x1xbf16> loc(#loc306)
    %122 = ttir.empty() : tensor<6x1x96x1xbf16> loc(#loc658)
    %123 = "ttir.transpose"(%121, %122) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x96x1x1xbf16>, tensor<6x1x96x1xbf16>) -> tensor<6x1x96x1xbf16> loc(#loc658)
    %124 = ttir.empty() : tensor<6x1x1x96xbf16> loc(#loc659)
    %125 = "ttir.transpose"(%123, %124) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x96x1xbf16>, tensor<6x1x1x96xbf16>) -> tensor<6x1x1x96xbf16> loc(#loc659)
    %126 = ttir.empty() : tensor<6x1x1x4xbf16> loc(#loc660)
    %127 = "ttir.conv2d"(%125, %arg108, %arg109, %126) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x96xbf16>, tensor<4x96x1x1xbf16>, tensor<1x1x1x4xbf16>, tensor<6x1x1x4xbf16>) -> tensor<6x1x1x4xbf16> loc(#loc660)
    %128 = ttir.empty() : tensor<6x1x4x1xbf16> loc(#loc661)
    %129 = "ttir.transpose"(%127, %128) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x4xbf16>, tensor<6x1x4x1xbf16>) -> tensor<6x1x4x1xbf16> loc(#loc661)
    %130 = ttir.empty() : tensor<6x4x1x1xbf16> loc(#loc662)
    %131 = "ttir.transpose"(%129, %130) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x4x1xbf16>, tensor<6x4x1x1xbf16>) -> tensor<6x4x1x1xbf16> loc(#loc662)
    %132 = ttir.empty() : tensor<6x4x1x1xbf16> loc(#loc663)
    %133 = "ttir.sigmoid"(%131, %132) : (tensor<6x4x1x1xbf16>, tensor<6x4x1x1xbf16>) -> tensor<6x4x1x1xbf16> loc(#loc663)
    %134 = ttir.empty() : tensor<6x4x1x1xbf16> loc(#loc664)
    %135 = "ttir.multiply"(%131, %133, %134) : (tensor<6x4x1x1xbf16>, tensor<6x4x1x1xbf16>, tensor<6x4x1x1xbf16>) -> tensor<6x4x1x1xbf16> loc(#loc664)
    %136 = ttir.empty() : tensor<6x1x4x1xbf16> loc(#loc665)
    %137 = "ttir.transpose"(%135, %136) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x4x1x1xbf16>, tensor<6x1x4x1xbf16>) -> tensor<6x1x4x1xbf16> loc(#loc665)
    %138 = ttir.empty() : tensor<6x1x1x4xbf16> loc(#loc666)
    %139 = "ttir.transpose"(%137, %138) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x4x1xbf16>, tensor<6x1x1x4xbf16>) -> tensor<6x1x1x4xbf16> loc(#loc666)
    %140 = ttir.empty() : tensor<6x1x1x96xbf16> loc(#loc667)
    %141 = "ttir.conv2d"(%139, %arg110, %arg111, %140) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x4xbf16>, tensor<96x4x1x1xbf16>, tensor<1x1x1x96xbf16>, tensor<6x1x1x96xbf16>) -> tensor<6x1x1x96xbf16> loc(#loc667)
    %142 = ttir.empty() : tensor<6x1x96x1xbf16> loc(#loc668)
    %143 = "ttir.transpose"(%141, %142) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x96xbf16>, tensor<6x1x96x1xbf16>) -> tensor<6x1x96x1xbf16> loc(#loc668)
    %144 = ttir.empty() : tensor<6x96x1x1xbf16> loc(#loc669)
    %145 = "ttir.transpose"(%143, %144) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x96x1xbf16>, tensor<6x96x1x1xbf16>) -> tensor<6x96x1x1xbf16> loc(#loc669)
    %146 = ttir.empty() : tensor<6x96x1x1xbf16> loc(#loc670)
    %147 = "ttir.sigmoid"(%145, %146) : (tensor<6x96x1x1xbf16>, tensor<6x96x1x1xbf16>) -> tensor<6x96x1x1xbf16> loc(#loc670)
    %148 = ttir.empty() : tensor<6x96x56x56xbf16> loc(#loc311)
    %149 = "ttir.multiply"(%117, %147, %148) : (tensor<6x96x56x56xbf16>, tensor<6x96x1x1xbf16>, tensor<6x96x56x56xbf16>) -> tensor<6x96x56x56xbf16> loc(#loc311)
    %150 = ttir.empty() : tensor<6x56x96x56xbf16> loc(#loc312)
    %151 = "ttir.transpose"(%149, %150) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x96x56x56xbf16>, tensor<6x56x96x56xbf16>) -> tensor<6x56x96x56xbf16> loc(#loc312)
    %152 = ttir.empty() : tensor<6x56x56x96xbf16> loc(#loc313)
    %153 = "ttir.transpose"(%151, %152) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x56x96x56xbf16>, tensor<6x56x56x96xbf16>) -> tensor<6x56x56x96xbf16> loc(#loc313)
    %154 = ttir.empty() : tensor<6x56x56x24xbf16> loc(#loc314)
    %155 = "ttir.conv2d"(%153, %arg112, %154) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x56x56x96xbf16>, tensor<24x96x1x1xbf16>, tensor<6x56x56x24xbf16>) -> tensor<6x56x56x24xbf16> loc(#loc314)
    %156 = ttir.empty() : tensor<6x56x24x56xbf16> loc(#loc315)
    %157 = "ttir.transpose"(%155, %156) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x56x56x24xbf16>, tensor<6x56x24x56xbf16>) -> tensor<6x56x24x56xbf16> loc(#loc315)
    %158 = ttir.empty() : tensor<6x24x56x56xbf16> loc(#loc316)
    %159 = "ttir.transpose"(%157, %158) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x56x24x56xbf16>, tensor<6x24x56x56xbf16>) -> tensor<6x24x56x56xbf16> loc(#loc316)
    %160 = ttir.empty() : tensor<6x24x56x56xbf16> loc(#loc14)
    %161 = "ttir.multiply"(%159, %arg11, %160) : (tensor<6x24x56x56xbf16>, tensor<1x24x1x1xbf16>, tensor<6x24x56x56xbf16>) -> tensor<6x24x56x56xbf16> loc(#loc14)
    %162 = ttir.empty() : tensor<6x24x56x56xbf16> loc(#loc15)
    %163 = "ttir.add"(%161, %arg12, %162) : (tensor<6x24x56x56xbf16>, tensor<1x24x1x1xbf16>, tensor<6x24x56x56xbf16>) -> tensor<6x24x56x56xbf16> loc(#loc15)
    %164 = ttir.empty() : tensor<6x56x24x56xbf16> loc(#loc317)
    %165 = "ttir.transpose"(%163, %164) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x24x56x56xbf16>, tensor<6x56x24x56xbf16>) -> tensor<6x56x24x56xbf16> loc(#loc317)
    %166 = ttir.empty() : tensor<6x56x56x24xbf16> loc(#loc318)
    %167 = "ttir.transpose"(%165, %166) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x56x24x56xbf16>, tensor<6x56x56x24xbf16>) -> tensor<6x56x56x24xbf16> loc(#loc318)
    %168 = ttir.empty() : tensor<6x56x56x144xbf16> loc(#loc319)
    %169 = "ttir.conv2d"(%167, %arg113, %168) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x56x56x24xbf16>, tensor<144x24x1x1xbf16>, tensor<6x56x56x144xbf16>) -> tensor<6x56x56x144xbf16> loc(#loc319)
    %170 = ttir.empty() : tensor<6x56x144x56xbf16> loc(#loc320)
    %171 = "ttir.transpose"(%169, %170) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x56x56x144xbf16>, tensor<6x56x144x56xbf16>) -> tensor<6x56x144x56xbf16> loc(#loc320)
    %172 = ttir.empty() : tensor<6x144x56x56xbf16> loc(#loc321)
    %173 = "ttir.transpose"(%171, %172) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x56x144x56xbf16>, tensor<6x144x56x56xbf16>) -> tensor<6x144x56x56xbf16> loc(#loc321)
    %174 = ttir.empty() : tensor<6x144x56x56xbf16> loc(#loc16)
    %175 = "ttir.multiply"(%173, %arg13, %174) : (tensor<6x144x56x56xbf16>, tensor<1x144x1x1xbf16>, tensor<6x144x56x56xbf16>) -> tensor<6x144x56x56xbf16> loc(#loc16)
    %176 = ttir.empty() : tensor<6x144x56x56xbf16> loc(#loc17)
    %177 = "ttir.add"(%175, %arg14, %176) : (tensor<6x144x56x56xbf16>, tensor<1x144x1x1xbf16>, tensor<6x144x56x56xbf16>) -> tensor<6x144x56x56xbf16> loc(#loc17)
    %178 = ttir.empty() : tensor<6x144x56x56xbf16> loc(#loc671)
    %179 = "ttir.sigmoid"(%177, %178) : (tensor<6x144x56x56xbf16>, tensor<6x144x56x56xbf16>) -> tensor<6x144x56x56xbf16> loc(#loc671)
    %180 = ttir.empty() : tensor<6x144x56x56xbf16> loc(#loc672)
    %181 = "ttir.multiply"(%177, %179, %180) : (tensor<6x144x56x56xbf16>, tensor<6x144x56x56xbf16>, tensor<6x144x56x56xbf16>) -> tensor<6x144x56x56xbf16> loc(#loc672)
    %182 = ttir.empty() : tensor<6x56x144x56xbf16> loc(#loc323)
    %183 = "ttir.transpose"(%181, %182) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x144x56x56xbf16>, tensor<6x56x144x56xbf16>) -> tensor<6x56x144x56xbf16> loc(#loc323)
    %184 = ttir.empty() : tensor<6x56x56x144xbf16> loc(#loc324)
    %185 = "ttir.transpose"(%183, %184) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x56x144x56xbf16>, tensor<6x56x56x144xbf16>) -> tensor<6x56x56x144xbf16> loc(#loc324)
    %186 = ttir.empty() : tensor<6x56x56x144xbf16> loc(#loc325)
    %187 = "ttir.conv2d"(%185, %arg114, %186) <{dilation = array<i32: 1, 1>, groups = 144 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x56x56x144xbf16>, tensor<144x1x3x3xbf16>, tensor<6x56x56x144xbf16>) -> tensor<6x56x56x144xbf16> loc(#loc325)
    %188 = ttir.empty() : tensor<6x56x144x56xbf16> loc(#loc326)
    %189 = "ttir.transpose"(%187, %188) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x56x56x144xbf16>, tensor<6x56x144x56xbf16>) -> tensor<6x56x144x56xbf16> loc(#loc326)
    %190 = ttir.empty() : tensor<6x144x56x56xbf16> loc(#loc327)
    %191 = "ttir.transpose"(%189, %190) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x56x144x56xbf16>, tensor<6x144x56x56xbf16>) -> tensor<6x144x56x56xbf16> loc(#loc327)
    %192 = ttir.empty() : tensor<6x144x56x56xbf16> loc(#loc18)
    %193 = "ttir.multiply"(%191, %arg15, %192) : (tensor<6x144x56x56xbf16>, tensor<1x144x1x1xbf16>, tensor<6x144x56x56xbf16>) -> tensor<6x144x56x56xbf16> loc(#loc18)
    %194 = ttir.empty() : tensor<6x144x56x56xbf16> loc(#loc19)
    %195 = "ttir.add"(%193, %arg16, %194) : (tensor<6x144x56x56xbf16>, tensor<1x144x1x1xbf16>, tensor<6x144x56x56xbf16>) -> tensor<6x144x56x56xbf16> loc(#loc19)
    %196 = ttir.empty() : tensor<6x144x56x56xbf16> loc(#loc673)
    %197 = "ttir.sigmoid"(%195, %196) : (tensor<6x144x56x56xbf16>, tensor<6x144x56x56xbf16>) -> tensor<6x144x56x56xbf16> loc(#loc673)
    %198 = ttir.empty() : tensor<6x144x56x56xbf16> loc(#loc674)
    %199 = "ttir.multiply"(%195, %197, %198) : (tensor<6x144x56x56xbf16>, tensor<6x144x56x56xbf16>, tensor<6x144x56x56xbf16>) -> tensor<6x144x56x56xbf16> loc(#loc674)
    %200 = ttir.empty() : tensor<6x144x1x56xbf16> loc(#loc20)
    %201 = "ttir.mean"(%199, %200) <{dim_arg = [-2 : i32], keep_dim = true}> : (tensor<6x144x56x56xbf16>, tensor<6x144x1x56xbf16>) -> tensor<6x144x1x56xbf16> loc(#loc20)
    %202 = ttir.empty() : tensor<6x144x1x1xbf16> loc(#loc329)
    %203 = "ttir.mean"(%201, %202) <{dim_arg = [-1 : i32], keep_dim = true}> : (tensor<6x144x1x56xbf16>, tensor<6x144x1x1xbf16>) -> tensor<6x144x1x1xbf16> loc(#loc329)
    %204 = ttir.empty() : tensor<6x1x144x1xbf16> loc(#loc675)
    %205 = "ttir.transpose"(%203, %204) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x144x1x1xbf16>, tensor<6x1x144x1xbf16>) -> tensor<6x1x144x1xbf16> loc(#loc675)
    %206 = ttir.empty() : tensor<6x1x1x144xbf16> loc(#loc676)
    %207 = "ttir.transpose"(%205, %206) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x144x1xbf16>, tensor<6x1x1x144xbf16>) -> tensor<6x1x1x144xbf16> loc(#loc676)
    %208 = ttir.empty() : tensor<6x1x1x6xbf16> loc(#loc677)
    %209 = "ttir.conv2d"(%207, %arg115, %arg116, %208) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x144xbf16>, tensor<6x144x1x1xbf16>, tensor<1x1x1x6xbf16>, tensor<6x1x1x6xbf16>) -> tensor<6x1x1x6xbf16> loc(#loc677)
    %210 = ttir.empty() : tensor<6x1x6x1xbf16> loc(#loc678)
    %211 = "ttir.transpose"(%209, %210) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x6xbf16>, tensor<6x1x6x1xbf16>) -> tensor<6x1x6x1xbf16> loc(#loc678)
    %212 = ttir.empty() : tensor<6x6x1x1xbf16> loc(#loc679)
    %213 = "ttir.transpose"(%211, %212) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x6x1xbf16>, tensor<6x6x1x1xbf16>) -> tensor<6x6x1x1xbf16> loc(#loc679)
    %214 = ttir.empty() : tensor<6x6x1x1xbf16> loc(#loc680)
    %215 = "ttir.sigmoid"(%213, %214) : (tensor<6x6x1x1xbf16>, tensor<6x6x1x1xbf16>) -> tensor<6x6x1x1xbf16> loc(#loc680)
    %216 = ttir.empty() : tensor<6x6x1x1xbf16> loc(#loc681)
    %217 = "ttir.multiply"(%213, %215, %216) : (tensor<6x6x1x1xbf16>, tensor<6x6x1x1xbf16>, tensor<6x6x1x1xbf16>) -> tensor<6x6x1x1xbf16> loc(#loc681)
    %218 = ttir.empty() : tensor<6x1x6x1xbf16> loc(#loc682)
    %219 = "ttir.transpose"(%217, %218) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x6x1x1xbf16>, tensor<6x1x6x1xbf16>) -> tensor<6x1x6x1xbf16> loc(#loc682)
    %220 = ttir.empty() : tensor<6x1x1x6xbf16> loc(#loc683)
    %221 = "ttir.transpose"(%219, %220) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x6x1xbf16>, tensor<6x1x1x6xbf16>) -> tensor<6x1x1x6xbf16> loc(#loc683)
    %222 = ttir.empty() : tensor<6x1x1x144xbf16> loc(#loc684)
    %223 = "ttir.conv2d"(%221, %arg117, %arg118, %222) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x6xbf16>, tensor<144x6x1x1xbf16>, tensor<1x1x1x144xbf16>, tensor<6x1x1x144xbf16>) -> tensor<6x1x1x144xbf16> loc(#loc684)
    %224 = ttir.empty() : tensor<6x1x144x1xbf16> loc(#loc685)
    %225 = "ttir.transpose"(%223, %224) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x144xbf16>, tensor<6x1x144x1xbf16>) -> tensor<6x1x144x1xbf16> loc(#loc685)
    %226 = ttir.empty() : tensor<6x144x1x1xbf16> loc(#loc686)
    %227 = "ttir.transpose"(%225, %226) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x144x1xbf16>, tensor<6x144x1x1xbf16>) -> tensor<6x144x1x1xbf16> loc(#loc686)
    %228 = ttir.empty() : tensor<6x144x1x1xbf16> loc(#loc687)
    %229 = "ttir.sigmoid"(%227, %228) : (tensor<6x144x1x1xbf16>, tensor<6x144x1x1xbf16>) -> tensor<6x144x1x1xbf16> loc(#loc687)
    %230 = ttir.empty() : tensor<6x144x56x56xbf16> loc(#loc334)
    %231 = "ttir.multiply"(%199, %229, %230) : (tensor<6x144x56x56xbf16>, tensor<6x144x1x1xbf16>, tensor<6x144x56x56xbf16>) -> tensor<6x144x56x56xbf16> loc(#loc334)
    %232 = ttir.empty() : tensor<6x56x144x56xbf16> loc(#loc335)
    %233 = "ttir.transpose"(%231, %232) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x144x56x56xbf16>, tensor<6x56x144x56xbf16>) -> tensor<6x56x144x56xbf16> loc(#loc335)
    %234 = ttir.empty() : tensor<6x56x56x144xbf16> loc(#loc336)
    %235 = "ttir.transpose"(%233, %234) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x56x144x56xbf16>, tensor<6x56x56x144xbf16>) -> tensor<6x56x56x144xbf16> loc(#loc336)
    %236 = ttir.empty() : tensor<6x56x56x24xbf16> loc(#loc337)
    %237 = "ttir.conv2d"(%235, %arg119, %236) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x56x56x144xbf16>, tensor<24x144x1x1xbf16>, tensor<6x56x56x24xbf16>) -> tensor<6x56x56x24xbf16> loc(#loc337)
    %238 = ttir.empty() : tensor<6x56x24x56xbf16> loc(#loc338)
    %239 = "ttir.transpose"(%237, %238) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x56x56x24xbf16>, tensor<6x56x24x56xbf16>) -> tensor<6x56x24x56xbf16> loc(#loc338)
    %240 = ttir.empty() : tensor<6x24x56x56xbf16> loc(#loc339)
    %241 = "ttir.transpose"(%239, %240) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x56x24x56xbf16>, tensor<6x24x56x56xbf16>) -> tensor<6x24x56x56xbf16> loc(#loc339)
    %242 = ttir.empty() : tensor<6x24x56x56xbf16> loc(#loc21)
    %243 = "ttir.multiply"(%241, %arg17, %242) : (tensor<6x24x56x56xbf16>, tensor<1x24x1x1xbf16>, tensor<6x24x56x56xbf16>) -> tensor<6x24x56x56xbf16> loc(#loc21)
    %244 = ttir.empty() : tensor<6x24x56x56xbf16> loc(#loc22)
    %245 = "ttir.add"(%243, %arg18, %244) : (tensor<6x24x56x56xbf16>, tensor<1x24x1x1xbf16>, tensor<6x24x56x56xbf16>) -> tensor<6x24x56x56xbf16> loc(#loc22)
    %246 = ttir.empty() : tensor<6x24x56x56xbf16> loc(#loc190)
    %247 = "ttir.add"(%245, %163, %246) : (tensor<6x24x56x56xbf16>, tensor<6x24x56x56xbf16>, tensor<6x24x56x56xbf16>) -> tensor<6x24x56x56xbf16> loc(#loc190)
    %248 = ttir.empty() : tensor<6x56x24x56xbf16> loc(#loc340)
    %249 = "ttir.transpose"(%247, %248) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x24x56x56xbf16>, tensor<6x56x24x56xbf16>) -> tensor<6x56x24x56xbf16> loc(#loc340)
    %250 = ttir.empty() : tensor<6x56x56x24xbf16> loc(#loc341)
    %251 = "ttir.transpose"(%249, %250) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x56x24x56xbf16>, tensor<6x56x56x24xbf16>) -> tensor<6x56x56x24xbf16> loc(#loc341)
    %252 = ttir.empty() : tensor<6x56x56x144xbf16> loc(#loc342)
    %253 = "ttir.conv2d"(%251, %arg120, %252) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x56x56x24xbf16>, tensor<144x24x1x1xbf16>, tensor<6x56x56x144xbf16>) -> tensor<6x56x56x144xbf16> loc(#loc342)
    %254 = ttir.empty() : tensor<6x56x144x56xbf16> loc(#loc343)
    %255 = "ttir.transpose"(%253, %254) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x56x56x144xbf16>, tensor<6x56x144x56xbf16>) -> tensor<6x56x144x56xbf16> loc(#loc343)
    %256 = ttir.empty() : tensor<6x144x56x56xbf16> loc(#loc344)
    %257 = "ttir.transpose"(%255, %256) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x56x144x56xbf16>, tensor<6x144x56x56xbf16>) -> tensor<6x144x56x56xbf16> loc(#loc344)
    %258 = ttir.empty() : tensor<6x144x56x56xbf16> loc(#loc23)
    %259 = "ttir.multiply"(%257, %arg19, %258) : (tensor<6x144x56x56xbf16>, tensor<1x144x1x1xbf16>, tensor<6x144x56x56xbf16>) -> tensor<6x144x56x56xbf16> loc(#loc23)
    %260 = ttir.empty() : tensor<6x144x56x56xbf16> loc(#loc24)
    %261 = "ttir.add"(%259, %arg20, %260) : (tensor<6x144x56x56xbf16>, tensor<1x144x1x1xbf16>, tensor<6x144x56x56xbf16>) -> tensor<6x144x56x56xbf16> loc(#loc24)
    %262 = ttir.empty() : tensor<6x144x56x56xbf16> loc(#loc688)
    %263 = "ttir.sigmoid"(%261, %262) : (tensor<6x144x56x56xbf16>, tensor<6x144x56x56xbf16>) -> tensor<6x144x56x56xbf16> loc(#loc688)
    %264 = ttir.empty() : tensor<6x144x56x56xbf16> loc(#loc689)
    %265 = "ttir.multiply"(%261, %263, %264) : (tensor<6x144x56x56xbf16>, tensor<6x144x56x56xbf16>, tensor<6x144x56x56xbf16>) -> tensor<6x144x56x56xbf16> loc(#loc689)
    %266 = ttir.empty() : tensor<6x56x144x56xbf16> loc(#loc346)
    %267 = "ttir.transpose"(%265, %266) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x144x56x56xbf16>, tensor<6x56x144x56xbf16>) -> tensor<6x56x144x56xbf16> loc(#loc346)
    %268 = ttir.empty() : tensor<6x56x56x144xbf16> loc(#loc347)
    %269 = "ttir.transpose"(%267, %268) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x56x144x56xbf16>, tensor<6x56x56x144xbf16>) -> tensor<6x56x56x144xbf16> loc(#loc347)
    %270 = ttir.empty() : tensor<6x28x28x144xbf16> loc(#loc348)
    %271 = "ttir.conv2d"(%269, %arg121, %270) <{dilation = array<i32: 1, 1>, groups = 144 : i32, padding = array<i32: 2, 2, 2, 2>, stride = array<i32: 2, 2>}> {channel_last = 1 : si32} : (tensor<6x56x56x144xbf16>, tensor<144x1x5x5xbf16>, tensor<6x28x28x144xbf16>) -> tensor<6x28x28x144xbf16> loc(#loc348)
    %272 = ttir.empty() : tensor<6x28x144x28xbf16> loc(#loc349)
    %273 = "ttir.transpose"(%271, %272) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x28x28x144xbf16>, tensor<6x28x144x28xbf16>) -> tensor<6x28x144x28xbf16> loc(#loc349)
    %274 = ttir.empty() : tensor<6x144x28x28xbf16> loc(#loc350)
    %275 = "ttir.transpose"(%273, %274) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x28x144x28xbf16>, tensor<6x144x28x28xbf16>) -> tensor<6x144x28x28xbf16> loc(#loc350)
    %276 = ttir.empty() : tensor<6x144x28x28xbf16> loc(#loc25)
    %277 = "ttir.multiply"(%275, %arg21, %276) : (tensor<6x144x28x28xbf16>, tensor<1x144x1x1xbf16>, tensor<6x144x28x28xbf16>) -> tensor<6x144x28x28xbf16> loc(#loc25)
    %278 = ttir.empty() : tensor<6x144x28x28xbf16> loc(#loc26)
    %279 = "ttir.add"(%277, %arg22, %278) : (tensor<6x144x28x28xbf16>, tensor<1x144x1x1xbf16>, tensor<6x144x28x28xbf16>) -> tensor<6x144x28x28xbf16> loc(#loc26)
    %280 = ttir.empty() : tensor<6x144x28x28xbf16> loc(#loc690)
    %281 = "ttir.sigmoid"(%279, %280) : (tensor<6x144x28x28xbf16>, tensor<6x144x28x28xbf16>) -> tensor<6x144x28x28xbf16> loc(#loc690)
    %282 = ttir.empty() : tensor<6x144x28x28xbf16> loc(#loc691)
    %283 = "ttir.multiply"(%279, %281, %282) : (tensor<6x144x28x28xbf16>, tensor<6x144x28x28xbf16>, tensor<6x144x28x28xbf16>) -> tensor<6x144x28x28xbf16> loc(#loc691)
    %284 = ttir.empty() : tensor<6x144x1x28xbf16> loc(#loc27)
    %285 = "ttir.mean"(%283, %284) <{dim_arg = [-2 : i32], keep_dim = true}> : (tensor<6x144x28x28xbf16>, tensor<6x144x1x28xbf16>) -> tensor<6x144x1x28xbf16> loc(#loc27)
    %286 = ttir.empty() : tensor<6x144x1x1xbf16> loc(#loc352)
    %287 = "ttir.mean"(%285, %286) <{dim_arg = [-1 : i32], keep_dim = true}> : (tensor<6x144x1x28xbf16>, tensor<6x144x1x1xbf16>) -> tensor<6x144x1x1xbf16> loc(#loc352)
    %288 = ttir.empty() : tensor<6x1x144x1xbf16> loc(#loc692)
    %289 = "ttir.transpose"(%287, %288) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x144x1x1xbf16>, tensor<6x1x144x1xbf16>) -> tensor<6x1x144x1xbf16> loc(#loc692)
    %290 = ttir.empty() : tensor<6x1x1x144xbf16> loc(#loc693)
    %291 = "ttir.transpose"(%289, %290) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x144x1xbf16>, tensor<6x1x1x144xbf16>) -> tensor<6x1x1x144xbf16> loc(#loc693)
    %292 = ttir.empty() : tensor<6x1x1x6xbf16> loc(#loc694)
    %293 = "ttir.conv2d"(%291, %arg122, %arg123, %292) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x144xbf16>, tensor<6x144x1x1xbf16>, tensor<1x1x1x6xbf16>, tensor<6x1x1x6xbf16>) -> tensor<6x1x1x6xbf16> loc(#loc694)
    %294 = ttir.empty() : tensor<6x1x6x1xbf16> loc(#loc695)
    %295 = "ttir.transpose"(%293, %294) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x6xbf16>, tensor<6x1x6x1xbf16>) -> tensor<6x1x6x1xbf16> loc(#loc695)
    %296 = ttir.empty() : tensor<6x6x1x1xbf16> loc(#loc696)
    %297 = "ttir.transpose"(%295, %296) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x6x1xbf16>, tensor<6x6x1x1xbf16>) -> tensor<6x6x1x1xbf16> loc(#loc696)
    %298 = ttir.empty() : tensor<6x6x1x1xbf16> loc(#loc697)
    %299 = "ttir.sigmoid"(%297, %298) : (tensor<6x6x1x1xbf16>, tensor<6x6x1x1xbf16>) -> tensor<6x6x1x1xbf16> loc(#loc697)
    %300 = ttir.empty() : tensor<6x6x1x1xbf16> loc(#loc698)
    %301 = "ttir.multiply"(%297, %299, %300) : (tensor<6x6x1x1xbf16>, tensor<6x6x1x1xbf16>, tensor<6x6x1x1xbf16>) -> tensor<6x6x1x1xbf16> loc(#loc698)
    %302 = ttir.empty() : tensor<6x1x6x1xbf16> loc(#loc699)
    %303 = "ttir.transpose"(%301, %302) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x6x1x1xbf16>, tensor<6x1x6x1xbf16>) -> tensor<6x1x6x1xbf16> loc(#loc699)
    %304 = ttir.empty() : tensor<6x1x1x6xbf16> loc(#loc700)
    %305 = "ttir.transpose"(%303, %304) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x6x1xbf16>, tensor<6x1x1x6xbf16>) -> tensor<6x1x1x6xbf16> loc(#loc700)
    %306 = ttir.empty() : tensor<6x1x1x144xbf16> loc(#loc701)
    %307 = "ttir.conv2d"(%305, %arg124, %arg125, %306) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x6xbf16>, tensor<144x6x1x1xbf16>, tensor<1x1x1x144xbf16>, tensor<6x1x1x144xbf16>) -> tensor<6x1x1x144xbf16> loc(#loc701)
    %308 = ttir.empty() : tensor<6x1x144x1xbf16> loc(#loc702)
    %309 = "ttir.transpose"(%307, %308) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x144xbf16>, tensor<6x1x144x1xbf16>) -> tensor<6x1x144x1xbf16> loc(#loc702)
    %310 = ttir.empty() : tensor<6x144x1x1xbf16> loc(#loc703)
    %311 = "ttir.transpose"(%309, %310) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x144x1xbf16>, tensor<6x144x1x1xbf16>) -> tensor<6x144x1x1xbf16> loc(#loc703)
    %312 = ttir.empty() : tensor<6x144x1x1xbf16> loc(#loc704)
    %313 = "ttir.sigmoid"(%311, %312) : (tensor<6x144x1x1xbf16>, tensor<6x144x1x1xbf16>) -> tensor<6x144x1x1xbf16> loc(#loc704)
    %314 = ttir.empty() : tensor<6x144x28x28xbf16> loc(#loc357)
    %315 = "ttir.multiply"(%283, %313, %314) : (tensor<6x144x28x28xbf16>, tensor<6x144x1x1xbf16>, tensor<6x144x28x28xbf16>) -> tensor<6x144x28x28xbf16> loc(#loc357)
    %316 = ttir.empty() : tensor<6x28x144x28xbf16> loc(#loc358)
    %317 = "ttir.transpose"(%315, %316) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x144x28x28xbf16>, tensor<6x28x144x28xbf16>) -> tensor<6x28x144x28xbf16> loc(#loc358)
    %318 = ttir.empty() : tensor<6x28x28x144xbf16> loc(#loc359)
    %319 = "ttir.transpose"(%317, %318) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x28x144x28xbf16>, tensor<6x28x28x144xbf16>) -> tensor<6x28x28x144xbf16> loc(#loc359)
    %320 = ttir.empty() : tensor<6x28x28x40xbf16> loc(#loc360)
    %321 = "ttir.conv2d"(%319, %arg126, %320) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x28x28x144xbf16>, tensor<40x144x1x1xbf16>, tensor<6x28x28x40xbf16>) -> tensor<6x28x28x40xbf16> loc(#loc360)
    %322 = ttir.empty() : tensor<6x28x40x28xbf16> loc(#loc361)
    %323 = "ttir.transpose"(%321, %322) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x28x28x40xbf16>, tensor<6x28x40x28xbf16>) -> tensor<6x28x40x28xbf16> loc(#loc361)
    %324 = ttir.empty() : tensor<6x40x28x28xbf16> loc(#loc362)
    %325 = "ttir.transpose"(%323, %324) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x28x40x28xbf16>, tensor<6x40x28x28xbf16>) -> tensor<6x40x28x28xbf16> loc(#loc362)
    %326 = ttir.empty() : tensor<6x40x28x28xbf16> loc(#loc28)
    %327 = "ttir.multiply"(%325, %arg23, %326) : (tensor<6x40x28x28xbf16>, tensor<1x40x1x1xbf16>, tensor<6x40x28x28xbf16>) -> tensor<6x40x28x28xbf16> loc(#loc28)
    %328 = ttir.empty() : tensor<6x40x28x28xbf16> loc(#loc29)
    %329 = "ttir.add"(%327, %arg24, %328) : (tensor<6x40x28x28xbf16>, tensor<1x40x1x1xbf16>, tensor<6x40x28x28xbf16>) -> tensor<6x40x28x28xbf16> loc(#loc29)
    %330 = ttir.empty() : tensor<6x28x40x28xbf16> loc(#loc363)
    %331 = "ttir.transpose"(%329, %330) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x40x28x28xbf16>, tensor<6x28x40x28xbf16>) -> tensor<6x28x40x28xbf16> loc(#loc363)
    %332 = ttir.empty() : tensor<6x28x28x40xbf16> loc(#loc364)
    %333 = "ttir.transpose"(%331, %332) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x28x40x28xbf16>, tensor<6x28x28x40xbf16>) -> tensor<6x28x28x40xbf16> loc(#loc364)
    %334 = ttir.empty() : tensor<6x28x28x240xbf16> loc(#loc365)
    %335 = "ttir.conv2d"(%333, %arg127, %334) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x28x28x40xbf16>, tensor<240x40x1x1xbf16>, tensor<6x28x28x240xbf16>) -> tensor<6x28x28x240xbf16> loc(#loc365)
    %336 = ttir.empty() : tensor<6x28x240x28xbf16> loc(#loc366)
    %337 = "ttir.transpose"(%335, %336) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x28x28x240xbf16>, tensor<6x28x240x28xbf16>) -> tensor<6x28x240x28xbf16> loc(#loc366)
    %338 = ttir.empty() : tensor<6x240x28x28xbf16> loc(#loc367)
    %339 = "ttir.transpose"(%337, %338) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x28x240x28xbf16>, tensor<6x240x28x28xbf16>) -> tensor<6x240x28x28xbf16> loc(#loc367)
    %340 = ttir.empty() : tensor<6x240x28x28xbf16> loc(#loc30)
    %341 = "ttir.multiply"(%339, %arg25, %340) : (tensor<6x240x28x28xbf16>, tensor<1x240x1x1xbf16>, tensor<6x240x28x28xbf16>) -> tensor<6x240x28x28xbf16> loc(#loc30)
    %342 = ttir.empty() : tensor<6x240x28x28xbf16> loc(#loc31)
    %343 = "ttir.add"(%341, %arg26, %342) : (tensor<6x240x28x28xbf16>, tensor<1x240x1x1xbf16>, tensor<6x240x28x28xbf16>) -> tensor<6x240x28x28xbf16> loc(#loc31)
    %344 = ttir.empty() : tensor<6x240x28x28xbf16> loc(#loc705)
    %345 = "ttir.sigmoid"(%343, %344) : (tensor<6x240x28x28xbf16>, tensor<6x240x28x28xbf16>) -> tensor<6x240x28x28xbf16> loc(#loc705)
    %346 = ttir.empty() : tensor<6x240x28x28xbf16> loc(#loc706)
    %347 = "ttir.multiply"(%343, %345, %346) : (tensor<6x240x28x28xbf16>, tensor<6x240x28x28xbf16>, tensor<6x240x28x28xbf16>) -> tensor<6x240x28x28xbf16> loc(#loc706)
    %348 = ttir.empty() : tensor<6x28x240x28xbf16> loc(#loc369)
    %349 = "ttir.transpose"(%347, %348) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x240x28x28xbf16>, tensor<6x28x240x28xbf16>) -> tensor<6x28x240x28xbf16> loc(#loc369)
    %350 = ttir.empty() : tensor<6x28x28x240xbf16> loc(#loc370)
    %351 = "ttir.transpose"(%349, %350) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x28x240x28xbf16>, tensor<6x28x28x240xbf16>) -> tensor<6x28x28x240xbf16> loc(#loc370)
    %352 = ttir.empty() : tensor<6x28x28x240xbf16> loc(#loc371)
    %353 = "ttir.conv2d"(%351, %arg128, %352) <{dilation = array<i32: 1, 1>, groups = 240 : i32, padding = array<i32: 2, 2, 2, 2>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x28x28x240xbf16>, tensor<240x1x5x5xbf16>, tensor<6x28x28x240xbf16>) -> tensor<6x28x28x240xbf16> loc(#loc371)
    %354 = ttir.empty() : tensor<6x28x240x28xbf16> loc(#loc372)
    %355 = "ttir.transpose"(%353, %354) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x28x28x240xbf16>, tensor<6x28x240x28xbf16>) -> tensor<6x28x240x28xbf16> loc(#loc372)
    %356 = ttir.empty() : tensor<6x240x28x28xbf16> loc(#loc373)
    %357 = "ttir.transpose"(%355, %356) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x28x240x28xbf16>, tensor<6x240x28x28xbf16>) -> tensor<6x240x28x28xbf16> loc(#loc373)
    %358 = ttir.empty() : tensor<6x240x28x28xbf16> loc(#loc32)
    %359 = "ttir.multiply"(%357, %arg27, %358) : (tensor<6x240x28x28xbf16>, tensor<1x240x1x1xbf16>, tensor<6x240x28x28xbf16>) -> tensor<6x240x28x28xbf16> loc(#loc32)
    %360 = ttir.empty() : tensor<6x240x28x28xbf16> loc(#loc33)
    %361 = "ttir.add"(%359, %arg28, %360) : (tensor<6x240x28x28xbf16>, tensor<1x240x1x1xbf16>, tensor<6x240x28x28xbf16>) -> tensor<6x240x28x28xbf16> loc(#loc33)
    %362 = ttir.empty() : tensor<6x240x28x28xbf16> loc(#loc707)
    %363 = "ttir.sigmoid"(%361, %362) : (tensor<6x240x28x28xbf16>, tensor<6x240x28x28xbf16>) -> tensor<6x240x28x28xbf16> loc(#loc707)
    %364 = ttir.empty() : tensor<6x240x28x28xbf16> loc(#loc708)
    %365 = "ttir.multiply"(%361, %363, %364) : (tensor<6x240x28x28xbf16>, tensor<6x240x28x28xbf16>, tensor<6x240x28x28xbf16>) -> tensor<6x240x28x28xbf16> loc(#loc708)
    %366 = ttir.empty() : tensor<6x240x1x28xbf16> loc(#loc34)
    %367 = "ttir.mean"(%365, %366) <{dim_arg = [-2 : i32], keep_dim = true}> : (tensor<6x240x28x28xbf16>, tensor<6x240x1x28xbf16>) -> tensor<6x240x1x28xbf16> loc(#loc34)
    %368 = ttir.empty() : tensor<6x240x1x1xbf16> loc(#loc375)
    %369 = "ttir.mean"(%367, %368) <{dim_arg = [-1 : i32], keep_dim = true}> : (tensor<6x240x1x28xbf16>, tensor<6x240x1x1xbf16>) -> tensor<6x240x1x1xbf16> loc(#loc375)
    %370 = ttir.empty() : tensor<6x1x240x1xbf16> loc(#loc709)
    %371 = "ttir.transpose"(%369, %370) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x240x1x1xbf16>, tensor<6x1x240x1xbf16>) -> tensor<6x1x240x1xbf16> loc(#loc709)
    %372 = ttir.empty() : tensor<6x1x1x240xbf16> loc(#loc710)
    %373 = "ttir.transpose"(%371, %372) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x240x1xbf16>, tensor<6x1x1x240xbf16>) -> tensor<6x1x1x240xbf16> loc(#loc710)
    %374 = ttir.empty() : tensor<6x1x1x10xbf16> loc(#loc711)
    %375 = "ttir.conv2d"(%373, %arg129, %arg130, %374) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x240xbf16>, tensor<10x240x1x1xbf16>, tensor<1x1x1x10xbf16>, tensor<6x1x1x10xbf16>) -> tensor<6x1x1x10xbf16> loc(#loc711)
    %376 = ttir.empty() : tensor<6x1x10x1xbf16> loc(#loc712)
    %377 = "ttir.transpose"(%375, %376) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x10xbf16>, tensor<6x1x10x1xbf16>) -> tensor<6x1x10x1xbf16> loc(#loc712)
    %378 = ttir.empty() : tensor<6x10x1x1xbf16> loc(#loc713)
    %379 = "ttir.transpose"(%377, %378) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x10x1xbf16>, tensor<6x10x1x1xbf16>) -> tensor<6x10x1x1xbf16> loc(#loc713)
    %380 = ttir.empty() : tensor<6x10x1x1xbf16> loc(#loc714)
    %381 = "ttir.sigmoid"(%379, %380) : (tensor<6x10x1x1xbf16>, tensor<6x10x1x1xbf16>) -> tensor<6x10x1x1xbf16> loc(#loc714)
    %382 = ttir.empty() : tensor<6x10x1x1xbf16> loc(#loc715)
    %383 = "ttir.multiply"(%379, %381, %382) : (tensor<6x10x1x1xbf16>, tensor<6x10x1x1xbf16>, tensor<6x10x1x1xbf16>) -> tensor<6x10x1x1xbf16> loc(#loc715)
    %384 = ttir.empty() : tensor<6x1x10x1xbf16> loc(#loc716)
    %385 = "ttir.transpose"(%383, %384) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x10x1x1xbf16>, tensor<6x1x10x1xbf16>) -> tensor<6x1x10x1xbf16> loc(#loc716)
    %386 = ttir.empty() : tensor<6x1x1x10xbf16> loc(#loc717)
    %387 = "ttir.transpose"(%385, %386) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x10x1xbf16>, tensor<6x1x1x10xbf16>) -> tensor<6x1x1x10xbf16> loc(#loc717)
    %388 = ttir.empty() : tensor<6x1x1x240xbf16> loc(#loc718)
    %389 = "ttir.conv2d"(%387, %arg131, %arg132, %388) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x10xbf16>, tensor<240x10x1x1xbf16>, tensor<1x1x1x240xbf16>, tensor<6x1x1x240xbf16>) -> tensor<6x1x1x240xbf16> loc(#loc718)
    %390 = ttir.empty() : tensor<6x1x240x1xbf16> loc(#loc719)
    %391 = "ttir.transpose"(%389, %390) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x240xbf16>, tensor<6x1x240x1xbf16>) -> tensor<6x1x240x1xbf16> loc(#loc719)
    %392 = ttir.empty() : tensor<6x240x1x1xbf16> loc(#loc720)
    %393 = "ttir.transpose"(%391, %392) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x240x1xbf16>, tensor<6x240x1x1xbf16>) -> tensor<6x240x1x1xbf16> loc(#loc720)
    %394 = ttir.empty() : tensor<6x240x1x1xbf16> loc(#loc721)
    %395 = "ttir.sigmoid"(%393, %394) : (tensor<6x240x1x1xbf16>, tensor<6x240x1x1xbf16>) -> tensor<6x240x1x1xbf16> loc(#loc721)
    %396 = ttir.empty() : tensor<6x240x28x28xbf16> loc(#loc380)
    %397 = "ttir.multiply"(%365, %395, %396) : (tensor<6x240x28x28xbf16>, tensor<6x240x1x1xbf16>, tensor<6x240x28x28xbf16>) -> tensor<6x240x28x28xbf16> loc(#loc380)
    %398 = ttir.empty() : tensor<6x28x240x28xbf16> loc(#loc381)
    %399 = "ttir.transpose"(%397, %398) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x240x28x28xbf16>, tensor<6x28x240x28xbf16>) -> tensor<6x28x240x28xbf16> loc(#loc381)
    %400 = ttir.empty() : tensor<6x28x28x240xbf16> loc(#loc382)
    %401 = "ttir.transpose"(%399, %400) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x28x240x28xbf16>, tensor<6x28x28x240xbf16>) -> tensor<6x28x28x240xbf16> loc(#loc382)
    %402 = ttir.empty() : tensor<6x28x28x40xbf16> loc(#loc383)
    %403 = "ttir.conv2d"(%401, %arg133, %402) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x28x28x240xbf16>, tensor<40x240x1x1xbf16>, tensor<6x28x28x40xbf16>) -> tensor<6x28x28x40xbf16> loc(#loc383)
    %404 = ttir.empty() : tensor<6x28x40x28xbf16> loc(#loc384)
    %405 = "ttir.transpose"(%403, %404) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x28x28x40xbf16>, tensor<6x28x40x28xbf16>) -> tensor<6x28x40x28xbf16> loc(#loc384)
    %406 = ttir.empty() : tensor<6x40x28x28xbf16> loc(#loc385)
    %407 = "ttir.transpose"(%405, %406) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x28x40x28xbf16>, tensor<6x40x28x28xbf16>) -> tensor<6x40x28x28xbf16> loc(#loc385)
    %408 = ttir.empty() : tensor<6x40x28x28xbf16> loc(#loc35)
    %409 = "ttir.multiply"(%407, %arg29, %408) : (tensor<6x40x28x28xbf16>, tensor<1x40x1x1xbf16>, tensor<6x40x28x28xbf16>) -> tensor<6x40x28x28xbf16> loc(#loc35)
    %410 = ttir.empty() : tensor<6x40x28x28xbf16> loc(#loc36)
    %411 = "ttir.add"(%409, %arg30, %410) : (tensor<6x40x28x28xbf16>, tensor<1x40x1x1xbf16>, tensor<6x40x28x28xbf16>) -> tensor<6x40x28x28xbf16> loc(#loc36)
    %412 = ttir.empty() : tensor<6x40x28x28xbf16> loc(#loc203)
    %413 = "ttir.add"(%411, %329, %412) : (tensor<6x40x28x28xbf16>, tensor<6x40x28x28xbf16>, tensor<6x40x28x28xbf16>) -> tensor<6x40x28x28xbf16> loc(#loc203)
    %414 = ttir.empty() : tensor<6x28x40x28xbf16> loc(#loc386)
    %415 = "ttir.transpose"(%413, %414) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x40x28x28xbf16>, tensor<6x28x40x28xbf16>) -> tensor<6x28x40x28xbf16> loc(#loc386)
    %416 = ttir.empty() : tensor<6x28x28x40xbf16> loc(#loc387)
    %417 = "ttir.transpose"(%415, %416) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x28x40x28xbf16>, tensor<6x28x28x40xbf16>) -> tensor<6x28x28x40xbf16> loc(#loc387)
    %418 = ttir.empty() : tensor<6x28x28x240xbf16> loc(#loc388)
    %419 = "ttir.conv2d"(%417, %arg134, %418) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x28x28x40xbf16>, tensor<240x40x1x1xbf16>, tensor<6x28x28x240xbf16>) -> tensor<6x28x28x240xbf16> loc(#loc388)
    %420 = ttir.empty() : tensor<6x28x240x28xbf16> loc(#loc389)
    %421 = "ttir.transpose"(%419, %420) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x28x28x240xbf16>, tensor<6x28x240x28xbf16>) -> tensor<6x28x240x28xbf16> loc(#loc389)
    %422 = ttir.empty() : tensor<6x240x28x28xbf16> loc(#loc390)
    %423 = "ttir.transpose"(%421, %422) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x28x240x28xbf16>, tensor<6x240x28x28xbf16>) -> tensor<6x240x28x28xbf16> loc(#loc390)
    %424 = ttir.empty() : tensor<6x240x28x28xbf16> loc(#loc37)
    %425 = "ttir.multiply"(%423, %arg31, %424) : (tensor<6x240x28x28xbf16>, tensor<1x240x1x1xbf16>, tensor<6x240x28x28xbf16>) -> tensor<6x240x28x28xbf16> loc(#loc37)
    %426 = ttir.empty() : tensor<6x240x28x28xbf16> loc(#loc38)
    %427 = "ttir.add"(%425, %arg32, %426) : (tensor<6x240x28x28xbf16>, tensor<1x240x1x1xbf16>, tensor<6x240x28x28xbf16>) -> tensor<6x240x28x28xbf16> loc(#loc38)
    %428 = ttir.empty() : tensor<6x240x28x28xbf16> loc(#loc722)
    %429 = "ttir.sigmoid"(%427, %428) : (tensor<6x240x28x28xbf16>, tensor<6x240x28x28xbf16>) -> tensor<6x240x28x28xbf16> loc(#loc722)
    %430 = ttir.empty() : tensor<6x240x28x28xbf16> loc(#loc723)
    %431 = "ttir.multiply"(%427, %429, %430) : (tensor<6x240x28x28xbf16>, tensor<6x240x28x28xbf16>, tensor<6x240x28x28xbf16>) -> tensor<6x240x28x28xbf16> loc(#loc723)
    %432 = ttir.empty() : tensor<6x28x240x28xbf16> loc(#loc392)
    %433 = "ttir.transpose"(%431, %432) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x240x28x28xbf16>, tensor<6x28x240x28xbf16>) -> tensor<6x28x240x28xbf16> loc(#loc392)
    %434 = ttir.empty() : tensor<6x28x28x240xbf16> loc(#loc393)
    %435 = "ttir.transpose"(%433, %434) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x28x240x28xbf16>, tensor<6x28x28x240xbf16>) -> tensor<6x28x28x240xbf16> loc(#loc393)
    %436 = ttir.empty() : tensor<6x14x14x240xbf16> loc(#loc394)
    %437 = "ttir.conv2d"(%435, %arg135, %436) <{dilation = array<i32: 1, 1>, groups = 240 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 2, 2>}> {channel_last = 1 : si32} : (tensor<6x28x28x240xbf16>, tensor<240x1x3x3xbf16>, tensor<6x14x14x240xbf16>) -> tensor<6x14x14x240xbf16> loc(#loc394)
    %438 = ttir.empty() : tensor<6x14x240x14xbf16> loc(#loc395)
    %439 = "ttir.transpose"(%437, %438) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x14x240xbf16>, tensor<6x14x240x14xbf16>) -> tensor<6x14x240x14xbf16> loc(#loc395)
    %440 = ttir.empty() : tensor<6x240x14x14xbf16> loc(#loc396)
    %441 = "ttir.transpose"(%439, %440) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x14x240x14xbf16>, tensor<6x240x14x14xbf16>) -> tensor<6x240x14x14xbf16> loc(#loc396)
    %442 = ttir.empty() : tensor<6x240x14x14xbf16> loc(#loc39)
    %443 = "ttir.multiply"(%441, %arg33, %442) : (tensor<6x240x14x14xbf16>, tensor<1x240x1x1xbf16>, tensor<6x240x14x14xbf16>) -> tensor<6x240x14x14xbf16> loc(#loc39)
    %444 = ttir.empty() : tensor<6x240x14x14xbf16> loc(#loc40)
    %445 = "ttir.add"(%443, %arg34, %444) : (tensor<6x240x14x14xbf16>, tensor<1x240x1x1xbf16>, tensor<6x240x14x14xbf16>) -> tensor<6x240x14x14xbf16> loc(#loc40)
    %446 = ttir.empty() : tensor<6x240x14x14xbf16> loc(#loc724)
    %447 = "ttir.sigmoid"(%445, %446) : (tensor<6x240x14x14xbf16>, tensor<6x240x14x14xbf16>) -> tensor<6x240x14x14xbf16> loc(#loc724)
    %448 = ttir.empty() : tensor<6x240x14x14xbf16> loc(#loc725)
    %449 = "ttir.multiply"(%445, %447, %448) : (tensor<6x240x14x14xbf16>, tensor<6x240x14x14xbf16>, tensor<6x240x14x14xbf16>) -> tensor<6x240x14x14xbf16> loc(#loc725)
    %450 = ttir.empty() : tensor<6x240x1x14xbf16> loc(#loc41)
    %451 = "ttir.mean"(%449, %450) <{dim_arg = [-2 : i32], keep_dim = true}> : (tensor<6x240x14x14xbf16>, tensor<6x240x1x14xbf16>) -> tensor<6x240x1x14xbf16> loc(#loc41)
    %452 = ttir.empty() : tensor<6x240x1x1xbf16> loc(#loc398)
    %453 = "ttir.mean"(%451, %452) <{dim_arg = [-1 : i32], keep_dim = true}> : (tensor<6x240x1x14xbf16>, tensor<6x240x1x1xbf16>) -> tensor<6x240x1x1xbf16> loc(#loc398)
    %454 = ttir.empty() : tensor<6x1x240x1xbf16> loc(#loc726)
    %455 = "ttir.transpose"(%453, %454) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x240x1x1xbf16>, tensor<6x1x240x1xbf16>) -> tensor<6x1x240x1xbf16> loc(#loc726)
    %456 = ttir.empty() : tensor<6x1x1x240xbf16> loc(#loc727)
    %457 = "ttir.transpose"(%455, %456) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x240x1xbf16>, tensor<6x1x1x240xbf16>) -> tensor<6x1x1x240xbf16> loc(#loc727)
    %458 = ttir.empty() : tensor<6x1x1x10xbf16> loc(#loc728)
    %459 = "ttir.conv2d"(%457, %arg136, %arg137, %458) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x240xbf16>, tensor<10x240x1x1xbf16>, tensor<1x1x1x10xbf16>, tensor<6x1x1x10xbf16>) -> tensor<6x1x1x10xbf16> loc(#loc728)
    %460 = ttir.empty() : tensor<6x1x10x1xbf16> loc(#loc729)
    %461 = "ttir.transpose"(%459, %460) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x10xbf16>, tensor<6x1x10x1xbf16>) -> tensor<6x1x10x1xbf16> loc(#loc729)
    %462 = ttir.empty() : tensor<6x10x1x1xbf16> loc(#loc730)
    %463 = "ttir.transpose"(%461, %462) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x10x1xbf16>, tensor<6x10x1x1xbf16>) -> tensor<6x10x1x1xbf16> loc(#loc730)
    %464 = ttir.empty() : tensor<6x10x1x1xbf16> loc(#loc731)
    %465 = "ttir.sigmoid"(%463, %464) : (tensor<6x10x1x1xbf16>, tensor<6x10x1x1xbf16>) -> tensor<6x10x1x1xbf16> loc(#loc731)
    %466 = ttir.empty() : tensor<6x10x1x1xbf16> loc(#loc732)
    %467 = "ttir.multiply"(%463, %465, %466) : (tensor<6x10x1x1xbf16>, tensor<6x10x1x1xbf16>, tensor<6x10x1x1xbf16>) -> tensor<6x10x1x1xbf16> loc(#loc732)
    %468 = ttir.empty() : tensor<6x1x10x1xbf16> loc(#loc733)
    %469 = "ttir.transpose"(%467, %468) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x10x1x1xbf16>, tensor<6x1x10x1xbf16>) -> tensor<6x1x10x1xbf16> loc(#loc733)
    %470 = ttir.empty() : tensor<6x1x1x10xbf16> loc(#loc734)
    %471 = "ttir.transpose"(%469, %470) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x10x1xbf16>, tensor<6x1x1x10xbf16>) -> tensor<6x1x1x10xbf16> loc(#loc734)
    %472 = ttir.empty() : tensor<6x1x1x240xbf16> loc(#loc735)
    %473 = "ttir.conv2d"(%471, %arg138, %arg139, %472) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x10xbf16>, tensor<240x10x1x1xbf16>, tensor<1x1x1x240xbf16>, tensor<6x1x1x240xbf16>) -> tensor<6x1x1x240xbf16> loc(#loc735)
    %474 = ttir.empty() : tensor<6x1x240x1xbf16> loc(#loc736)
    %475 = "ttir.transpose"(%473, %474) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x240xbf16>, tensor<6x1x240x1xbf16>) -> tensor<6x1x240x1xbf16> loc(#loc736)
    %476 = ttir.empty() : tensor<6x240x1x1xbf16> loc(#loc737)
    %477 = "ttir.transpose"(%475, %476) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x240x1xbf16>, tensor<6x240x1x1xbf16>) -> tensor<6x240x1x1xbf16> loc(#loc737)
    %478 = ttir.empty() : tensor<6x240x1x1xbf16> loc(#loc738)
    %479 = "ttir.sigmoid"(%477, %478) : (tensor<6x240x1x1xbf16>, tensor<6x240x1x1xbf16>) -> tensor<6x240x1x1xbf16> loc(#loc738)
    %480 = ttir.empty() : tensor<6x240x14x14xbf16> loc(#loc403)
    %481 = "ttir.multiply"(%449, %479, %480) : (tensor<6x240x14x14xbf16>, tensor<6x240x1x1xbf16>, tensor<6x240x14x14xbf16>) -> tensor<6x240x14x14xbf16> loc(#loc403)
    %482 = ttir.empty() : tensor<6x14x240x14xbf16> loc(#loc404)
    %483 = "ttir.transpose"(%481, %482) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x240x14x14xbf16>, tensor<6x14x240x14xbf16>) -> tensor<6x14x240x14xbf16> loc(#loc404)
    %484 = ttir.empty() : tensor<6x14x14x240xbf16> loc(#loc405)
    %485 = "ttir.transpose"(%483, %484) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x240x14xbf16>, tensor<6x14x14x240xbf16>) -> tensor<6x14x14x240xbf16> loc(#loc405)
    %486 = ttir.empty() : tensor<6x14x14x80xbf16> loc(#loc406)
    %487 = "ttir.conv2d"(%485, %arg140, %486) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x14x14x240xbf16>, tensor<80x240x1x1xbf16>, tensor<6x14x14x80xbf16>) -> tensor<6x14x14x80xbf16> loc(#loc406)
    %488 = ttir.empty() : tensor<6x14x80x14xbf16> loc(#loc407)
    %489 = "ttir.transpose"(%487, %488) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x14x80xbf16>, tensor<6x14x80x14xbf16>) -> tensor<6x14x80x14xbf16> loc(#loc407)
    %490 = ttir.empty() : tensor<6x80x14x14xbf16> loc(#loc408)
    %491 = "ttir.transpose"(%489, %490) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x14x80x14xbf16>, tensor<6x80x14x14xbf16>) -> tensor<6x80x14x14xbf16> loc(#loc408)
    %492 = ttir.empty() : tensor<6x80x14x14xbf16> loc(#loc42)
    %493 = "ttir.multiply"(%491, %arg35, %492) : (tensor<6x80x14x14xbf16>, tensor<1x80x1x1xbf16>, tensor<6x80x14x14xbf16>) -> tensor<6x80x14x14xbf16> loc(#loc42)
    %494 = ttir.empty() : tensor<6x80x14x14xbf16> loc(#loc43)
    %495 = "ttir.add"(%493, %arg36, %494) : (tensor<6x80x14x14xbf16>, tensor<1x80x1x1xbf16>, tensor<6x80x14x14xbf16>) -> tensor<6x80x14x14xbf16> loc(#loc43)
    %496 = ttir.empty() : tensor<6x14x80x14xbf16> loc(#loc409)
    %497 = "ttir.transpose"(%495, %496) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x80x14x14xbf16>, tensor<6x14x80x14xbf16>) -> tensor<6x14x80x14xbf16> loc(#loc409)
    %498 = ttir.empty() : tensor<6x14x14x80xbf16> loc(#loc410)
    %499 = "ttir.transpose"(%497, %498) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x80x14xbf16>, tensor<6x14x14x80xbf16>) -> tensor<6x14x14x80xbf16> loc(#loc410)
    %500 = ttir.empty() : tensor<6x14x14x480xbf16> loc(#loc411)
    %501 = "ttir.conv2d"(%499, %arg141, %500) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x14x14x80xbf16>, tensor<480x80x1x1xbf16>, tensor<6x14x14x480xbf16>) -> tensor<6x14x14x480xbf16> loc(#loc411)
    %502 = ttir.empty() : tensor<6x14x480x14xbf16> loc(#loc412)
    %503 = "ttir.transpose"(%501, %502) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x14x480xbf16>, tensor<6x14x480x14xbf16>) -> tensor<6x14x480x14xbf16> loc(#loc412)
    %504 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc413)
    %505 = "ttir.transpose"(%503, %504) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x14x480x14xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc413)
    %506 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc44)
    %507 = "ttir.multiply"(%505, %arg37, %506) : (tensor<6x480x14x14xbf16>, tensor<1x480x1x1xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc44)
    %508 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc45)
    %509 = "ttir.add"(%507, %arg38, %508) : (tensor<6x480x14x14xbf16>, tensor<1x480x1x1xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc45)
    %510 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc739)
    %511 = "ttir.sigmoid"(%509, %510) : (tensor<6x480x14x14xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc739)
    %512 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc740)
    %513 = "ttir.multiply"(%509, %511, %512) : (tensor<6x480x14x14xbf16>, tensor<6x480x14x14xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc740)
    %514 = ttir.empty() : tensor<6x14x480x14xbf16> loc(#loc415)
    %515 = "ttir.transpose"(%513, %514) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x480x14x14xbf16>, tensor<6x14x480x14xbf16>) -> tensor<6x14x480x14xbf16> loc(#loc415)
    %516 = ttir.empty() : tensor<6x14x14x480xbf16> loc(#loc416)
    %517 = "ttir.transpose"(%515, %516) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x480x14xbf16>, tensor<6x14x14x480xbf16>) -> tensor<6x14x14x480xbf16> loc(#loc416)
    %518 = ttir.empty() : tensor<6x14x14x480xbf16> loc(#loc417)
    %519 = "ttir.conv2d"(%517, %arg142, %518) <{dilation = array<i32: 1, 1>, groups = 480 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x14x14x480xbf16>, tensor<480x1x3x3xbf16>, tensor<6x14x14x480xbf16>) -> tensor<6x14x14x480xbf16> loc(#loc417)
    %520 = ttir.empty() : tensor<6x14x480x14xbf16> loc(#loc418)
    %521 = "ttir.transpose"(%519, %520) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x14x480xbf16>, tensor<6x14x480x14xbf16>) -> tensor<6x14x480x14xbf16> loc(#loc418)
    %522 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc419)
    %523 = "ttir.transpose"(%521, %522) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x14x480x14xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc419)
    %524 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc46)
    %525 = "ttir.multiply"(%523, %arg39, %524) : (tensor<6x480x14x14xbf16>, tensor<1x480x1x1xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc46)
    %526 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc47)
    %527 = "ttir.add"(%525, %arg40, %526) : (tensor<6x480x14x14xbf16>, tensor<1x480x1x1xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc47)
    %528 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc741)
    %529 = "ttir.sigmoid"(%527, %528) : (tensor<6x480x14x14xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc741)
    %530 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc742)
    %531 = "ttir.multiply"(%527, %529, %530) : (tensor<6x480x14x14xbf16>, tensor<6x480x14x14xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc742)
    %532 = ttir.empty() : tensor<6x480x1x14xbf16> loc(#loc48)
    %533 = "ttir.mean"(%531, %532) <{dim_arg = [-2 : i32], keep_dim = true}> : (tensor<6x480x14x14xbf16>, tensor<6x480x1x14xbf16>) -> tensor<6x480x1x14xbf16> loc(#loc48)
    %534 = ttir.empty() : tensor<6x480x1x1xbf16> loc(#loc421)
    %535 = "ttir.mean"(%533, %534) <{dim_arg = [-1 : i32], keep_dim = true}> : (tensor<6x480x1x14xbf16>, tensor<6x480x1x1xbf16>) -> tensor<6x480x1x1xbf16> loc(#loc421)
    %536 = ttir.empty() : tensor<6x1x480x1xbf16> loc(#loc743)
    %537 = "ttir.transpose"(%535, %536) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x480x1x1xbf16>, tensor<6x1x480x1xbf16>) -> tensor<6x1x480x1xbf16> loc(#loc743)
    %538 = ttir.empty() : tensor<6x1x1x480xbf16> loc(#loc744)
    %539 = "ttir.transpose"(%537, %538) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x480x1xbf16>, tensor<6x1x1x480xbf16>) -> tensor<6x1x1x480xbf16> loc(#loc744)
    %540 = ttir.empty() : tensor<6x1x1x20xbf16> loc(#loc745)
    %541 = "ttir.conv2d"(%539, %arg143, %arg144, %540) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x480xbf16>, tensor<20x480x1x1xbf16>, tensor<1x1x1x20xbf16>, tensor<6x1x1x20xbf16>) -> tensor<6x1x1x20xbf16> loc(#loc745)
    %542 = ttir.empty() : tensor<6x1x20x1xbf16> loc(#loc746)
    %543 = "ttir.transpose"(%541, %542) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x20xbf16>, tensor<6x1x20x1xbf16>) -> tensor<6x1x20x1xbf16> loc(#loc746)
    %544 = ttir.empty() : tensor<6x20x1x1xbf16> loc(#loc747)
    %545 = "ttir.transpose"(%543, %544) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x20x1xbf16>, tensor<6x20x1x1xbf16>) -> tensor<6x20x1x1xbf16> loc(#loc747)
    %546 = ttir.empty() : tensor<6x20x1x1xbf16> loc(#loc748)
    %547 = "ttir.sigmoid"(%545, %546) : (tensor<6x20x1x1xbf16>, tensor<6x20x1x1xbf16>) -> tensor<6x20x1x1xbf16> loc(#loc748)
    %548 = ttir.empty() : tensor<6x20x1x1xbf16> loc(#loc749)
    %549 = "ttir.multiply"(%545, %547, %548) : (tensor<6x20x1x1xbf16>, tensor<6x20x1x1xbf16>, tensor<6x20x1x1xbf16>) -> tensor<6x20x1x1xbf16> loc(#loc749)
    %550 = ttir.empty() : tensor<6x1x20x1xbf16> loc(#loc750)
    %551 = "ttir.transpose"(%549, %550) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x20x1x1xbf16>, tensor<6x1x20x1xbf16>) -> tensor<6x1x20x1xbf16> loc(#loc750)
    %552 = ttir.empty() : tensor<6x1x1x20xbf16> loc(#loc751)
    %553 = "ttir.transpose"(%551, %552) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x20x1xbf16>, tensor<6x1x1x20xbf16>) -> tensor<6x1x1x20xbf16> loc(#loc751)
    %554 = ttir.empty() : tensor<6x1x1x480xbf16> loc(#loc752)
    %555 = "ttir.conv2d"(%553, %arg145, %arg146, %554) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x20xbf16>, tensor<480x20x1x1xbf16>, tensor<1x1x1x480xbf16>, tensor<6x1x1x480xbf16>) -> tensor<6x1x1x480xbf16> loc(#loc752)
    %556 = ttir.empty() : tensor<6x1x480x1xbf16> loc(#loc753)
    %557 = "ttir.transpose"(%555, %556) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x480xbf16>, tensor<6x1x480x1xbf16>) -> tensor<6x1x480x1xbf16> loc(#loc753)
    %558 = ttir.empty() : tensor<6x480x1x1xbf16> loc(#loc754)
    %559 = "ttir.transpose"(%557, %558) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x480x1xbf16>, tensor<6x480x1x1xbf16>) -> tensor<6x480x1x1xbf16> loc(#loc754)
    %560 = ttir.empty() : tensor<6x480x1x1xbf16> loc(#loc755)
    %561 = "ttir.sigmoid"(%559, %560) : (tensor<6x480x1x1xbf16>, tensor<6x480x1x1xbf16>) -> tensor<6x480x1x1xbf16> loc(#loc755)
    %562 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc426)
    %563 = "ttir.multiply"(%531, %561, %562) : (tensor<6x480x14x14xbf16>, tensor<6x480x1x1xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc426)
    %564 = ttir.empty() : tensor<6x14x480x14xbf16> loc(#loc427)
    %565 = "ttir.transpose"(%563, %564) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x480x14x14xbf16>, tensor<6x14x480x14xbf16>) -> tensor<6x14x480x14xbf16> loc(#loc427)
    %566 = ttir.empty() : tensor<6x14x14x480xbf16> loc(#loc428)
    %567 = "ttir.transpose"(%565, %566) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x480x14xbf16>, tensor<6x14x14x480xbf16>) -> tensor<6x14x14x480xbf16> loc(#loc428)
    %568 = ttir.empty() : tensor<6x14x14x80xbf16> loc(#loc429)
    %569 = "ttir.conv2d"(%567, %arg147, %568) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x14x14x480xbf16>, tensor<80x480x1x1xbf16>, tensor<6x14x14x80xbf16>) -> tensor<6x14x14x80xbf16> loc(#loc429)
    %570 = ttir.empty() : tensor<6x14x80x14xbf16> loc(#loc430)
    %571 = "ttir.transpose"(%569, %570) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x14x80xbf16>, tensor<6x14x80x14xbf16>) -> tensor<6x14x80x14xbf16> loc(#loc430)
    %572 = ttir.empty() : tensor<6x80x14x14xbf16> loc(#loc431)
    %573 = "ttir.transpose"(%571, %572) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x14x80x14xbf16>, tensor<6x80x14x14xbf16>) -> tensor<6x80x14x14xbf16> loc(#loc431)
    %574 = ttir.empty() : tensor<6x80x14x14xbf16> loc(#loc49)
    %575 = "ttir.multiply"(%573, %arg41, %574) : (tensor<6x80x14x14xbf16>, tensor<1x80x1x1xbf16>, tensor<6x80x14x14xbf16>) -> tensor<6x80x14x14xbf16> loc(#loc49)
    %576 = ttir.empty() : tensor<6x80x14x14xbf16> loc(#loc50)
    %577 = "ttir.add"(%575, %arg42, %576) : (tensor<6x80x14x14xbf16>, tensor<1x80x1x1xbf16>, tensor<6x80x14x14xbf16>) -> tensor<6x80x14x14xbf16> loc(#loc50)
    %578 = ttir.empty() : tensor<6x80x14x14xbf16> loc(#loc216)
    %579 = "ttir.add"(%577, %495, %578) : (tensor<6x80x14x14xbf16>, tensor<6x80x14x14xbf16>, tensor<6x80x14x14xbf16>) -> tensor<6x80x14x14xbf16> loc(#loc216)
    %580 = ttir.empty() : tensor<6x14x80x14xbf16> loc(#loc432)
    %581 = "ttir.transpose"(%579, %580) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x80x14x14xbf16>, tensor<6x14x80x14xbf16>) -> tensor<6x14x80x14xbf16> loc(#loc432)
    %582 = ttir.empty() : tensor<6x14x14x80xbf16> loc(#loc433)
    %583 = "ttir.transpose"(%581, %582) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x80x14xbf16>, tensor<6x14x14x80xbf16>) -> tensor<6x14x14x80xbf16> loc(#loc433)
    %584 = ttir.empty() : tensor<6x14x14x480xbf16> loc(#loc434)
    %585 = "ttir.conv2d"(%583, %arg148, %584) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x14x14x80xbf16>, tensor<480x80x1x1xbf16>, tensor<6x14x14x480xbf16>) -> tensor<6x14x14x480xbf16> loc(#loc434)
    %586 = ttir.empty() : tensor<6x14x480x14xbf16> loc(#loc435)
    %587 = "ttir.transpose"(%585, %586) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x14x480xbf16>, tensor<6x14x480x14xbf16>) -> tensor<6x14x480x14xbf16> loc(#loc435)
    %588 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc436)
    %589 = "ttir.transpose"(%587, %588) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x14x480x14xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc436)
    %590 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc51)
    %591 = "ttir.multiply"(%589, %arg43, %590) : (tensor<6x480x14x14xbf16>, tensor<1x480x1x1xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc51)
    %592 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc52)
    %593 = "ttir.add"(%591, %arg44, %592) : (tensor<6x480x14x14xbf16>, tensor<1x480x1x1xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc52)
    %594 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc756)
    %595 = "ttir.sigmoid"(%593, %594) : (tensor<6x480x14x14xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc756)
    %596 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc757)
    %597 = "ttir.multiply"(%593, %595, %596) : (tensor<6x480x14x14xbf16>, tensor<6x480x14x14xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc757)
    %598 = ttir.empty() : tensor<6x14x480x14xbf16> loc(#loc438)
    %599 = "ttir.transpose"(%597, %598) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x480x14x14xbf16>, tensor<6x14x480x14xbf16>) -> tensor<6x14x480x14xbf16> loc(#loc438)
    %600 = ttir.empty() : tensor<6x14x14x480xbf16> loc(#loc439)
    %601 = "ttir.transpose"(%599, %600) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x480x14xbf16>, tensor<6x14x14x480xbf16>) -> tensor<6x14x14x480xbf16> loc(#loc439)
    %602 = ttir.empty() : tensor<6x14x14x480xbf16> loc(#loc440)
    %603 = "ttir.conv2d"(%601, %arg149, %602) <{dilation = array<i32: 1, 1>, groups = 480 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x14x14x480xbf16>, tensor<480x1x3x3xbf16>, tensor<6x14x14x480xbf16>) -> tensor<6x14x14x480xbf16> loc(#loc440)
    %604 = ttir.empty() : tensor<6x14x480x14xbf16> loc(#loc441)
    %605 = "ttir.transpose"(%603, %604) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x14x480xbf16>, tensor<6x14x480x14xbf16>) -> tensor<6x14x480x14xbf16> loc(#loc441)
    %606 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc442)
    %607 = "ttir.transpose"(%605, %606) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x14x480x14xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc442)
    %608 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc53)
    %609 = "ttir.multiply"(%607, %arg45, %608) : (tensor<6x480x14x14xbf16>, tensor<1x480x1x1xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc53)
    %610 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc54)
    %611 = "ttir.add"(%609, %arg46, %610) : (tensor<6x480x14x14xbf16>, tensor<1x480x1x1xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc54)
    %612 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc758)
    %613 = "ttir.sigmoid"(%611, %612) : (tensor<6x480x14x14xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc758)
    %614 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc759)
    %615 = "ttir.multiply"(%611, %613, %614) : (tensor<6x480x14x14xbf16>, tensor<6x480x14x14xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc759)
    %616 = ttir.empty() : tensor<6x480x1x14xbf16> loc(#loc55)
    %617 = "ttir.mean"(%615, %616) <{dim_arg = [-2 : i32], keep_dim = true}> : (tensor<6x480x14x14xbf16>, tensor<6x480x1x14xbf16>) -> tensor<6x480x1x14xbf16> loc(#loc55)
    %618 = ttir.empty() : tensor<6x480x1x1xbf16> loc(#loc444)
    %619 = "ttir.mean"(%617, %618) <{dim_arg = [-1 : i32], keep_dim = true}> : (tensor<6x480x1x14xbf16>, tensor<6x480x1x1xbf16>) -> tensor<6x480x1x1xbf16> loc(#loc444)
    %620 = ttir.empty() : tensor<6x1x480x1xbf16> loc(#loc760)
    %621 = "ttir.transpose"(%619, %620) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x480x1x1xbf16>, tensor<6x1x480x1xbf16>) -> tensor<6x1x480x1xbf16> loc(#loc760)
    %622 = ttir.empty() : tensor<6x1x1x480xbf16> loc(#loc761)
    %623 = "ttir.transpose"(%621, %622) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x480x1xbf16>, tensor<6x1x1x480xbf16>) -> tensor<6x1x1x480xbf16> loc(#loc761)
    %624 = ttir.empty() : tensor<6x1x1x20xbf16> loc(#loc762)
    %625 = "ttir.conv2d"(%623, %arg150, %arg151, %624) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x480xbf16>, tensor<20x480x1x1xbf16>, tensor<1x1x1x20xbf16>, tensor<6x1x1x20xbf16>) -> tensor<6x1x1x20xbf16> loc(#loc762)
    %626 = ttir.empty() : tensor<6x1x20x1xbf16> loc(#loc763)
    %627 = "ttir.transpose"(%625, %626) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x20xbf16>, tensor<6x1x20x1xbf16>) -> tensor<6x1x20x1xbf16> loc(#loc763)
    %628 = ttir.empty() : tensor<6x20x1x1xbf16> loc(#loc764)
    %629 = "ttir.transpose"(%627, %628) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x20x1xbf16>, tensor<6x20x1x1xbf16>) -> tensor<6x20x1x1xbf16> loc(#loc764)
    %630 = ttir.empty() : tensor<6x20x1x1xbf16> loc(#loc765)
    %631 = "ttir.sigmoid"(%629, %630) : (tensor<6x20x1x1xbf16>, tensor<6x20x1x1xbf16>) -> tensor<6x20x1x1xbf16> loc(#loc765)
    %632 = ttir.empty() : tensor<6x20x1x1xbf16> loc(#loc766)
    %633 = "ttir.multiply"(%629, %631, %632) : (tensor<6x20x1x1xbf16>, tensor<6x20x1x1xbf16>, tensor<6x20x1x1xbf16>) -> tensor<6x20x1x1xbf16> loc(#loc766)
    %634 = ttir.empty() : tensor<6x1x20x1xbf16> loc(#loc767)
    %635 = "ttir.transpose"(%633, %634) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x20x1x1xbf16>, tensor<6x1x20x1xbf16>) -> tensor<6x1x20x1xbf16> loc(#loc767)
    %636 = ttir.empty() : tensor<6x1x1x20xbf16> loc(#loc768)
    %637 = "ttir.transpose"(%635, %636) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x20x1xbf16>, tensor<6x1x1x20xbf16>) -> tensor<6x1x1x20xbf16> loc(#loc768)
    %638 = ttir.empty() : tensor<6x1x1x480xbf16> loc(#loc769)
    %639 = "ttir.conv2d"(%637, %arg152, %arg153, %638) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x20xbf16>, tensor<480x20x1x1xbf16>, tensor<1x1x1x480xbf16>, tensor<6x1x1x480xbf16>) -> tensor<6x1x1x480xbf16> loc(#loc769)
    %640 = ttir.empty() : tensor<6x1x480x1xbf16> loc(#loc770)
    %641 = "ttir.transpose"(%639, %640) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x480xbf16>, tensor<6x1x480x1xbf16>) -> tensor<6x1x480x1xbf16> loc(#loc770)
    %642 = ttir.empty() : tensor<6x480x1x1xbf16> loc(#loc771)
    %643 = "ttir.transpose"(%641, %642) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x480x1xbf16>, tensor<6x480x1x1xbf16>) -> tensor<6x480x1x1xbf16> loc(#loc771)
    %644 = ttir.empty() : tensor<6x480x1x1xbf16> loc(#loc772)
    %645 = "ttir.sigmoid"(%643, %644) : (tensor<6x480x1x1xbf16>, tensor<6x480x1x1xbf16>) -> tensor<6x480x1x1xbf16> loc(#loc772)
    %646 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc449)
    %647 = "ttir.multiply"(%615, %645, %646) : (tensor<6x480x14x14xbf16>, tensor<6x480x1x1xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc449)
    %648 = ttir.empty() : tensor<6x14x480x14xbf16> loc(#loc450)
    %649 = "ttir.transpose"(%647, %648) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x480x14x14xbf16>, tensor<6x14x480x14xbf16>) -> tensor<6x14x480x14xbf16> loc(#loc450)
    %650 = ttir.empty() : tensor<6x14x14x480xbf16> loc(#loc451)
    %651 = "ttir.transpose"(%649, %650) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x480x14xbf16>, tensor<6x14x14x480xbf16>) -> tensor<6x14x14x480xbf16> loc(#loc451)
    %652 = ttir.empty() : tensor<6x14x14x80xbf16> loc(#loc452)
    %653 = "ttir.conv2d"(%651, %arg154, %652) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x14x14x480xbf16>, tensor<80x480x1x1xbf16>, tensor<6x14x14x80xbf16>) -> tensor<6x14x14x80xbf16> loc(#loc452)
    %654 = ttir.empty() : tensor<6x14x80x14xbf16> loc(#loc453)
    %655 = "ttir.transpose"(%653, %654) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x14x80xbf16>, tensor<6x14x80x14xbf16>) -> tensor<6x14x80x14xbf16> loc(#loc453)
    %656 = ttir.empty() : tensor<6x80x14x14xbf16> loc(#loc454)
    %657 = "ttir.transpose"(%655, %656) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x14x80x14xbf16>, tensor<6x80x14x14xbf16>) -> tensor<6x80x14x14xbf16> loc(#loc454)
    %658 = ttir.empty() : tensor<6x80x14x14xbf16> loc(#loc56)
    %659 = "ttir.multiply"(%657, %arg47, %658) : (tensor<6x80x14x14xbf16>, tensor<1x80x1x1xbf16>, tensor<6x80x14x14xbf16>) -> tensor<6x80x14x14xbf16> loc(#loc56)
    %660 = ttir.empty() : tensor<6x80x14x14xbf16> loc(#loc57)
    %661 = "ttir.add"(%659, %arg48, %660) : (tensor<6x80x14x14xbf16>, tensor<1x80x1x1xbf16>, tensor<6x80x14x14xbf16>) -> tensor<6x80x14x14xbf16> loc(#loc57)
    %662 = ttir.empty() : tensor<6x80x14x14xbf16> loc(#loc223)
    %663 = "ttir.add"(%661, %579, %662) : (tensor<6x80x14x14xbf16>, tensor<6x80x14x14xbf16>, tensor<6x80x14x14xbf16>) -> tensor<6x80x14x14xbf16> loc(#loc223)
    %664 = ttir.empty() : tensor<6x14x80x14xbf16> loc(#loc455)
    %665 = "ttir.transpose"(%663, %664) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x80x14x14xbf16>, tensor<6x14x80x14xbf16>) -> tensor<6x14x80x14xbf16> loc(#loc455)
    %666 = ttir.empty() : tensor<6x14x14x80xbf16> loc(#loc456)
    %667 = "ttir.transpose"(%665, %666) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x80x14xbf16>, tensor<6x14x14x80xbf16>) -> tensor<6x14x14x80xbf16> loc(#loc456)
    %668 = ttir.empty() : tensor<6x14x14x480xbf16> loc(#loc457)
    %669 = "ttir.conv2d"(%667, %arg155, %668) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x14x14x80xbf16>, tensor<480x80x1x1xbf16>, tensor<6x14x14x480xbf16>) -> tensor<6x14x14x480xbf16> loc(#loc457)
    %670 = ttir.empty() : tensor<6x14x480x14xbf16> loc(#loc458)
    %671 = "ttir.transpose"(%669, %670) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x14x480xbf16>, tensor<6x14x480x14xbf16>) -> tensor<6x14x480x14xbf16> loc(#loc458)
    %672 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc459)
    %673 = "ttir.transpose"(%671, %672) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x14x480x14xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc459)
    %674 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc58)
    %675 = "ttir.multiply"(%673, %arg49, %674) : (tensor<6x480x14x14xbf16>, tensor<1x480x1x1xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc58)
    %676 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc59)
    %677 = "ttir.add"(%675, %arg50, %676) : (tensor<6x480x14x14xbf16>, tensor<1x480x1x1xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc59)
    %678 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc773)
    %679 = "ttir.sigmoid"(%677, %678) : (tensor<6x480x14x14xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc773)
    %680 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc774)
    %681 = "ttir.multiply"(%677, %679, %680) : (tensor<6x480x14x14xbf16>, tensor<6x480x14x14xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc774)
    %682 = ttir.empty() : tensor<6x14x480x14xbf16> loc(#loc461)
    %683 = "ttir.transpose"(%681, %682) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x480x14x14xbf16>, tensor<6x14x480x14xbf16>) -> tensor<6x14x480x14xbf16> loc(#loc461)
    %684 = ttir.empty() : tensor<6x14x14x480xbf16> loc(#loc462)
    %685 = "ttir.transpose"(%683, %684) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x480x14xbf16>, tensor<6x14x14x480xbf16>) -> tensor<6x14x14x480xbf16> loc(#loc462)
    %686 = ttir.empty() : tensor<6x14x14x480xbf16> loc(#loc463)
    %687 = "ttir.conv2d"(%685, %arg156, %686) <{dilation = array<i32: 1, 1>, groups = 480 : i32, padding = array<i32: 2, 2, 2, 2>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x14x14x480xbf16>, tensor<480x1x5x5xbf16>, tensor<6x14x14x480xbf16>) -> tensor<6x14x14x480xbf16> loc(#loc463)
    %688 = ttir.empty() : tensor<6x14x480x14xbf16> loc(#loc464)
    %689 = "ttir.transpose"(%687, %688) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x14x480xbf16>, tensor<6x14x480x14xbf16>) -> tensor<6x14x480x14xbf16> loc(#loc464)
    %690 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc465)
    %691 = "ttir.transpose"(%689, %690) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x14x480x14xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc465)
    %692 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc60)
    %693 = "ttir.multiply"(%691, %arg51, %692) : (tensor<6x480x14x14xbf16>, tensor<1x480x1x1xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc60)
    %694 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc61)
    %695 = "ttir.add"(%693, %arg52, %694) : (tensor<6x480x14x14xbf16>, tensor<1x480x1x1xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc61)
    %696 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc775)
    %697 = "ttir.sigmoid"(%695, %696) : (tensor<6x480x14x14xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc775)
    %698 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc776)
    %699 = "ttir.multiply"(%695, %697, %698) : (tensor<6x480x14x14xbf16>, tensor<6x480x14x14xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc776)
    %700 = ttir.empty() : tensor<6x480x1x14xbf16> loc(#loc62)
    %701 = "ttir.mean"(%699, %700) <{dim_arg = [-2 : i32], keep_dim = true}> : (tensor<6x480x14x14xbf16>, tensor<6x480x1x14xbf16>) -> tensor<6x480x1x14xbf16> loc(#loc62)
    %702 = ttir.empty() : tensor<6x480x1x1xbf16> loc(#loc467)
    %703 = "ttir.mean"(%701, %702) <{dim_arg = [-1 : i32], keep_dim = true}> : (tensor<6x480x1x14xbf16>, tensor<6x480x1x1xbf16>) -> tensor<6x480x1x1xbf16> loc(#loc467)
    %704 = ttir.empty() : tensor<6x1x480x1xbf16> loc(#loc777)
    %705 = "ttir.transpose"(%703, %704) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x480x1x1xbf16>, tensor<6x1x480x1xbf16>) -> tensor<6x1x480x1xbf16> loc(#loc777)
    %706 = ttir.empty() : tensor<6x1x1x480xbf16> loc(#loc778)
    %707 = "ttir.transpose"(%705, %706) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x480x1xbf16>, tensor<6x1x1x480xbf16>) -> tensor<6x1x1x480xbf16> loc(#loc778)
    %708 = ttir.empty() : tensor<6x1x1x20xbf16> loc(#loc779)
    %709 = "ttir.conv2d"(%707, %arg157, %arg158, %708) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x480xbf16>, tensor<20x480x1x1xbf16>, tensor<1x1x1x20xbf16>, tensor<6x1x1x20xbf16>) -> tensor<6x1x1x20xbf16> loc(#loc779)
    %710 = ttir.empty() : tensor<6x1x20x1xbf16> loc(#loc780)
    %711 = "ttir.transpose"(%709, %710) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x20xbf16>, tensor<6x1x20x1xbf16>) -> tensor<6x1x20x1xbf16> loc(#loc780)
    %712 = ttir.empty() : tensor<6x20x1x1xbf16> loc(#loc781)
    %713 = "ttir.transpose"(%711, %712) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x20x1xbf16>, tensor<6x20x1x1xbf16>) -> tensor<6x20x1x1xbf16> loc(#loc781)
    %714 = ttir.empty() : tensor<6x20x1x1xbf16> loc(#loc782)
    %715 = "ttir.sigmoid"(%713, %714) : (tensor<6x20x1x1xbf16>, tensor<6x20x1x1xbf16>) -> tensor<6x20x1x1xbf16> loc(#loc782)
    %716 = ttir.empty() : tensor<6x20x1x1xbf16> loc(#loc783)
    %717 = "ttir.multiply"(%713, %715, %716) : (tensor<6x20x1x1xbf16>, tensor<6x20x1x1xbf16>, tensor<6x20x1x1xbf16>) -> tensor<6x20x1x1xbf16> loc(#loc783)
    %718 = ttir.empty() : tensor<6x1x20x1xbf16> loc(#loc784)
    %719 = "ttir.transpose"(%717, %718) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x20x1x1xbf16>, tensor<6x1x20x1xbf16>) -> tensor<6x1x20x1xbf16> loc(#loc784)
    %720 = ttir.empty() : tensor<6x1x1x20xbf16> loc(#loc785)
    %721 = "ttir.transpose"(%719, %720) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x20x1xbf16>, tensor<6x1x1x20xbf16>) -> tensor<6x1x1x20xbf16> loc(#loc785)
    %722 = ttir.empty() : tensor<6x1x1x480xbf16> loc(#loc786)
    %723 = "ttir.conv2d"(%721, %arg159, %arg160, %722) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x20xbf16>, tensor<480x20x1x1xbf16>, tensor<1x1x1x480xbf16>, tensor<6x1x1x480xbf16>) -> tensor<6x1x1x480xbf16> loc(#loc786)
    %724 = ttir.empty() : tensor<6x1x480x1xbf16> loc(#loc787)
    %725 = "ttir.transpose"(%723, %724) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x480xbf16>, tensor<6x1x480x1xbf16>) -> tensor<6x1x480x1xbf16> loc(#loc787)
    %726 = ttir.empty() : tensor<6x480x1x1xbf16> loc(#loc788)
    %727 = "ttir.transpose"(%725, %726) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x480x1xbf16>, tensor<6x480x1x1xbf16>) -> tensor<6x480x1x1xbf16> loc(#loc788)
    %728 = ttir.empty() : tensor<6x480x1x1xbf16> loc(#loc789)
    %729 = "ttir.sigmoid"(%727, %728) : (tensor<6x480x1x1xbf16>, tensor<6x480x1x1xbf16>) -> tensor<6x480x1x1xbf16> loc(#loc789)
    %730 = ttir.empty() : tensor<6x480x14x14xbf16> loc(#loc472)
    %731 = "ttir.multiply"(%699, %729, %730) : (tensor<6x480x14x14xbf16>, tensor<6x480x1x1xbf16>, tensor<6x480x14x14xbf16>) -> tensor<6x480x14x14xbf16> loc(#loc472)
    %732 = ttir.empty() : tensor<6x14x480x14xbf16> loc(#loc473)
    %733 = "ttir.transpose"(%731, %732) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x480x14x14xbf16>, tensor<6x14x480x14xbf16>) -> tensor<6x14x480x14xbf16> loc(#loc473)
    %734 = ttir.empty() : tensor<6x14x14x480xbf16> loc(#loc474)
    %735 = "ttir.transpose"(%733, %734) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x480x14xbf16>, tensor<6x14x14x480xbf16>) -> tensor<6x14x14x480xbf16> loc(#loc474)
    %736 = ttir.empty() : tensor<6x14x14x112xbf16> loc(#loc475)
    %737 = "ttir.conv2d"(%735, %arg161, %736) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x14x14x480xbf16>, tensor<112x480x1x1xbf16>, tensor<6x14x14x112xbf16>) -> tensor<6x14x14x112xbf16> loc(#loc475)
    %738 = ttir.empty() : tensor<6x14x112x14xbf16> loc(#loc476)
    %739 = "ttir.transpose"(%737, %738) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x14x112xbf16>, tensor<6x14x112x14xbf16>) -> tensor<6x14x112x14xbf16> loc(#loc476)
    %740 = ttir.empty() : tensor<6x112x14x14xbf16> loc(#loc477)
    %741 = "ttir.transpose"(%739, %740) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x14x112x14xbf16>, tensor<6x112x14x14xbf16>) -> tensor<6x112x14x14xbf16> loc(#loc477)
    %742 = ttir.empty() : tensor<6x112x14x14xbf16> loc(#loc63)
    %743 = "ttir.multiply"(%741, %arg53, %742) : (tensor<6x112x14x14xbf16>, tensor<1x112x1x1xbf16>, tensor<6x112x14x14xbf16>) -> tensor<6x112x14x14xbf16> loc(#loc63)
    %744 = ttir.empty() : tensor<6x112x14x14xbf16> loc(#loc64)
    %745 = "ttir.add"(%743, %arg54, %744) : (tensor<6x112x14x14xbf16>, tensor<1x112x1x1xbf16>, tensor<6x112x14x14xbf16>) -> tensor<6x112x14x14xbf16> loc(#loc64)
    %746 = ttir.empty() : tensor<6x14x112x14xbf16> loc(#loc478)
    %747 = "ttir.transpose"(%745, %746) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x112x14x14xbf16>, tensor<6x14x112x14xbf16>) -> tensor<6x14x112x14xbf16> loc(#loc478)
    %748 = ttir.empty() : tensor<6x14x14x112xbf16> loc(#loc479)
    %749 = "ttir.transpose"(%747, %748) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x112x14xbf16>, tensor<6x14x14x112xbf16>) -> tensor<6x14x14x112xbf16> loc(#loc479)
    %750 = ttir.empty() : tensor<6x14x14x672xbf16> loc(#loc480)
    %751 = "ttir.conv2d"(%749, %arg162, %750) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x14x14x112xbf16>, tensor<672x112x1x1xbf16>, tensor<6x14x14x672xbf16>) -> tensor<6x14x14x672xbf16> loc(#loc480)
    %752 = ttir.empty() : tensor<6x14x672x14xbf16> loc(#loc481)
    %753 = "ttir.transpose"(%751, %752) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x14x672xbf16>, tensor<6x14x672x14xbf16>) -> tensor<6x14x672x14xbf16> loc(#loc481)
    %754 = ttir.empty() : tensor<6x672x14x14xbf16> loc(#loc482)
    %755 = "ttir.transpose"(%753, %754) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x14x672x14xbf16>, tensor<6x672x14x14xbf16>) -> tensor<6x672x14x14xbf16> loc(#loc482)
    %756 = ttir.empty() : tensor<6x672x14x14xbf16> loc(#loc65)
    %757 = "ttir.multiply"(%755, %arg55, %756) : (tensor<6x672x14x14xbf16>, tensor<1x672x1x1xbf16>, tensor<6x672x14x14xbf16>) -> tensor<6x672x14x14xbf16> loc(#loc65)
    %758 = ttir.empty() : tensor<6x672x14x14xbf16> loc(#loc66)
    %759 = "ttir.add"(%757, %arg56, %758) : (tensor<6x672x14x14xbf16>, tensor<1x672x1x1xbf16>, tensor<6x672x14x14xbf16>) -> tensor<6x672x14x14xbf16> loc(#loc66)
    %760 = ttir.empty() : tensor<6x672x14x14xbf16> loc(#loc790)
    %761 = "ttir.sigmoid"(%759, %760) : (tensor<6x672x14x14xbf16>, tensor<6x672x14x14xbf16>) -> tensor<6x672x14x14xbf16> loc(#loc790)
    %762 = ttir.empty() : tensor<6x672x14x14xbf16> loc(#loc791)
    %763 = "ttir.multiply"(%759, %761, %762) : (tensor<6x672x14x14xbf16>, tensor<6x672x14x14xbf16>, tensor<6x672x14x14xbf16>) -> tensor<6x672x14x14xbf16> loc(#loc791)
    %764 = ttir.empty() : tensor<6x14x672x14xbf16> loc(#loc484)
    %765 = "ttir.transpose"(%763, %764) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x672x14x14xbf16>, tensor<6x14x672x14xbf16>) -> tensor<6x14x672x14xbf16> loc(#loc484)
    %766 = ttir.empty() : tensor<6x14x14x672xbf16> loc(#loc485)
    %767 = "ttir.transpose"(%765, %766) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x672x14xbf16>, tensor<6x14x14x672xbf16>) -> tensor<6x14x14x672xbf16> loc(#loc485)
    %768 = ttir.empty() : tensor<6x14x14x672xbf16> loc(#loc486)
    %769 = "ttir.conv2d"(%767, %arg163, %768) <{dilation = array<i32: 1, 1>, groups = 672 : i32, padding = array<i32: 2, 2, 2, 2>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x14x14x672xbf16>, tensor<672x1x5x5xbf16>, tensor<6x14x14x672xbf16>) -> tensor<6x14x14x672xbf16> loc(#loc486)
    %770 = ttir.empty() : tensor<6x14x672x14xbf16> loc(#loc487)
    %771 = "ttir.transpose"(%769, %770) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x14x672xbf16>, tensor<6x14x672x14xbf16>) -> tensor<6x14x672x14xbf16> loc(#loc487)
    %772 = ttir.empty() : tensor<6x672x14x14xbf16> loc(#loc488)
    %773 = "ttir.transpose"(%771, %772) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x14x672x14xbf16>, tensor<6x672x14x14xbf16>) -> tensor<6x672x14x14xbf16> loc(#loc488)
    %774 = ttir.empty() : tensor<6x672x14x14xbf16> loc(#loc67)
    %775 = "ttir.multiply"(%773, %arg57, %774) : (tensor<6x672x14x14xbf16>, tensor<1x672x1x1xbf16>, tensor<6x672x14x14xbf16>) -> tensor<6x672x14x14xbf16> loc(#loc67)
    %776 = ttir.empty() : tensor<6x672x14x14xbf16> loc(#loc68)
    %777 = "ttir.add"(%775, %arg58, %776) : (tensor<6x672x14x14xbf16>, tensor<1x672x1x1xbf16>, tensor<6x672x14x14xbf16>) -> tensor<6x672x14x14xbf16> loc(#loc68)
    %778 = ttir.empty() : tensor<6x672x14x14xbf16> loc(#loc792)
    %779 = "ttir.sigmoid"(%777, %778) : (tensor<6x672x14x14xbf16>, tensor<6x672x14x14xbf16>) -> tensor<6x672x14x14xbf16> loc(#loc792)
    %780 = ttir.empty() : tensor<6x672x14x14xbf16> loc(#loc793)
    %781 = "ttir.multiply"(%777, %779, %780) : (tensor<6x672x14x14xbf16>, tensor<6x672x14x14xbf16>, tensor<6x672x14x14xbf16>) -> tensor<6x672x14x14xbf16> loc(#loc793)
    %782 = ttir.empty() : tensor<6x672x1x14xbf16> loc(#loc69)
    %783 = "ttir.mean"(%781, %782) <{dim_arg = [-2 : i32], keep_dim = true}> : (tensor<6x672x14x14xbf16>, tensor<6x672x1x14xbf16>) -> tensor<6x672x1x14xbf16> loc(#loc69)
    %784 = ttir.empty() : tensor<6x672x1x1xbf16> loc(#loc490)
    %785 = "ttir.mean"(%783, %784) <{dim_arg = [-1 : i32], keep_dim = true}> : (tensor<6x672x1x14xbf16>, tensor<6x672x1x1xbf16>) -> tensor<6x672x1x1xbf16> loc(#loc490)
    %786 = ttir.empty() : tensor<6x1x672x1xbf16> loc(#loc794)
    %787 = "ttir.transpose"(%785, %786) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x672x1x1xbf16>, tensor<6x1x672x1xbf16>) -> tensor<6x1x672x1xbf16> loc(#loc794)
    %788 = ttir.empty() : tensor<6x1x1x672xbf16> loc(#loc795)
    %789 = "ttir.transpose"(%787, %788) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x672x1xbf16>, tensor<6x1x1x672xbf16>) -> tensor<6x1x1x672xbf16> loc(#loc795)
    %790 = ttir.empty() : tensor<6x1x1x28xbf16> loc(#loc796)
    %791 = "ttir.conv2d"(%789, %arg164, %arg165, %790) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x672xbf16>, tensor<28x672x1x1xbf16>, tensor<1x1x1x28xbf16>, tensor<6x1x1x28xbf16>) -> tensor<6x1x1x28xbf16> loc(#loc796)
    %792 = ttir.empty() : tensor<6x1x28x1xbf16> loc(#loc797)
    %793 = "ttir.transpose"(%791, %792) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x28xbf16>, tensor<6x1x28x1xbf16>) -> tensor<6x1x28x1xbf16> loc(#loc797)
    %794 = ttir.empty() : tensor<6x28x1x1xbf16> loc(#loc798)
    %795 = "ttir.transpose"(%793, %794) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x28x1xbf16>, tensor<6x28x1x1xbf16>) -> tensor<6x28x1x1xbf16> loc(#loc798)
    %796 = ttir.empty() : tensor<6x28x1x1xbf16> loc(#loc799)
    %797 = "ttir.sigmoid"(%795, %796) : (tensor<6x28x1x1xbf16>, tensor<6x28x1x1xbf16>) -> tensor<6x28x1x1xbf16> loc(#loc799)
    %798 = ttir.empty() : tensor<6x28x1x1xbf16> loc(#loc800)
    %799 = "ttir.multiply"(%795, %797, %798) : (tensor<6x28x1x1xbf16>, tensor<6x28x1x1xbf16>, tensor<6x28x1x1xbf16>) -> tensor<6x28x1x1xbf16> loc(#loc800)
    %800 = ttir.empty() : tensor<6x1x28x1xbf16> loc(#loc801)
    %801 = "ttir.transpose"(%799, %800) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x28x1x1xbf16>, tensor<6x1x28x1xbf16>) -> tensor<6x1x28x1xbf16> loc(#loc801)
    %802 = ttir.empty() : tensor<6x1x1x28xbf16> loc(#loc802)
    %803 = "ttir.transpose"(%801, %802) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x28x1xbf16>, tensor<6x1x1x28xbf16>) -> tensor<6x1x1x28xbf16> loc(#loc802)
    %804 = ttir.empty() : tensor<6x1x1x672xbf16> loc(#loc803)
    %805 = "ttir.conv2d"(%803, %arg166, %arg167, %804) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x28xbf16>, tensor<672x28x1x1xbf16>, tensor<1x1x1x672xbf16>, tensor<6x1x1x672xbf16>) -> tensor<6x1x1x672xbf16> loc(#loc803)
    %806 = ttir.empty() : tensor<6x1x672x1xbf16> loc(#loc804)
    %807 = "ttir.transpose"(%805, %806) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x672xbf16>, tensor<6x1x672x1xbf16>) -> tensor<6x1x672x1xbf16> loc(#loc804)
    %808 = ttir.empty() : tensor<6x672x1x1xbf16> loc(#loc805)
    %809 = "ttir.transpose"(%807, %808) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x672x1xbf16>, tensor<6x672x1x1xbf16>) -> tensor<6x672x1x1xbf16> loc(#loc805)
    %810 = ttir.empty() : tensor<6x672x1x1xbf16> loc(#loc806)
    %811 = "ttir.sigmoid"(%809, %810) : (tensor<6x672x1x1xbf16>, tensor<6x672x1x1xbf16>) -> tensor<6x672x1x1xbf16> loc(#loc806)
    %812 = ttir.empty() : tensor<6x672x14x14xbf16> loc(#loc495)
    %813 = "ttir.multiply"(%781, %811, %812) : (tensor<6x672x14x14xbf16>, tensor<6x672x1x1xbf16>, tensor<6x672x14x14xbf16>) -> tensor<6x672x14x14xbf16> loc(#loc495)
    %814 = ttir.empty() : tensor<6x14x672x14xbf16> loc(#loc496)
    %815 = "ttir.transpose"(%813, %814) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x672x14x14xbf16>, tensor<6x14x672x14xbf16>) -> tensor<6x14x672x14xbf16> loc(#loc496)
    %816 = ttir.empty() : tensor<6x14x14x672xbf16> loc(#loc497)
    %817 = "ttir.transpose"(%815, %816) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x672x14xbf16>, tensor<6x14x14x672xbf16>) -> tensor<6x14x14x672xbf16> loc(#loc497)
    %818 = ttir.empty() : tensor<6x14x14x112xbf16> loc(#loc498)
    %819 = "ttir.conv2d"(%817, %arg168, %818) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x14x14x672xbf16>, tensor<112x672x1x1xbf16>, tensor<6x14x14x112xbf16>) -> tensor<6x14x14x112xbf16> loc(#loc498)
    %820 = ttir.empty() : tensor<6x14x112x14xbf16> loc(#loc499)
    %821 = "ttir.transpose"(%819, %820) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x14x112xbf16>, tensor<6x14x112x14xbf16>) -> tensor<6x14x112x14xbf16> loc(#loc499)
    %822 = ttir.empty() : tensor<6x112x14x14xbf16> loc(#loc500)
    %823 = "ttir.transpose"(%821, %822) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x14x112x14xbf16>, tensor<6x112x14x14xbf16>) -> tensor<6x112x14x14xbf16> loc(#loc500)
    %824 = ttir.empty() : tensor<6x112x14x14xbf16> loc(#loc70)
    %825 = "ttir.multiply"(%823, %arg59, %824) : (tensor<6x112x14x14xbf16>, tensor<1x112x1x1xbf16>, tensor<6x112x14x14xbf16>) -> tensor<6x112x14x14xbf16> loc(#loc70)
    %826 = ttir.empty() : tensor<6x112x14x14xbf16> loc(#loc71)
    %827 = "ttir.add"(%825, %arg60, %826) : (tensor<6x112x14x14xbf16>, tensor<1x112x1x1xbf16>, tensor<6x112x14x14xbf16>) -> tensor<6x112x14x14xbf16> loc(#loc71)
    %828 = ttir.empty() : tensor<6x112x14x14xbf16> loc(#loc236)
    %829 = "ttir.add"(%827, %745, %828) : (tensor<6x112x14x14xbf16>, tensor<6x112x14x14xbf16>, tensor<6x112x14x14xbf16>) -> tensor<6x112x14x14xbf16> loc(#loc236)
    %830 = ttir.empty() : tensor<6x14x112x14xbf16> loc(#loc501)
    %831 = "ttir.transpose"(%829, %830) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x112x14x14xbf16>, tensor<6x14x112x14xbf16>) -> tensor<6x14x112x14xbf16> loc(#loc501)
    %832 = ttir.empty() : tensor<6x14x14x112xbf16> loc(#loc502)
    %833 = "ttir.transpose"(%831, %832) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x112x14xbf16>, tensor<6x14x14x112xbf16>) -> tensor<6x14x14x112xbf16> loc(#loc502)
    %834 = ttir.empty() : tensor<6x14x14x672xbf16> loc(#loc503)
    %835 = "ttir.conv2d"(%833, %arg169, %834) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x14x14x112xbf16>, tensor<672x112x1x1xbf16>, tensor<6x14x14x672xbf16>) -> tensor<6x14x14x672xbf16> loc(#loc503)
    %836 = ttir.empty() : tensor<6x14x672x14xbf16> loc(#loc504)
    %837 = "ttir.transpose"(%835, %836) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x14x672xbf16>, tensor<6x14x672x14xbf16>) -> tensor<6x14x672x14xbf16> loc(#loc504)
    %838 = ttir.empty() : tensor<6x672x14x14xbf16> loc(#loc505)
    %839 = "ttir.transpose"(%837, %838) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x14x672x14xbf16>, tensor<6x672x14x14xbf16>) -> tensor<6x672x14x14xbf16> loc(#loc505)
    %840 = ttir.empty() : tensor<6x672x14x14xbf16> loc(#loc72)
    %841 = "ttir.multiply"(%839, %arg61, %840) : (tensor<6x672x14x14xbf16>, tensor<1x672x1x1xbf16>, tensor<6x672x14x14xbf16>) -> tensor<6x672x14x14xbf16> loc(#loc72)
    %842 = ttir.empty() : tensor<6x672x14x14xbf16> loc(#loc73)
    %843 = "ttir.add"(%841, %arg62, %842) : (tensor<6x672x14x14xbf16>, tensor<1x672x1x1xbf16>, tensor<6x672x14x14xbf16>) -> tensor<6x672x14x14xbf16> loc(#loc73)
    %844 = ttir.empty() : tensor<6x672x14x14xbf16> loc(#loc807)
    %845 = "ttir.sigmoid"(%843, %844) : (tensor<6x672x14x14xbf16>, tensor<6x672x14x14xbf16>) -> tensor<6x672x14x14xbf16> loc(#loc807)
    %846 = ttir.empty() : tensor<6x672x14x14xbf16> loc(#loc808)
    %847 = "ttir.multiply"(%843, %845, %846) : (tensor<6x672x14x14xbf16>, tensor<6x672x14x14xbf16>, tensor<6x672x14x14xbf16>) -> tensor<6x672x14x14xbf16> loc(#loc808)
    %848 = ttir.empty() : tensor<6x14x672x14xbf16> loc(#loc507)
    %849 = "ttir.transpose"(%847, %848) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x672x14x14xbf16>, tensor<6x14x672x14xbf16>) -> tensor<6x14x672x14xbf16> loc(#loc507)
    %850 = ttir.empty() : tensor<6x14x14x672xbf16> loc(#loc508)
    %851 = "ttir.transpose"(%849, %850) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x672x14xbf16>, tensor<6x14x14x672xbf16>) -> tensor<6x14x14x672xbf16> loc(#loc508)
    %852 = ttir.empty() : tensor<6x14x14x672xbf16> loc(#loc509)
    %853 = "ttir.conv2d"(%851, %arg170, %852) <{dilation = array<i32: 1, 1>, groups = 672 : i32, padding = array<i32: 2, 2, 2, 2>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x14x14x672xbf16>, tensor<672x1x5x5xbf16>, tensor<6x14x14x672xbf16>) -> tensor<6x14x14x672xbf16> loc(#loc509)
    %854 = ttir.empty() : tensor<6x14x672x14xbf16> loc(#loc510)
    %855 = "ttir.transpose"(%853, %854) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x14x672xbf16>, tensor<6x14x672x14xbf16>) -> tensor<6x14x672x14xbf16> loc(#loc510)
    %856 = ttir.empty() : tensor<6x672x14x14xbf16> loc(#loc511)
    %857 = "ttir.transpose"(%855, %856) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x14x672x14xbf16>, tensor<6x672x14x14xbf16>) -> tensor<6x672x14x14xbf16> loc(#loc511)
    %858 = ttir.empty() : tensor<6x672x14x14xbf16> loc(#loc74)
    %859 = "ttir.multiply"(%857, %arg63, %858) : (tensor<6x672x14x14xbf16>, tensor<1x672x1x1xbf16>, tensor<6x672x14x14xbf16>) -> tensor<6x672x14x14xbf16> loc(#loc74)
    %860 = ttir.empty() : tensor<6x672x14x14xbf16> loc(#loc75)
    %861 = "ttir.add"(%859, %arg64, %860) : (tensor<6x672x14x14xbf16>, tensor<1x672x1x1xbf16>, tensor<6x672x14x14xbf16>) -> tensor<6x672x14x14xbf16> loc(#loc75)
    %862 = ttir.empty() : tensor<6x672x14x14xbf16> loc(#loc809)
    %863 = "ttir.sigmoid"(%861, %862) : (tensor<6x672x14x14xbf16>, tensor<6x672x14x14xbf16>) -> tensor<6x672x14x14xbf16> loc(#loc809)
    %864 = ttir.empty() : tensor<6x672x14x14xbf16> loc(#loc810)
    %865 = "ttir.multiply"(%861, %863, %864) : (tensor<6x672x14x14xbf16>, tensor<6x672x14x14xbf16>, tensor<6x672x14x14xbf16>) -> tensor<6x672x14x14xbf16> loc(#loc810)
    %866 = ttir.empty() : tensor<6x672x1x14xbf16> loc(#loc76)
    %867 = "ttir.mean"(%865, %866) <{dim_arg = [-2 : i32], keep_dim = true}> : (tensor<6x672x14x14xbf16>, tensor<6x672x1x14xbf16>) -> tensor<6x672x1x14xbf16> loc(#loc76)
    %868 = ttir.empty() : tensor<6x672x1x1xbf16> loc(#loc513)
    %869 = "ttir.mean"(%867, %868) <{dim_arg = [-1 : i32], keep_dim = true}> : (tensor<6x672x1x14xbf16>, tensor<6x672x1x1xbf16>) -> tensor<6x672x1x1xbf16> loc(#loc513)
    %870 = ttir.empty() : tensor<6x1x672x1xbf16> loc(#loc811)
    %871 = "ttir.transpose"(%869, %870) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x672x1x1xbf16>, tensor<6x1x672x1xbf16>) -> tensor<6x1x672x1xbf16> loc(#loc811)
    %872 = ttir.empty() : tensor<6x1x1x672xbf16> loc(#loc812)
    %873 = "ttir.transpose"(%871, %872) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x672x1xbf16>, tensor<6x1x1x672xbf16>) -> tensor<6x1x1x672xbf16> loc(#loc812)
    %874 = ttir.empty() : tensor<6x1x1x28xbf16> loc(#loc813)
    %875 = "ttir.conv2d"(%873, %arg171, %arg172, %874) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x672xbf16>, tensor<28x672x1x1xbf16>, tensor<1x1x1x28xbf16>, tensor<6x1x1x28xbf16>) -> tensor<6x1x1x28xbf16> loc(#loc813)
    %876 = ttir.empty() : tensor<6x1x28x1xbf16> loc(#loc814)
    %877 = "ttir.transpose"(%875, %876) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x28xbf16>, tensor<6x1x28x1xbf16>) -> tensor<6x1x28x1xbf16> loc(#loc814)
    %878 = ttir.empty() : tensor<6x28x1x1xbf16> loc(#loc815)
    %879 = "ttir.transpose"(%877, %878) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x28x1xbf16>, tensor<6x28x1x1xbf16>) -> tensor<6x28x1x1xbf16> loc(#loc815)
    %880 = ttir.empty() : tensor<6x28x1x1xbf16> loc(#loc816)
    %881 = "ttir.sigmoid"(%879, %880) : (tensor<6x28x1x1xbf16>, tensor<6x28x1x1xbf16>) -> tensor<6x28x1x1xbf16> loc(#loc816)
    %882 = ttir.empty() : tensor<6x28x1x1xbf16> loc(#loc817)
    %883 = "ttir.multiply"(%879, %881, %882) : (tensor<6x28x1x1xbf16>, tensor<6x28x1x1xbf16>, tensor<6x28x1x1xbf16>) -> tensor<6x28x1x1xbf16> loc(#loc817)
    %884 = ttir.empty() : tensor<6x1x28x1xbf16> loc(#loc818)
    %885 = "ttir.transpose"(%883, %884) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x28x1x1xbf16>, tensor<6x1x28x1xbf16>) -> tensor<6x1x28x1xbf16> loc(#loc818)
    %886 = ttir.empty() : tensor<6x1x1x28xbf16> loc(#loc819)
    %887 = "ttir.transpose"(%885, %886) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x28x1xbf16>, tensor<6x1x1x28xbf16>) -> tensor<6x1x1x28xbf16> loc(#loc819)
    %888 = ttir.empty() : tensor<6x1x1x672xbf16> loc(#loc820)
    %889 = "ttir.conv2d"(%887, %arg173, %arg174, %888) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x28xbf16>, tensor<672x28x1x1xbf16>, tensor<1x1x1x672xbf16>, tensor<6x1x1x672xbf16>) -> tensor<6x1x1x672xbf16> loc(#loc820)
    %890 = ttir.empty() : tensor<6x1x672x1xbf16> loc(#loc821)
    %891 = "ttir.transpose"(%889, %890) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x672xbf16>, tensor<6x1x672x1xbf16>) -> tensor<6x1x672x1xbf16> loc(#loc821)
    %892 = ttir.empty() : tensor<6x672x1x1xbf16> loc(#loc822)
    %893 = "ttir.transpose"(%891, %892) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x672x1xbf16>, tensor<6x672x1x1xbf16>) -> tensor<6x672x1x1xbf16> loc(#loc822)
    %894 = ttir.empty() : tensor<6x672x1x1xbf16> loc(#loc823)
    %895 = "ttir.sigmoid"(%893, %894) : (tensor<6x672x1x1xbf16>, tensor<6x672x1x1xbf16>) -> tensor<6x672x1x1xbf16> loc(#loc823)
    %896 = ttir.empty() : tensor<6x672x14x14xbf16> loc(#loc518)
    %897 = "ttir.multiply"(%865, %895, %896) : (tensor<6x672x14x14xbf16>, tensor<6x672x1x1xbf16>, tensor<6x672x14x14xbf16>) -> tensor<6x672x14x14xbf16> loc(#loc518)
    %898 = ttir.empty() : tensor<6x14x672x14xbf16> loc(#loc519)
    %899 = "ttir.transpose"(%897, %898) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x672x14x14xbf16>, tensor<6x14x672x14xbf16>) -> tensor<6x14x672x14xbf16> loc(#loc519)
    %900 = ttir.empty() : tensor<6x14x14x672xbf16> loc(#loc520)
    %901 = "ttir.transpose"(%899, %900) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x672x14xbf16>, tensor<6x14x14x672xbf16>) -> tensor<6x14x14x672xbf16> loc(#loc520)
    %902 = ttir.empty() : tensor<6x14x14x112xbf16> loc(#loc521)
    %903 = "ttir.conv2d"(%901, %arg175, %902) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x14x14x672xbf16>, tensor<112x672x1x1xbf16>, tensor<6x14x14x112xbf16>) -> tensor<6x14x14x112xbf16> loc(#loc521)
    %904 = ttir.empty() : tensor<6x14x112x14xbf16> loc(#loc522)
    %905 = "ttir.transpose"(%903, %904) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x14x112xbf16>, tensor<6x14x112x14xbf16>) -> tensor<6x14x112x14xbf16> loc(#loc522)
    %906 = ttir.empty() : tensor<6x112x14x14xbf16> loc(#loc523)
    %907 = "ttir.transpose"(%905, %906) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x14x112x14xbf16>, tensor<6x112x14x14xbf16>) -> tensor<6x112x14x14xbf16> loc(#loc523)
    %908 = ttir.empty() : tensor<6x112x14x14xbf16> loc(#loc77)
    %909 = "ttir.multiply"(%907, %arg65, %908) : (tensor<6x112x14x14xbf16>, tensor<1x112x1x1xbf16>, tensor<6x112x14x14xbf16>) -> tensor<6x112x14x14xbf16> loc(#loc77)
    %910 = ttir.empty() : tensor<6x112x14x14xbf16> loc(#loc78)
    %911 = "ttir.add"(%909, %arg66, %910) : (tensor<6x112x14x14xbf16>, tensor<1x112x1x1xbf16>, tensor<6x112x14x14xbf16>) -> tensor<6x112x14x14xbf16> loc(#loc78)
    %912 = ttir.empty() : tensor<6x112x14x14xbf16> loc(#loc243)
    %913 = "ttir.add"(%911, %829, %912) : (tensor<6x112x14x14xbf16>, tensor<6x112x14x14xbf16>, tensor<6x112x14x14xbf16>) -> tensor<6x112x14x14xbf16> loc(#loc243)
    %914 = ttir.empty() : tensor<6x14x112x14xbf16> loc(#loc524)
    %915 = "ttir.transpose"(%913, %914) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x112x14x14xbf16>, tensor<6x14x112x14xbf16>) -> tensor<6x14x112x14xbf16> loc(#loc524)
    %916 = ttir.empty() : tensor<6x14x14x112xbf16> loc(#loc525)
    %917 = "ttir.transpose"(%915, %916) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x112x14xbf16>, tensor<6x14x14x112xbf16>) -> tensor<6x14x14x112xbf16> loc(#loc525)
    %918 = ttir.empty() : tensor<6x14x14x672xbf16> loc(#loc526)
    %919 = "ttir.conv2d"(%917, %arg176, %918) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x14x14x112xbf16>, tensor<672x112x1x1xbf16>, tensor<6x14x14x672xbf16>) -> tensor<6x14x14x672xbf16> loc(#loc526)
    %920 = ttir.empty() : tensor<6x14x672x14xbf16> loc(#loc527)
    %921 = "ttir.transpose"(%919, %920) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x14x672xbf16>, tensor<6x14x672x14xbf16>) -> tensor<6x14x672x14xbf16> loc(#loc527)
    %922 = ttir.empty() : tensor<6x672x14x14xbf16> loc(#loc528)
    %923 = "ttir.transpose"(%921, %922) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x14x672x14xbf16>, tensor<6x672x14x14xbf16>) -> tensor<6x672x14x14xbf16> loc(#loc528)
    %924 = ttir.empty() : tensor<6x672x14x14xbf16> loc(#loc79)
    %925 = "ttir.multiply"(%923, %arg67, %924) : (tensor<6x672x14x14xbf16>, tensor<1x672x1x1xbf16>, tensor<6x672x14x14xbf16>) -> tensor<6x672x14x14xbf16> loc(#loc79)
    %926 = ttir.empty() : tensor<6x672x14x14xbf16> loc(#loc80)
    %927 = "ttir.add"(%925, %arg68, %926) : (tensor<6x672x14x14xbf16>, tensor<1x672x1x1xbf16>, tensor<6x672x14x14xbf16>) -> tensor<6x672x14x14xbf16> loc(#loc80)
    %928 = ttir.empty() : tensor<6x672x14x14xbf16> loc(#loc824)
    %929 = "ttir.sigmoid"(%927, %928) : (tensor<6x672x14x14xbf16>, tensor<6x672x14x14xbf16>) -> tensor<6x672x14x14xbf16> loc(#loc824)
    %930 = ttir.empty() : tensor<6x672x14x14xbf16> loc(#loc825)
    %931 = "ttir.multiply"(%927, %929, %930) : (tensor<6x672x14x14xbf16>, tensor<6x672x14x14xbf16>, tensor<6x672x14x14xbf16>) -> tensor<6x672x14x14xbf16> loc(#loc825)
    %932 = ttir.empty() : tensor<6x14x672x14xbf16> loc(#loc530)
    %933 = "ttir.transpose"(%931, %932) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x672x14x14xbf16>, tensor<6x14x672x14xbf16>) -> tensor<6x14x672x14xbf16> loc(#loc530)
    %934 = ttir.empty() : tensor<6x14x14x672xbf16> loc(#loc531)
    %935 = "ttir.transpose"(%933, %934) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x14x672x14xbf16>, tensor<6x14x14x672xbf16>) -> tensor<6x14x14x672xbf16> loc(#loc531)
    %936 = ttir.empty() : tensor<6x7x7x672xbf16> loc(#loc532)
    %937 = "ttir.conv2d"(%935, %arg177, %936) <{dilation = array<i32: 1, 1>, groups = 672 : i32, padding = array<i32: 2, 2, 2, 2>, stride = array<i32: 2, 2>}> {channel_last = 1 : si32} : (tensor<6x14x14x672xbf16>, tensor<672x1x5x5xbf16>, tensor<6x7x7x672xbf16>) -> tensor<6x7x7x672xbf16> loc(#loc532)
    %938 = ttir.empty() : tensor<6x7x672x7xbf16> loc(#loc533)
    %939 = "ttir.transpose"(%937, %938) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x7x672xbf16>, tensor<6x7x672x7xbf16>) -> tensor<6x7x672x7xbf16> loc(#loc533)
    %940 = ttir.empty() : tensor<6x672x7x7xbf16> loc(#loc534)
    %941 = "ttir.transpose"(%939, %940) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x7x672x7xbf16>, tensor<6x672x7x7xbf16>) -> tensor<6x672x7x7xbf16> loc(#loc534)
    %942 = ttir.empty() : tensor<6x672x7x7xbf16> loc(#loc81)
    %943 = "ttir.multiply"(%941, %arg69, %942) : (tensor<6x672x7x7xbf16>, tensor<1x672x1x1xbf16>, tensor<6x672x7x7xbf16>) -> tensor<6x672x7x7xbf16> loc(#loc81)
    %944 = ttir.empty() : tensor<6x672x7x7xbf16> loc(#loc82)
    %945 = "ttir.add"(%943, %arg70, %944) : (tensor<6x672x7x7xbf16>, tensor<1x672x1x1xbf16>, tensor<6x672x7x7xbf16>) -> tensor<6x672x7x7xbf16> loc(#loc82)
    %946 = ttir.empty() : tensor<6x672x7x7xbf16> loc(#loc826)
    %947 = "ttir.sigmoid"(%945, %946) : (tensor<6x672x7x7xbf16>, tensor<6x672x7x7xbf16>) -> tensor<6x672x7x7xbf16> loc(#loc826)
    %948 = ttir.empty() : tensor<6x672x7x7xbf16> loc(#loc827)
    %949 = "ttir.multiply"(%945, %947, %948) : (tensor<6x672x7x7xbf16>, tensor<6x672x7x7xbf16>, tensor<6x672x7x7xbf16>) -> tensor<6x672x7x7xbf16> loc(#loc827)
    %950 = ttir.empty() : tensor<6x672x1x7xbf16> loc(#loc83)
    %951 = "ttir.mean"(%949, %950) <{dim_arg = [-2 : i32], keep_dim = true}> : (tensor<6x672x7x7xbf16>, tensor<6x672x1x7xbf16>) -> tensor<6x672x1x7xbf16> loc(#loc83)
    %952 = ttir.empty() : tensor<6x672x1x1xbf16> loc(#loc536)
    %953 = "ttir.mean"(%951, %952) <{dim_arg = [-1 : i32], keep_dim = true}> : (tensor<6x672x1x7xbf16>, tensor<6x672x1x1xbf16>) -> tensor<6x672x1x1xbf16> loc(#loc536)
    %954 = ttir.empty() : tensor<6x1x672x1xbf16> loc(#loc828)
    %955 = "ttir.transpose"(%953, %954) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x672x1x1xbf16>, tensor<6x1x672x1xbf16>) -> tensor<6x1x672x1xbf16> loc(#loc828)
    %956 = ttir.empty() : tensor<6x1x1x672xbf16> loc(#loc829)
    %957 = "ttir.transpose"(%955, %956) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x672x1xbf16>, tensor<6x1x1x672xbf16>) -> tensor<6x1x1x672xbf16> loc(#loc829)
    %958 = ttir.empty() : tensor<6x1x1x28xbf16> loc(#loc830)
    %959 = "ttir.conv2d"(%957, %arg178, %arg179, %958) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x672xbf16>, tensor<28x672x1x1xbf16>, tensor<1x1x1x28xbf16>, tensor<6x1x1x28xbf16>) -> tensor<6x1x1x28xbf16> loc(#loc830)
    %960 = ttir.empty() : tensor<6x1x28x1xbf16> loc(#loc831)
    %961 = "ttir.transpose"(%959, %960) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x28xbf16>, tensor<6x1x28x1xbf16>) -> tensor<6x1x28x1xbf16> loc(#loc831)
    %962 = ttir.empty() : tensor<6x28x1x1xbf16> loc(#loc832)
    %963 = "ttir.transpose"(%961, %962) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x28x1xbf16>, tensor<6x28x1x1xbf16>) -> tensor<6x28x1x1xbf16> loc(#loc832)
    %964 = ttir.empty() : tensor<6x28x1x1xbf16> loc(#loc833)
    %965 = "ttir.sigmoid"(%963, %964) : (tensor<6x28x1x1xbf16>, tensor<6x28x1x1xbf16>) -> tensor<6x28x1x1xbf16> loc(#loc833)
    %966 = ttir.empty() : tensor<6x28x1x1xbf16> loc(#loc834)
    %967 = "ttir.multiply"(%963, %965, %966) : (tensor<6x28x1x1xbf16>, tensor<6x28x1x1xbf16>, tensor<6x28x1x1xbf16>) -> tensor<6x28x1x1xbf16> loc(#loc834)
    %968 = ttir.empty() : tensor<6x1x28x1xbf16> loc(#loc835)
    %969 = "ttir.transpose"(%967, %968) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x28x1x1xbf16>, tensor<6x1x28x1xbf16>) -> tensor<6x1x28x1xbf16> loc(#loc835)
    %970 = ttir.empty() : tensor<6x1x1x28xbf16> loc(#loc836)
    %971 = "ttir.transpose"(%969, %970) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x28x1xbf16>, tensor<6x1x1x28xbf16>) -> tensor<6x1x1x28xbf16> loc(#loc836)
    %972 = ttir.empty() : tensor<6x1x1x672xbf16> loc(#loc837)
    %973 = "ttir.conv2d"(%971, %arg180, %arg181, %972) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x28xbf16>, tensor<672x28x1x1xbf16>, tensor<1x1x1x672xbf16>, tensor<6x1x1x672xbf16>) -> tensor<6x1x1x672xbf16> loc(#loc837)
    %974 = ttir.empty() : tensor<6x1x672x1xbf16> loc(#loc838)
    %975 = "ttir.transpose"(%973, %974) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x672xbf16>, tensor<6x1x672x1xbf16>) -> tensor<6x1x672x1xbf16> loc(#loc838)
    %976 = ttir.empty() : tensor<6x672x1x1xbf16> loc(#loc839)
    %977 = "ttir.transpose"(%975, %976) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x672x1xbf16>, tensor<6x672x1x1xbf16>) -> tensor<6x672x1x1xbf16> loc(#loc839)
    %978 = ttir.empty() : tensor<6x672x1x1xbf16> loc(#loc840)
    %979 = "ttir.sigmoid"(%977, %978) : (tensor<6x672x1x1xbf16>, tensor<6x672x1x1xbf16>) -> tensor<6x672x1x1xbf16> loc(#loc840)
    %980 = ttir.empty() : tensor<6x672x7x7xbf16> loc(#loc541)
    %981 = "ttir.multiply"(%949, %979, %980) : (tensor<6x672x7x7xbf16>, tensor<6x672x1x1xbf16>, tensor<6x672x7x7xbf16>) -> tensor<6x672x7x7xbf16> loc(#loc541)
    %982 = ttir.empty() : tensor<6x7x672x7xbf16> loc(#loc542)
    %983 = "ttir.transpose"(%981, %982) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x672x7x7xbf16>, tensor<6x7x672x7xbf16>) -> tensor<6x7x672x7xbf16> loc(#loc542)
    %984 = ttir.empty() : tensor<6x7x7x672xbf16> loc(#loc543)
    %985 = "ttir.transpose"(%983, %984) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x672x7xbf16>, tensor<6x7x7x672xbf16>) -> tensor<6x7x7x672xbf16> loc(#loc543)
    %986 = ttir.empty() : tensor<6x7x7x192xbf16> loc(#loc544)
    %987 = "ttir.conv2d"(%985, %arg182, %986) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x7x7x672xbf16>, tensor<192x672x1x1xbf16>, tensor<6x7x7x192xbf16>) -> tensor<6x7x7x192xbf16> loc(#loc544)
    %988 = ttir.empty() : tensor<6x7x192x7xbf16> loc(#loc545)
    %989 = "ttir.transpose"(%987, %988) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x7x192xbf16>, tensor<6x7x192x7xbf16>) -> tensor<6x7x192x7xbf16> loc(#loc545)
    %990 = ttir.empty() : tensor<6x192x7x7xbf16> loc(#loc546)
    %991 = "ttir.transpose"(%989, %990) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x7x192x7xbf16>, tensor<6x192x7x7xbf16>) -> tensor<6x192x7x7xbf16> loc(#loc546)
    %992 = ttir.empty() : tensor<6x192x7x7xbf16> loc(#loc84)
    %993 = "ttir.multiply"(%991, %arg71, %992) : (tensor<6x192x7x7xbf16>, tensor<1x192x1x1xbf16>, tensor<6x192x7x7xbf16>) -> tensor<6x192x7x7xbf16> loc(#loc84)
    %994 = ttir.empty() : tensor<6x192x7x7xbf16> loc(#loc85)
    %995 = "ttir.add"(%993, %arg72, %994) : (tensor<6x192x7x7xbf16>, tensor<1x192x1x1xbf16>, tensor<6x192x7x7xbf16>) -> tensor<6x192x7x7xbf16> loc(#loc85)
    %996 = ttir.empty() : tensor<6x7x192x7xbf16> loc(#loc547)
    %997 = "ttir.transpose"(%995, %996) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x192x7x7xbf16>, tensor<6x7x192x7xbf16>) -> tensor<6x7x192x7xbf16> loc(#loc547)
    %998 = ttir.empty() : tensor<6x7x7x192xbf16> loc(#loc548)
    %999 = "ttir.transpose"(%997, %998) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x192x7xbf16>, tensor<6x7x7x192xbf16>) -> tensor<6x7x7x192xbf16> loc(#loc548)
    %1000 = ttir.empty() : tensor<6x7x7x1152xbf16> loc(#loc549)
    %1001 = "ttir.conv2d"(%999, %arg183, %1000) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x7x7x192xbf16>, tensor<1152x192x1x1xbf16>, tensor<6x7x7x1152xbf16>) -> tensor<6x7x7x1152xbf16> loc(#loc549)
    %1002 = ttir.empty() : tensor<6x7x1152x7xbf16> loc(#loc550)
    %1003 = "ttir.transpose"(%1001, %1002) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x7x1152xbf16>, tensor<6x7x1152x7xbf16>) -> tensor<6x7x1152x7xbf16> loc(#loc550)
    %1004 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc551)
    %1005 = "ttir.transpose"(%1003, %1004) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x7x1152x7xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc551)
    %1006 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc86)
    %1007 = "ttir.multiply"(%1005, %arg73, %1006) : (tensor<6x1152x7x7xbf16>, tensor<1x1152x1x1xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc86)
    %1008 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc87)
    %1009 = "ttir.add"(%1007, %arg74, %1008) : (tensor<6x1152x7x7xbf16>, tensor<1x1152x1x1xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc87)
    %1010 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc841)
    %1011 = "ttir.sigmoid"(%1009, %1010) : (tensor<6x1152x7x7xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc841)
    %1012 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc842)
    %1013 = "ttir.multiply"(%1009, %1011, %1012) : (tensor<6x1152x7x7xbf16>, tensor<6x1152x7x7xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc842)
    %1014 = ttir.empty() : tensor<6x7x1152x7xbf16> loc(#loc553)
    %1015 = "ttir.transpose"(%1013, %1014) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1152x7x7xbf16>, tensor<6x7x1152x7xbf16>) -> tensor<6x7x1152x7xbf16> loc(#loc553)
    %1016 = ttir.empty() : tensor<6x7x7x1152xbf16> loc(#loc554)
    %1017 = "ttir.transpose"(%1015, %1016) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x1152x7xbf16>, tensor<6x7x7x1152xbf16>) -> tensor<6x7x7x1152xbf16> loc(#loc554)
    %1018 = ttir.empty() : tensor<6x7x7x1152xbf16> loc(#loc555)
    %1019 = "ttir.conv2d"(%1017, %arg184, %1018) <{dilation = array<i32: 1, 1>, groups = 1152 : i32, padding = array<i32: 2, 2, 2, 2>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x7x7x1152xbf16>, tensor<1152x1x5x5xbf16>, tensor<6x7x7x1152xbf16>) -> tensor<6x7x7x1152xbf16> loc(#loc555)
    %1020 = ttir.empty() : tensor<6x7x1152x7xbf16> loc(#loc556)
    %1021 = "ttir.transpose"(%1019, %1020) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x7x1152xbf16>, tensor<6x7x1152x7xbf16>) -> tensor<6x7x1152x7xbf16> loc(#loc556)
    %1022 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc557)
    %1023 = "ttir.transpose"(%1021, %1022) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x7x1152x7xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc557)
    %1024 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc88)
    %1025 = "ttir.multiply"(%1023, %arg75, %1024) : (tensor<6x1152x7x7xbf16>, tensor<1x1152x1x1xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc88)
    %1026 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc89)
    %1027 = "ttir.add"(%1025, %arg76, %1026) : (tensor<6x1152x7x7xbf16>, tensor<1x1152x1x1xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc89)
    %1028 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc843)
    %1029 = "ttir.sigmoid"(%1027, %1028) : (tensor<6x1152x7x7xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc843)
    %1030 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc844)
    %1031 = "ttir.multiply"(%1027, %1029, %1030) : (tensor<6x1152x7x7xbf16>, tensor<6x1152x7x7xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc844)
    %1032 = ttir.empty() : tensor<6x1152x1x7xbf16> loc(#loc90)
    %1033 = "ttir.mean"(%1031, %1032) <{dim_arg = [-2 : i32], keep_dim = true}> : (tensor<6x1152x7x7xbf16>, tensor<6x1152x1x7xbf16>) -> tensor<6x1152x1x7xbf16> loc(#loc90)
    %1034 = ttir.empty() : tensor<6x1152x1x1xbf16> loc(#loc559)
    %1035 = "ttir.mean"(%1033, %1034) <{dim_arg = [-1 : i32], keep_dim = true}> : (tensor<6x1152x1x7xbf16>, tensor<6x1152x1x1xbf16>) -> tensor<6x1152x1x1xbf16> loc(#loc559)
    %1036 = ttir.empty() : tensor<6x1x1152x1xbf16> loc(#loc845)
    %1037 = "ttir.transpose"(%1035, %1036) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1152x1x1xbf16>, tensor<6x1x1152x1xbf16>) -> tensor<6x1x1152x1xbf16> loc(#loc845)
    %1038 = ttir.empty() : tensor<6x1x1x1152xbf16> loc(#loc846)
    %1039 = "ttir.transpose"(%1037, %1038) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1152x1xbf16>, tensor<6x1x1x1152xbf16>) -> tensor<6x1x1x1152xbf16> loc(#loc846)
    %1040 = ttir.empty() : tensor<6x1x1x48xbf16> loc(#loc847)
    %1041 = "ttir.conv2d"(%1039, %arg185, %arg186, %1040) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x1152xbf16>, tensor<48x1152x1x1xbf16>, tensor<1x1x1x48xbf16>, tensor<6x1x1x48xbf16>) -> tensor<6x1x1x48xbf16> loc(#loc847)
    %1042 = ttir.empty() : tensor<6x1x48x1xbf16> loc(#loc848)
    %1043 = "ttir.transpose"(%1041, %1042) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x48xbf16>, tensor<6x1x48x1xbf16>) -> tensor<6x1x48x1xbf16> loc(#loc848)
    %1044 = ttir.empty() : tensor<6x48x1x1xbf16> loc(#loc849)
    %1045 = "ttir.transpose"(%1043, %1044) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x48x1xbf16>, tensor<6x48x1x1xbf16>) -> tensor<6x48x1x1xbf16> loc(#loc849)
    %1046 = ttir.empty() : tensor<6x48x1x1xbf16> loc(#loc850)
    %1047 = "ttir.sigmoid"(%1045, %1046) : (tensor<6x48x1x1xbf16>, tensor<6x48x1x1xbf16>) -> tensor<6x48x1x1xbf16> loc(#loc850)
    %1048 = ttir.empty() : tensor<6x48x1x1xbf16> loc(#loc851)
    %1049 = "ttir.multiply"(%1045, %1047, %1048) : (tensor<6x48x1x1xbf16>, tensor<6x48x1x1xbf16>, tensor<6x48x1x1xbf16>) -> tensor<6x48x1x1xbf16> loc(#loc851)
    %1050 = ttir.empty() : tensor<6x1x48x1xbf16> loc(#loc852)
    %1051 = "ttir.transpose"(%1049, %1050) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x48x1x1xbf16>, tensor<6x1x48x1xbf16>) -> tensor<6x1x48x1xbf16> loc(#loc852)
    %1052 = ttir.empty() : tensor<6x1x1x48xbf16> loc(#loc853)
    %1053 = "ttir.transpose"(%1051, %1052) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x48x1xbf16>, tensor<6x1x1x48xbf16>) -> tensor<6x1x1x48xbf16> loc(#loc853)
    %1054 = ttir.empty() : tensor<6x1x1x1152xbf16> loc(#loc854)
    %1055 = "ttir.conv2d"(%1053, %arg187, %arg188, %1054) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x48xbf16>, tensor<1152x48x1x1xbf16>, tensor<1x1x1x1152xbf16>, tensor<6x1x1x1152xbf16>) -> tensor<6x1x1x1152xbf16> loc(#loc854)
    %1056 = ttir.empty() : tensor<6x1x1152x1xbf16> loc(#loc855)
    %1057 = "ttir.transpose"(%1055, %1056) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x1152xbf16>, tensor<6x1x1152x1xbf16>) -> tensor<6x1x1152x1xbf16> loc(#loc855)
    %1058 = ttir.empty() : tensor<6x1152x1x1xbf16> loc(#loc856)
    %1059 = "ttir.transpose"(%1057, %1058) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x1152x1xbf16>, tensor<6x1152x1x1xbf16>) -> tensor<6x1152x1x1xbf16> loc(#loc856)
    %1060 = ttir.empty() : tensor<6x1152x1x1xbf16> loc(#loc857)
    %1061 = "ttir.sigmoid"(%1059, %1060) : (tensor<6x1152x1x1xbf16>, tensor<6x1152x1x1xbf16>) -> tensor<6x1152x1x1xbf16> loc(#loc857)
    %1062 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc564)
    %1063 = "ttir.multiply"(%1031, %1061, %1062) : (tensor<6x1152x7x7xbf16>, tensor<6x1152x1x1xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc564)
    %1064 = ttir.empty() : tensor<6x7x1152x7xbf16> loc(#loc565)
    %1065 = "ttir.transpose"(%1063, %1064) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1152x7x7xbf16>, tensor<6x7x1152x7xbf16>) -> tensor<6x7x1152x7xbf16> loc(#loc565)
    %1066 = ttir.empty() : tensor<6x7x7x1152xbf16> loc(#loc566)
    %1067 = "ttir.transpose"(%1065, %1066) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x1152x7xbf16>, tensor<6x7x7x1152xbf16>) -> tensor<6x7x7x1152xbf16> loc(#loc566)
    %1068 = ttir.empty() : tensor<6x7x7x192xbf16> loc(#loc567)
    %1069 = "ttir.conv2d"(%1067, %arg189, %1068) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x7x7x1152xbf16>, tensor<192x1152x1x1xbf16>, tensor<6x7x7x192xbf16>) -> tensor<6x7x7x192xbf16> loc(#loc567)
    %1070 = ttir.empty() : tensor<6x7x192x7xbf16> loc(#loc568)
    %1071 = "ttir.transpose"(%1069, %1070) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x7x192xbf16>, tensor<6x7x192x7xbf16>) -> tensor<6x7x192x7xbf16> loc(#loc568)
    %1072 = ttir.empty() : tensor<6x192x7x7xbf16> loc(#loc569)
    %1073 = "ttir.transpose"(%1071, %1072) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x7x192x7xbf16>, tensor<6x192x7x7xbf16>) -> tensor<6x192x7x7xbf16> loc(#loc569)
    %1074 = ttir.empty() : tensor<6x192x7x7xbf16> loc(#loc91)
    %1075 = "ttir.multiply"(%1073, %arg77, %1074) : (tensor<6x192x7x7xbf16>, tensor<1x192x1x1xbf16>, tensor<6x192x7x7xbf16>) -> tensor<6x192x7x7xbf16> loc(#loc91)
    %1076 = ttir.empty() : tensor<6x192x7x7xbf16> loc(#loc92)
    %1077 = "ttir.add"(%1075, %arg78, %1076) : (tensor<6x192x7x7xbf16>, tensor<1x192x1x1xbf16>, tensor<6x192x7x7xbf16>) -> tensor<6x192x7x7xbf16> loc(#loc92)
    %1078 = ttir.empty() : tensor<6x192x7x7xbf16> loc(#loc256)
    %1079 = "ttir.add"(%1077, %995, %1078) : (tensor<6x192x7x7xbf16>, tensor<6x192x7x7xbf16>, tensor<6x192x7x7xbf16>) -> tensor<6x192x7x7xbf16> loc(#loc256)
    %1080 = ttir.empty() : tensor<6x7x192x7xbf16> loc(#loc570)
    %1081 = "ttir.transpose"(%1079, %1080) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x192x7x7xbf16>, tensor<6x7x192x7xbf16>) -> tensor<6x7x192x7xbf16> loc(#loc570)
    %1082 = ttir.empty() : tensor<6x7x7x192xbf16> loc(#loc571)
    %1083 = "ttir.transpose"(%1081, %1082) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x192x7xbf16>, tensor<6x7x7x192xbf16>) -> tensor<6x7x7x192xbf16> loc(#loc571)
    %1084 = ttir.empty() : tensor<6x7x7x1152xbf16> loc(#loc572)
    %1085 = "ttir.conv2d"(%1083, %arg190, %1084) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x7x7x192xbf16>, tensor<1152x192x1x1xbf16>, tensor<6x7x7x1152xbf16>) -> tensor<6x7x7x1152xbf16> loc(#loc572)
    %1086 = ttir.empty() : tensor<6x7x1152x7xbf16> loc(#loc573)
    %1087 = "ttir.transpose"(%1085, %1086) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x7x1152xbf16>, tensor<6x7x1152x7xbf16>) -> tensor<6x7x1152x7xbf16> loc(#loc573)
    %1088 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc574)
    %1089 = "ttir.transpose"(%1087, %1088) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x7x1152x7xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc574)
    %1090 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc93)
    %1091 = "ttir.multiply"(%1089, %arg79, %1090) : (tensor<6x1152x7x7xbf16>, tensor<1x1152x1x1xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc93)
    %1092 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc94)
    %1093 = "ttir.add"(%1091, %arg80, %1092) : (tensor<6x1152x7x7xbf16>, tensor<1x1152x1x1xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc94)
    %1094 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc858)
    %1095 = "ttir.sigmoid"(%1093, %1094) : (tensor<6x1152x7x7xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc858)
    %1096 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc859)
    %1097 = "ttir.multiply"(%1093, %1095, %1096) : (tensor<6x1152x7x7xbf16>, tensor<6x1152x7x7xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc859)
    %1098 = ttir.empty() : tensor<6x7x1152x7xbf16> loc(#loc576)
    %1099 = "ttir.transpose"(%1097, %1098) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1152x7x7xbf16>, tensor<6x7x1152x7xbf16>) -> tensor<6x7x1152x7xbf16> loc(#loc576)
    %1100 = ttir.empty() : tensor<6x7x7x1152xbf16> loc(#loc577)
    %1101 = "ttir.transpose"(%1099, %1100) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x1152x7xbf16>, tensor<6x7x7x1152xbf16>) -> tensor<6x7x7x1152xbf16> loc(#loc577)
    %1102 = ttir.empty() : tensor<6x7x7x1152xbf16> loc(#loc578)
    %1103 = "ttir.conv2d"(%1101, %arg191, %1102) <{dilation = array<i32: 1, 1>, groups = 1152 : i32, padding = array<i32: 2, 2, 2, 2>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x7x7x1152xbf16>, tensor<1152x1x5x5xbf16>, tensor<6x7x7x1152xbf16>) -> tensor<6x7x7x1152xbf16> loc(#loc578)
    %1104 = ttir.empty() : tensor<6x7x1152x7xbf16> loc(#loc579)
    %1105 = "ttir.transpose"(%1103, %1104) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x7x1152xbf16>, tensor<6x7x1152x7xbf16>) -> tensor<6x7x1152x7xbf16> loc(#loc579)
    %1106 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc580)
    %1107 = "ttir.transpose"(%1105, %1106) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x7x1152x7xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc580)
    %1108 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc95)
    %1109 = "ttir.multiply"(%1107, %arg81, %1108) : (tensor<6x1152x7x7xbf16>, tensor<1x1152x1x1xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc95)
    %1110 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc96)
    %1111 = "ttir.add"(%1109, %arg82, %1110) : (tensor<6x1152x7x7xbf16>, tensor<1x1152x1x1xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc96)
    %1112 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc860)
    %1113 = "ttir.sigmoid"(%1111, %1112) : (tensor<6x1152x7x7xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc860)
    %1114 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc861)
    %1115 = "ttir.multiply"(%1111, %1113, %1114) : (tensor<6x1152x7x7xbf16>, tensor<6x1152x7x7xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc861)
    %1116 = ttir.empty() : tensor<6x1152x1x7xbf16> loc(#loc97)
    %1117 = "ttir.mean"(%1115, %1116) <{dim_arg = [-2 : i32], keep_dim = true}> : (tensor<6x1152x7x7xbf16>, tensor<6x1152x1x7xbf16>) -> tensor<6x1152x1x7xbf16> loc(#loc97)
    %1118 = ttir.empty() : tensor<6x1152x1x1xbf16> loc(#loc582)
    %1119 = "ttir.mean"(%1117, %1118) <{dim_arg = [-1 : i32], keep_dim = true}> : (tensor<6x1152x1x7xbf16>, tensor<6x1152x1x1xbf16>) -> tensor<6x1152x1x1xbf16> loc(#loc582)
    %1120 = ttir.empty() : tensor<6x1x1152x1xbf16> loc(#loc862)
    %1121 = "ttir.transpose"(%1119, %1120) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1152x1x1xbf16>, tensor<6x1x1152x1xbf16>) -> tensor<6x1x1152x1xbf16> loc(#loc862)
    %1122 = ttir.empty() : tensor<6x1x1x1152xbf16> loc(#loc863)
    %1123 = "ttir.transpose"(%1121, %1122) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1152x1xbf16>, tensor<6x1x1x1152xbf16>) -> tensor<6x1x1x1152xbf16> loc(#loc863)
    %1124 = ttir.empty() : tensor<6x1x1x48xbf16> loc(#loc864)
    %1125 = "ttir.conv2d"(%1123, %arg192, %arg193, %1124) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x1152xbf16>, tensor<48x1152x1x1xbf16>, tensor<1x1x1x48xbf16>, tensor<6x1x1x48xbf16>) -> tensor<6x1x1x48xbf16> loc(#loc864)
    %1126 = ttir.empty() : tensor<6x1x48x1xbf16> loc(#loc865)
    %1127 = "ttir.transpose"(%1125, %1126) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x48xbf16>, tensor<6x1x48x1xbf16>) -> tensor<6x1x48x1xbf16> loc(#loc865)
    %1128 = ttir.empty() : tensor<6x48x1x1xbf16> loc(#loc866)
    %1129 = "ttir.transpose"(%1127, %1128) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x48x1xbf16>, tensor<6x48x1x1xbf16>) -> tensor<6x48x1x1xbf16> loc(#loc866)
    %1130 = ttir.empty() : tensor<6x48x1x1xbf16> loc(#loc867)
    %1131 = "ttir.sigmoid"(%1129, %1130) : (tensor<6x48x1x1xbf16>, tensor<6x48x1x1xbf16>) -> tensor<6x48x1x1xbf16> loc(#loc867)
    %1132 = ttir.empty() : tensor<6x48x1x1xbf16> loc(#loc868)
    %1133 = "ttir.multiply"(%1129, %1131, %1132) : (tensor<6x48x1x1xbf16>, tensor<6x48x1x1xbf16>, tensor<6x48x1x1xbf16>) -> tensor<6x48x1x1xbf16> loc(#loc868)
    %1134 = ttir.empty() : tensor<6x1x48x1xbf16> loc(#loc869)
    %1135 = "ttir.transpose"(%1133, %1134) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x48x1x1xbf16>, tensor<6x1x48x1xbf16>) -> tensor<6x1x48x1xbf16> loc(#loc869)
    %1136 = ttir.empty() : tensor<6x1x1x48xbf16> loc(#loc870)
    %1137 = "ttir.transpose"(%1135, %1136) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x48x1xbf16>, tensor<6x1x1x48xbf16>) -> tensor<6x1x1x48xbf16> loc(#loc870)
    %1138 = ttir.empty() : tensor<6x1x1x1152xbf16> loc(#loc871)
    %1139 = "ttir.conv2d"(%1137, %arg194, %arg195, %1138) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x48xbf16>, tensor<1152x48x1x1xbf16>, tensor<1x1x1x1152xbf16>, tensor<6x1x1x1152xbf16>) -> tensor<6x1x1x1152xbf16> loc(#loc871)
    %1140 = ttir.empty() : tensor<6x1x1152x1xbf16> loc(#loc872)
    %1141 = "ttir.transpose"(%1139, %1140) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x1152xbf16>, tensor<6x1x1152x1xbf16>) -> tensor<6x1x1152x1xbf16> loc(#loc872)
    %1142 = ttir.empty() : tensor<6x1152x1x1xbf16> loc(#loc873)
    %1143 = "ttir.transpose"(%1141, %1142) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x1152x1xbf16>, tensor<6x1152x1x1xbf16>) -> tensor<6x1152x1x1xbf16> loc(#loc873)
    %1144 = ttir.empty() : tensor<6x1152x1x1xbf16> loc(#loc874)
    %1145 = "ttir.sigmoid"(%1143, %1144) : (tensor<6x1152x1x1xbf16>, tensor<6x1152x1x1xbf16>) -> tensor<6x1152x1x1xbf16> loc(#loc874)
    %1146 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc587)
    %1147 = "ttir.multiply"(%1115, %1145, %1146) : (tensor<6x1152x7x7xbf16>, tensor<6x1152x1x1xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc587)
    %1148 = ttir.empty() : tensor<6x7x1152x7xbf16> loc(#loc588)
    %1149 = "ttir.transpose"(%1147, %1148) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1152x7x7xbf16>, tensor<6x7x1152x7xbf16>) -> tensor<6x7x1152x7xbf16> loc(#loc588)
    %1150 = ttir.empty() : tensor<6x7x7x1152xbf16> loc(#loc589)
    %1151 = "ttir.transpose"(%1149, %1150) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x1152x7xbf16>, tensor<6x7x7x1152xbf16>) -> tensor<6x7x7x1152xbf16> loc(#loc589)
    %1152 = ttir.empty() : tensor<6x7x7x192xbf16> loc(#loc590)
    %1153 = "ttir.conv2d"(%1151, %arg196, %1152) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x7x7x1152xbf16>, tensor<192x1152x1x1xbf16>, tensor<6x7x7x192xbf16>) -> tensor<6x7x7x192xbf16> loc(#loc590)
    %1154 = ttir.empty() : tensor<6x7x192x7xbf16> loc(#loc591)
    %1155 = "ttir.transpose"(%1153, %1154) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x7x192xbf16>, tensor<6x7x192x7xbf16>) -> tensor<6x7x192x7xbf16> loc(#loc591)
    %1156 = ttir.empty() : tensor<6x192x7x7xbf16> loc(#loc592)
    %1157 = "ttir.transpose"(%1155, %1156) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x7x192x7xbf16>, tensor<6x192x7x7xbf16>) -> tensor<6x192x7x7xbf16> loc(#loc592)
    %1158 = ttir.empty() : tensor<6x192x7x7xbf16> loc(#loc98)
    %1159 = "ttir.multiply"(%1157, %arg83, %1158) : (tensor<6x192x7x7xbf16>, tensor<1x192x1x1xbf16>, tensor<6x192x7x7xbf16>) -> tensor<6x192x7x7xbf16> loc(#loc98)
    %1160 = ttir.empty() : tensor<6x192x7x7xbf16> loc(#loc99)
    %1161 = "ttir.add"(%1159, %arg84, %1160) : (tensor<6x192x7x7xbf16>, tensor<1x192x1x1xbf16>, tensor<6x192x7x7xbf16>) -> tensor<6x192x7x7xbf16> loc(#loc99)
    %1162 = ttir.empty() : tensor<6x192x7x7xbf16> loc(#loc263)
    %1163 = "ttir.add"(%1161, %1079, %1162) : (tensor<6x192x7x7xbf16>, tensor<6x192x7x7xbf16>, tensor<6x192x7x7xbf16>) -> tensor<6x192x7x7xbf16> loc(#loc263)
    %1164 = ttir.empty() : tensor<6x7x192x7xbf16> loc(#loc593)
    %1165 = "ttir.transpose"(%1163, %1164) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x192x7x7xbf16>, tensor<6x7x192x7xbf16>) -> tensor<6x7x192x7xbf16> loc(#loc593)
    %1166 = ttir.empty() : tensor<6x7x7x192xbf16> loc(#loc594)
    %1167 = "ttir.transpose"(%1165, %1166) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x192x7xbf16>, tensor<6x7x7x192xbf16>) -> tensor<6x7x7x192xbf16> loc(#loc594)
    %1168 = ttir.empty() : tensor<6x7x7x1152xbf16> loc(#loc595)
    %1169 = "ttir.conv2d"(%1167, %arg197, %1168) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x7x7x192xbf16>, tensor<1152x192x1x1xbf16>, tensor<6x7x7x1152xbf16>) -> tensor<6x7x7x1152xbf16> loc(#loc595)
    %1170 = ttir.empty() : tensor<6x7x1152x7xbf16> loc(#loc596)
    %1171 = "ttir.transpose"(%1169, %1170) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x7x1152xbf16>, tensor<6x7x1152x7xbf16>) -> tensor<6x7x1152x7xbf16> loc(#loc596)
    %1172 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc597)
    %1173 = "ttir.transpose"(%1171, %1172) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x7x1152x7xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc597)
    %1174 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc100)
    %1175 = "ttir.multiply"(%1173, %arg85, %1174) : (tensor<6x1152x7x7xbf16>, tensor<1x1152x1x1xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc100)
    %1176 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc101)
    %1177 = "ttir.add"(%1175, %arg86, %1176) : (tensor<6x1152x7x7xbf16>, tensor<1x1152x1x1xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc101)
    %1178 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc875)
    %1179 = "ttir.sigmoid"(%1177, %1178) : (tensor<6x1152x7x7xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc875)
    %1180 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc876)
    %1181 = "ttir.multiply"(%1177, %1179, %1180) : (tensor<6x1152x7x7xbf16>, tensor<6x1152x7x7xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc876)
    %1182 = ttir.empty() : tensor<6x7x1152x7xbf16> loc(#loc599)
    %1183 = "ttir.transpose"(%1181, %1182) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1152x7x7xbf16>, tensor<6x7x1152x7xbf16>) -> tensor<6x7x1152x7xbf16> loc(#loc599)
    %1184 = ttir.empty() : tensor<6x7x7x1152xbf16> loc(#loc600)
    %1185 = "ttir.transpose"(%1183, %1184) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x1152x7xbf16>, tensor<6x7x7x1152xbf16>) -> tensor<6x7x7x1152xbf16> loc(#loc600)
    %1186 = ttir.empty() : tensor<6x7x7x1152xbf16> loc(#loc601)
    %1187 = "ttir.conv2d"(%1185, %arg198, %1186) <{dilation = array<i32: 1, 1>, groups = 1152 : i32, padding = array<i32: 2, 2, 2, 2>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x7x7x1152xbf16>, tensor<1152x1x5x5xbf16>, tensor<6x7x7x1152xbf16>) -> tensor<6x7x7x1152xbf16> loc(#loc601)
    %1188 = ttir.empty() : tensor<6x7x1152x7xbf16> loc(#loc602)
    %1189 = "ttir.transpose"(%1187, %1188) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x7x1152xbf16>, tensor<6x7x1152x7xbf16>) -> tensor<6x7x1152x7xbf16> loc(#loc602)
    %1190 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc603)
    %1191 = "ttir.transpose"(%1189, %1190) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x7x1152x7xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc603)
    %1192 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc102)
    %1193 = "ttir.multiply"(%1191, %arg87, %1192) : (tensor<6x1152x7x7xbf16>, tensor<1x1152x1x1xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc102)
    %1194 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc103)
    %1195 = "ttir.add"(%1193, %arg88, %1194) : (tensor<6x1152x7x7xbf16>, tensor<1x1152x1x1xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc103)
    %1196 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc877)
    %1197 = "ttir.sigmoid"(%1195, %1196) : (tensor<6x1152x7x7xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc877)
    %1198 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc878)
    %1199 = "ttir.multiply"(%1195, %1197, %1198) : (tensor<6x1152x7x7xbf16>, tensor<6x1152x7x7xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc878)
    %1200 = ttir.empty() : tensor<6x1152x1x7xbf16> loc(#loc104)
    %1201 = "ttir.mean"(%1199, %1200) <{dim_arg = [-2 : i32], keep_dim = true}> : (tensor<6x1152x7x7xbf16>, tensor<6x1152x1x7xbf16>) -> tensor<6x1152x1x7xbf16> loc(#loc104)
    %1202 = ttir.empty() : tensor<6x1152x1x1xbf16> loc(#loc605)
    %1203 = "ttir.mean"(%1201, %1202) <{dim_arg = [-1 : i32], keep_dim = true}> : (tensor<6x1152x1x7xbf16>, tensor<6x1152x1x1xbf16>) -> tensor<6x1152x1x1xbf16> loc(#loc605)
    %1204 = ttir.empty() : tensor<6x1x1152x1xbf16> loc(#loc879)
    %1205 = "ttir.transpose"(%1203, %1204) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1152x1x1xbf16>, tensor<6x1x1152x1xbf16>) -> tensor<6x1x1152x1xbf16> loc(#loc879)
    %1206 = ttir.empty() : tensor<6x1x1x1152xbf16> loc(#loc880)
    %1207 = "ttir.transpose"(%1205, %1206) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1152x1xbf16>, tensor<6x1x1x1152xbf16>) -> tensor<6x1x1x1152xbf16> loc(#loc880)
    %1208 = ttir.empty() : tensor<6x1x1x48xbf16> loc(#loc881)
    %1209 = "ttir.conv2d"(%1207, %arg199, %arg200, %1208) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x1152xbf16>, tensor<48x1152x1x1xbf16>, tensor<1x1x1x48xbf16>, tensor<6x1x1x48xbf16>) -> tensor<6x1x1x48xbf16> loc(#loc881)
    %1210 = ttir.empty() : tensor<6x1x48x1xbf16> loc(#loc882)
    %1211 = "ttir.transpose"(%1209, %1210) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x48xbf16>, tensor<6x1x48x1xbf16>) -> tensor<6x1x48x1xbf16> loc(#loc882)
    %1212 = ttir.empty() : tensor<6x48x1x1xbf16> loc(#loc883)
    %1213 = "ttir.transpose"(%1211, %1212) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x48x1xbf16>, tensor<6x48x1x1xbf16>) -> tensor<6x48x1x1xbf16> loc(#loc883)
    %1214 = ttir.empty() : tensor<6x48x1x1xbf16> loc(#loc884)
    %1215 = "ttir.sigmoid"(%1213, %1214) : (tensor<6x48x1x1xbf16>, tensor<6x48x1x1xbf16>) -> tensor<6x48x1x1xbf16> loc(#loc884)
    %1216 = ttir.empty() : tensor<6x48x1x1xbf16> loc(#loc885)
    %1217 = "ttir.multiply"(%1213, %1215, %1216) : (tensor<6x48x1x1xbf16>, tensor<6x48x1x1xbf16>, tensor<6x48x1x1xbf16>) -> tensor<6x48x1x1xbf16> loc(#loc885)
    %1218 = ttir.empty() : tensor<6x1x48x1xbf16> loc(#loc886)
    %1219 = "ttir.transpose"(%1217, %1218) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x48x1x1xbf16>, tensor<6x1x48x1xbf16>) -> tensor<6x1x48x1xbf16> loc(#loc886)
    %1220 = ttir.empty() : tensor<6x1x1x48xbf16> loc(#loc887)
    %1221 = "ttir.transpose"(%1219, %1220) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x48x1xbf16>, tensor<6x1x1x48xbf16>) -> tensor<6x1x1x48xbf16> loc(#loc887)
    %1222 = ttir.empty() : tensor<6x1x1x1152xbf16> loc(#loc888)
    %1223 = "ttir.conv2d"(%1221, %arg201, %arg202, %1222) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x48xbf16>, tensor<1152x48x1x1xbf16>, tensor<1x1x1x1152xbf16>, tensor<6x1x1x1152xbf16>) -> tensor<6x1x1x1152xbf16> loc(#loc888)
    %1224 = ttir.empty() : tensor<6x1x1152x1xbf16> loc(#loc889)
    %1225 = "ttir.transpose"(%1223, %1224) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x1152xbf16>, tensor<6x1x1152x1xbf16>) -> tensor<6x1x1152x1xbf16> loc(#loc889)
    %1226 = ttir.empty() : tensor<6x1152x1x1xbf16> loc(#loc890)
    %1227 = "ttir.transpose"(%1225, %1226) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x1152x1xbf16>, tensor<6x1152x1x1xbf16>) -> tensor<6x1152x1x1xbf16> loc(#loc890)
    %1228 = ttir.empty() : tensor<6x1152x1x1xbf16> loc(#loc891)
    %1229 = "ttir.sigmoid"(%1227, %1228) : (tensor<6x1152x1x1xbf16>, tensor<6x1152x1x1xbf16>) -> tensor<6x1152x1x1xbf16> loc(#loc891)
    %1230 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc610)
    %1231 = "ttir.multiply"(%1199, %1229, %1230) : (tensor<6x1152x7x7xbf16>, tensor<6x1152x1x1xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc610)
    %1232 = ttir.empty() : tensor<6x7x1152x7xbf16> loc(#loc611)
    %1233 = "ttir.transpose"(%1231, %1232) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1152x7x7xbf16>, tensor<6x7x1152x7xbf16>) -> tensor<6x7x1152x7xbf16> loc(#loc611)
    %1234 = ttir.empty() : tensor<6x7x7x1152xbf16> loc(#loc612)
    %1235 = "ttir.transpose"(%1233, %1234) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x1152x7xbf16>, tensor<6x7x7x1152xbf16>) -> tensor<6x7x7x1152xbf16> loc(#loc612)
    %1236 = ttir.empty() : tensor<6x7x7x192xbf16> loc(#loc613)
    %1237 = "ttir.conv2d"(%1235, %arg203, %1236) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x7x7x1152xbf16>, tensor<192x1152x1x1xbf16>, tensor<6x7x7x192xbf16>) -> tensor<6x7x7x192xbf16> loc(#loc613)
    %1238 = ttir.empty() : tensor<6x7x192x7xbf16> loc(#loc614)
    %1239 = "ttir.transpose"(%1237, %1238) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x7x192xbf16>, tensor<6x7x192x7xbf16>) -> tensor<6x7x192x7xbf16> loc(#loc614)
    %1240 = ttir.empty() : tensor<6x192x7x7xbf16> loc(#loc615)
    %1241 = "ttir.transpose"(%1239, %1240) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x7x192x7xbf16>, tensor<6x192x7x7xbf16>) -> tensor<6x192x7x7xbf16> loc(#loc615)
    %1242 = ttir.empty() : tensor<6x192x7x7xbf16> loc(#loc105)
    %1243 = "ttir.multiply"(%1241, %arg89, %1242) : (tensor<6x192x7x7xbf16>, tensor<1x192x1x1xbf16>, tensor<6x192x7x7xbf16>) -> tensor<6x192x7x7xbf16> loc(#loc105)
    %1244 = ttir.empty() : tensor<6x192x7x7xbf16> loc(#loc106)
    %1245 = "ttir.add"(%1243, %arg90, %1244) : (tensor<6x192x7x7xbf16>, tensor<1x192x1x1xbf16>, tensor<6x192x7x7xbf16>) -> tensor<6x192x7x7xbf16> loc(#loc106)
    %1246 = ttir.empty() : tensor<6x192x7x7xbf16> loc(#loc270)
    %1247 = "ttir.add"(%1245, %1163, %1246) : (tensor<6x192x7x7xbf16>, tensor<6x192x7x7xbf16>, tensor<6x192x7x7xbf16>) -> tensor<6x192x7x7xbf16> loc(#loc270)
    %1248 = ttir.empty() : tensor<6x7x192x7xbf16> loc(#loc616)
    %1249 = "ttir.transpose"(%1247, %1248) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x192x7x7xbf16>, tensor<6x7x192x7xbf16>) -> tensor<6x7x192x7xbf16> loc(#loc616)
    %1250 = ttir.empty() : tensor<6x7x7x192xbf16> loc(#loc617)
    %1251 = "ttir.transpose"(%1249, %1250) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x192x7xbf16>, tensor<6x7x7x192xbf16>) -> tensor<6x7x7x192xbf16> loc(#loc617)
    %1252 = ttir.empty() : tensor<6x7x7x1152xbf16> loc(#loc618)
    %1253 = "ttir.conv2d"(%1251, %arg204, %1252) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x7x7x192xbf16>, tensor<1152x192x1x1xbf16>, tensor<6x7x7x1152xbf16>) -> tensor<6x7x7x1152xbf16> loc(#loc618)
    %1254 = ttir.empty() : tensor<6x7x1152x7xbf16> loc(#loc619)
    %1255 = "ttir.transpose"(%1253, %1254) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x7x1152xbf16>, tensor<6x7x1152x7xbf16>) -> tensor<6x7x1152x7xbf16> loc(#loc619)
    %1256 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc620)
    %1257 = "ttir.transpose"(%1255, %1256) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x7x1152x7xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc620)
    %1258 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc107)
    %1259 = "ttir.multiply"(%1257, %arg91, %1258) : (tensor<6x1152x7x7xbf16>, tensor<1x1152x1x1xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc107)
    %1260 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc108)
    %1261 = "ttir.add"(%1259, %arg92, %1260) : (tensor<6x1152x7x7xbf16>, tensor<1x1152x1x1xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc108)
    %1262 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc892)
    %1263 = "ttir.sigmoid"(%1261, %1262) : (tensor<6x1152x7x7xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc892)
    %1264 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc893)
    %1265 = "ttir.multiply"(%1261, %1263, %1264) : (tensor<6x1152x7x7xbf16>, tensor<6x1152x7x7xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc893)
    %1266 = ttir.empty() : tensor<6x7x1152x7xbf16> loc(#loc622)
    %1267 = "ttir.transpose"(%1265, %1266) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1152x7x7xbf16>, tensor<6x7x1152x7xbf16>) -> tensor<6x7x1152x7xbf16> loc(#loc622)
    %1268 = ttir.empty() : tensor<6x7x7x1152xbf16> loc(#loc623)
    %1269 = "ttir.transpose"(%1267, %1268) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x1152x7xbf16>, tensor<6x7x7x1152xbf16>) -> tensor<6x7x7x1152xbf16> loc(#loc623)
    %1270 = ttir.empty() : tensor<6x7x7x1152xbf16> loc(#loc624)
    %1271 = "ttir.conv2d"(%1269, %arg205, %1270) <{dilation = array<i32: 1, 1>, groups = 1152 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x7x7x1152xbf16>, tensor<1152x1x3x3xbf16>, tensor<6x7x7x1152xbf16>) -> tensor<6x7x7x1152xbf16> loc(#loc624)
    %1272 = ttir.empty() : tensor<6x7x1152x7xbf16> loc(#loc625)
    %1273 = "ttir.transpose"(%1271, %1272) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x7x1152xbf16>, tensor<6x7x1152x7xbf16>) -> tensor<6x7x1152x7xbf16> loc(#loc625)
    %1274 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc626)
    %1275 = "ttir.transpose"(%1273, %1274) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x7x1152x7xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc626)
    %1276 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc109)
    %1277 = "ttir.multiply"(%1275, %arg93, %1276) : (tensor<6x1152x7x7xbf16>, tensor<1x1152x1x1xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc109)
    %1278 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc110)
    %1279 = "ttir.add"(%1277, %arg94, %1278) : (tensor<6x1152x7x7xbf16>, tensor<1x1152x1x1xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc110)
    %1280 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc894)
    %1281 = "ttir.sigmoid"(%1279, %1280) : (tensor<6x1152x7x7xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc894)
    %1282 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc895)
    %1283 = "ttir.multiply"(%1279, %1281, %1282) : (tensor<6x1152x7x7xbf16>, tensor<6x1152x7x7xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc895)
    %1284 = ttir.empty() : tensor<6x1152x1x7xbf16> loc(#loc111)
    %1285 = "ttir.mean"(%1283, %1284) <{dim_arg = [-2 : i32], keep_dim = true}> : (tensor<6x1152x7x7xbf16>, tensor<6x1152x1x7xbf16>) -> tensor<6x1152x1x7xbf16> loc(#loc111)
    %1286 = ttir.empty() : tensor<6x1152x1x1xbf16> loc(#loc628)
    %1287 = "ttir.mean"(%1285, %1286) <{dim_arg = [-1 : i32], keep_dim = true}> : (tensor<6x1152x1x7xbf16>, tensor<6x1152x1x1xbf16>) -> tensor<6x1152x1x1xbf16> loc(#loc628)
    %1288 = ttir.empty() : tensor<6x1x1152x1xbf16> loc(#loc896)
    %1289 = "ttir.transpose"(%1287, %1288) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1152x1x1xbf16>, tensor<6x1x1152x1xbf16>) -> tensor<6x1x1152x1xbf16> loc(#loc896)
    %1290 = ttir.empty() : tensor<6x1x1x1152xbf16> loc(#loc897)
    %1291 = "ttir.transpose"(%1289, %1290) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1152x1xbf16>, tensor<6x1x1x1152xbf16>) -> tensor<6x1x1x1152xbf16> loc(#loc897)
    %1292 = ttir.empty() : tensor<6x1x1x48xbf16> loc(#loc898)
    %1293 = "ttir.conv2d"(%1291, %arg206, %arg207, %1292) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x1152xbf16>, tensor<48x1152x1x1xbf16>, tensor<1x1x1x48xbf16>, tensor<6x1x1x48xbf16>) -> tensor<6x1x1x48xbf16> loc(#loc898)
    %1294 = ttir.empty() : tensor<6x1x48x1xbf16> loc(#loc899)
    %1295 = "ttir.transpose"(%1293, %1294) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x48xbf16>, tensor<6x1x48x1xbf16>) -> tensor<6x1x48x1xbf16> loc(#loc899)
    %1296 = ttir.empty() : tensor<6x48x1x1xbf16> loc(#loc900)
    %1297 = "ttir.transpose"(%1295, %1296) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x48x1xbf16>, tensor<6x48x1x1xbf16>) -> tensor<6x48x1x1xbf16> loc(#loc900)
    %1298 = ttir.empty() : tensor<6x48x1x1xbf16> loc(#loc901)
    %1299 = "ttir.sigmoid"(%1297, %1298) : (tensor<6x48x1x1xbf16>, tensor<6x48x1x1xbf16>) -> tensor<6x48x1x1xbf16> loc(#loc901)
    %1300 = ttir.empty() : tensor<6x48x1x1xbf16> loc(#loc902)
    %1301 = "ttir.multiply"(%1297, %1299, %1300) : (tensor<6x48x1x1xbf16>, tensor<6x48x1x1xbf16>, tensor<6x48x1x1xbf16>) -> tensor<6x48x1x1xbf16> loc(#loc902)
    %1302 = ttir.empty() : tensor<6x1x48x1xbf16> loc(#loc903)
    %1303 = "ttir.transpose"(%1301, %1302) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x48x1x1xbf16>, tensor<6x1x48x1xbf16>) -> tensor<6x1x48x1xbf16> loc(#loc903)
    %1304 = ttir.empty() : tensor<6x1x1x48xbf16> loc(#loc904)
    %1305 = "ttir.transpose"(%1303, %1304) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x48x1xbf16>, tensor<6x1x1x48xbf16>) -> tensor<6x1x1x48xbf16> loc(#loc904)
    %1306 = ttir.empty() : tensor<6x1x1x1152xbf16> loc(#loc905)
    %1307 = "ttir.conv2d"(%1305, %arg208, %arg209, %1306) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x1x1x48xbf16>, tensor<1152x48x1x1xbf16>, tensor<1x1x1x1152xbf16>, tensor<6x1x1x1152xbf16>) -> tensor<6x1x1x1152xbf16> loc(#loc905)
    %1308 = ttir.empty() : tensor<6x1x1152x1xbf16> loc(#loc906)
    %1309 = "ttir.transpose"(%1307, %1308) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x1x1x1152xbf16>, tensor<6x1x1152x1xbf16>) -> tensor<6x1x1152x1xbf16> loc(#loc906)
    %1310 = ttir.empty() : tensor<6x1152x1x1xbf16> loc(#loc907)
    %1311 = "ttir.transpose"(%1309, %1310) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1x1152x1xbf16>, tensor<6x1152x1x1xbf16>) -> tensor<6x1152x1x1xbf16> loc(#loc907)
    %1312 = ttir.empty() : tensor<6x1152x1x1xbf16> loc(#loc908)
    %1313 = "ttir.sigmoid"(%1311, %1312) : (tensor<6x1152x1x1xbf16>, tensor<6x1152x1x1xbf16>) -> tensor<6x1152x1x1xbf16> loc(#loc908)
    %1314 = ttir.empty() : tensor<6x1152x7x7xbf16> loc(#loc633)
    %1315 = "ttir.multiply"(%1283, %1313, %1314) : (tensor<6x1152x7x7xbf16>, tensor<6x1152x1x1xbf16>, tensor<6x1152x7x7xbf16>) -> tensor<6x1152x7x7xbf16> loc(#loc633)
    %1316 = ttir.empty() : tensor<6x7x1152x7xbf16> loc(#loc634)
    %1317 = "ttir.transpose"(%1315, %1316) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x1152x7x7xbf16>, tensor<6x7x1152x7xbf16>) -> tensor<6x7x1152x7xbf16> loc(#loc634)
    %1318 = ttir.empty() : tensor<6x7x7x1152xbf16> loc(#loc635)
    %1319 = "ttir.transpose"(%1317, %1318) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x1152x7xbf16>, tensor<6x7x7x1152xbf16>) -> tensor<6x7x7x1152xbf16> loc(#loc635)
    %1320 = ttir.empty() : tensor<6x7x7x320xbf16> loc(#loc636)
    %1321 = "ttir.conv2d"(%1319, %arg210, %1320) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x7x7x1152xbf16>, tensor<320x1152x1x1xbf16>, tensor<6x7x7x320xbf16>) -> tensor<6x7x7x320xbf16> loc(#loc636)
    %1322 = ttir.empty() : tensor<6x7x320x7xbf16> loc(#loc637)
    %1323 = "ttir.transpose"(%1321, %1322) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x7x320xbf16>, tensor<6x7x320x7xbf16>) -> tensor<6x7x320x7xbf16> loc(#loc637)
    %1324 = ttir.empty() : tensor<6x320x7x7xbf16> loc(#loc638)
    %1325 = "ttir.transpose"(%1323, %1324) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x7x320x7xbf16>, tensor<6x320x7x7xbf16>) -> tensor<6x320x7x7xbf16> loc(#loc638)
    %1326 = ttir.empty() : tensor<6x320x7x7xbf16> loc(#loc112)
    %1327 = "ttir.multiply"(%1325, %arg95, %1326) : (tensor<6x320x7x7xbf16>, tensor<1x320x1x1xbf16>, tensor<6x320x7x7xbf16>) -> tensor<6x320x7x7xbf16> loc(#loc112)
    %1328 = ttir.empty() : tensor<6x320x7x7xbf16> loc(#loc113)
    %1329 = "ttir.add"(%1327, %arg96, %1328) : (tensor<6x320x7x7xbf16>, tensor<1x320x1x1xbf16>, tensor<6x320x7x7xbf16>) -> tensor<6x320x7x7xbf16> loc(#loc113)
    %1330 = ttir.empty() : tensor<6x7x320x7xbf16> loc(#loc139)
    %1331 = "ttir.transpose"(%1329, %1330) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x320x7x7xbf16>, tensor<6x7x320x7xbf16>) -> tensor<6x7x320x7xbf16> loc(#loc139)
    %1332 = ttir.empty() : tensor<6x7x7x320xbf16> loc(#loc140)
    %1333 = "ttir.transpose"(%1331, %1332) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x320x7xbf16>, tensor<6x7x7x320xbf16>) -> tensor<6x7x7x320xbf16> loc(#loc140)
    %1334 = ttir.empty() : tensor<6x7x7x1280xbf16> loc(#loc141)
    %1335 = "ttir.conv2d"(%1333, %arg211, %1334) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<6x7x7x320xbf16>, tensor<1280x320x1x1xbf16>, tensor<6x7x7x1280xbf16>) -> tensor<6x7x7x1280xbf16> loc(#loc141)
    %1336 = ttir.empty() : tensor<6x7x1280x7xbf16> loc(#loc142)
    %1337 = "ttir.transpose"(%1335, %1336) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<6x7x7x1280xbf16>, tensor<6x7x1280x7xbf16>) -> tensor<6x7x1280x7xbf16> loc(#loc142)
    %1338 = ttir.empty() : tensor<6x1280x7x7xbf16> loc(#loc143)
    %1339 = "ttir.transpose"(%1337, %1338) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<6x7x1280x7xbf16>, tensor<6x1280x7x7xbf16>) -> tensor<6x1280x7x7xbf16> loc(#loc143)
    %1340 = ttir.empty() : tensor<6x1280x7x7xbf16> loc(#loc114)
    %1341 = "ttir.multiply"(%1339, %arg97, %1340) : (tensor<6x1280x7x7xbf16>, tensor<1x1280x1x1xbf16>, tensor<6x1280x7x7xbf16>) -> tensor<6x1280x7x7xbf16> loc(#loc114)
    %1342 = ttir.empty() : tensor<6x1280x7x7xbf16> loc(#loc115)
    %1343 = "ttir.add"(%1341, %arg98, %1342) : (tensor<6x1280x7x7xbf16>, tensor<1x1280x1x1xbf16>, tensor<6x1280x7x7xbf16>) -> tensor<6x1280x7x7xbf16> loc(#loc115)
    %1344 = ttir.empty() : tensor<6x1280x7x7xbf16> loc(#loc166)
    %1345 = "ttir.sigmoid"(%1343, %1344) : (tensor<6x1280x7x7xbf16>, tensor<6x1280x7x7xbf16>) -> tensor<6x1280x7x7xbf16> loc(#loc166)
    %1346 = ttir.empty() : tensor<6x1280x7x7xbf16> loc(#loc167)
    %1347 = "ttir.multiply"(%1343, %1345, %1346) : (tensor<6x1280x7x7xbf16>, tensor<6x1280x7x7xbf16>, tensor<6x1280x7x7xbf16>) -> tensor<6x1280x7x7xbf16> loc(#loc167)
    %1348 = ttir.empty() : tensor<6x1x1280x49xbf16> loc(#loc168)
    %1349 = "ttir.reshape"(%1347, %1348) <{shape = [6 : i32, 1 : i32, 1280 : i32, 49 : i32]}> : (tensor<6x1280x7x7xbf16>, tensor<6x1x1280x49xbf16>) -> tensor<6x1x1280x49xbf16> loc(#loc168)
    %1350 = ttir.empty() : tensor<6x1x49x1280xbf16> loc(#loc169)
    %1351 = "ttir.transpose"(%1349, %1350) <{dim0 = 2 : si32, dim1 = 3 : si32}> : (tensor<6x1x1280x49xbf16>, tensor<6x1x49x1280xbf16>) -> tensor<6x1x49x1280xbf16> loc(#loc169)
    %1352 = ttir.empty() : tensor<6x1x1x1280xbf16> loc(#loc170)
    %1353 = "ttir.mean"(%1351, %1352) <{dim_arg = [-2 : i32], keep_dim = true}> : (tensor<6x1x49x1280xbf16>, tensor<6x1x1x1280xbf16>) -> tensor<6x1x1x1280xbf16> loc(#loc170)
    %1354 = ttir.empty() : tensor<6x1x1280x1xbf16> loc(#loc171)
    %1355 = "ttir.transpose"(%1353, %1354) <{dim0 = 2 : si32, dim1 = 3 : si32}> : (tensor<6x1x1x1280xbf16>, tensor<6x1x1280x1xbf16>) -> tensor<6x1x1280x1xbf16> loc(#loc171)
    %1356 = ttir.empty() : tensor<6x1280x1x1xbf16> loc(#loc172)
    %1357 = "ttir.reshape"(%1355, %1356) <{shape = [6 : i32, 1280 : i32, 1 : i32, 1 : i32]}> : (tensor<6x1x1280x1xbf16>, tensor<6x1280x1x1xbf16>) -> tensor<6x1280x1x1xbf16> loc(#loc172)
    %1358 = ttir.empty() : tensor<6x1280x1xbf16> loc(#loc116)
    %1359 = "ttir.squeeze"(%1357, %1358) <{dim = -2 : si32}> : (tensor<6x1280x1x1xbf16>, tensor<6x1280x1xbf16>) -> tensor<6x1280x1xbf16> loc(#loc116)
    %1360 = ttir.empty() : tensor<6x1280xbf16> loc(#loc173)
    %1361 = "ttir.squeeze"(%1359, %1360) <{dim = -1 : si32}> : (tensor<6x1280x1xbf16>, tensor<6x1280xbf16>) -> tensor<6x1280xbf16> loc(#loc173)
    %1362 = ttir.empty() : tensor<6x1000xbf16> loc(#loc147)
    %1363 = "ttir.matmul"(%1361, %arg212, %1362) <{transpose_a = false, transpose_b = false}> : (tensor<6x1280xbf16>, tensor<1280x1000xbf16>, tensor<6x1000xbf16>) -> tensor<6x1000xbf16> loc(#loc147)
    %1364 = ttir.empty() : tensor<6x1000xbf16> loc(#loc117)
    %1365 = "ttir.add"(%1363, %arg213, %1364) : (tensor<6x1000xbf16>, tensor<1000xbf16>, tensor<6x1000xbf16>) -> tensor<6x1000xbf16> loc(#loc117)
    return %1365 : tensor<6x1000xbf16> loc(#loc118)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("timm.models.efficientnet.EfficientNet::")
#loc2 = loc("multiply_7")
#loc3 = loc("add_13")
#loc4 = loc("multiply_24")
#loc5 = loc("add_30")
#loc6 = loc("reduce_avg_33")
#loc7 = loc("multiply_54")
#loc8 = loc("add_60")
#loc9 = loc("multiply_68")
#loc10 = loc("add_74")
#loc11 = loc("multiply_85")
#loc12 = loc("add_91")
#loc13 = loc("reduce_avg_94")
#loc14 = loc("multiply_115")
#loc15 = loc("add_121")
#loc16 = loc("multiply_129")
#loc17 = loc("add_135")
#loc18 = loc("multiply_146")
#loc19 = loc("add_152")
#loc20 = loc("reduce_avg_155")
#loc21 = loc("multiply_176")
#loc22 = loc("add_182")
#loc23 = loc("multiply_191")
#loc24 = loc("add_197")
#loc25 = loc("multiply_208")
#loc26 = loc("add_214")
#loc27 = loc("reduce_avg_217")
#loc28 = loc("multiply_238")
#loc29 = loc("add_244")
#loc30 = loc("multiply_252")
#loc31 = loc("add_258")
#loc32 = loc("multiply_269")
#loc33 = loc("add_275")
#loc34 = loc("reduce_avg_278")
#loc35 = loc("multiply_299")
#loc36 = loc("add_305")
#loc37 = loc("multiply_314")
#loc38 = loc("add_320")
#loc39 = loc("multiply_331")
#loc40 = loc("add_337")
#loc41 = loc("reduce_avg_340")
#loc42 = loc("multiply_361")
#loc43 = loc("add_367")
#loc44 = loc("multiply_375")
#loc45 = loc("add_381")
#loc46 = loc("multiply_392")
#loc47 = loc("add_398")
#loc48 = loc("reduce_avg_401")
#loc49 = loc("multiply_422")
#loc50 = loc("add_428")
#loc51 = loc("multiply_437")
#loc52 = loc("add_443")
#loc53 = loc("multiply_454")
#loc54 = loc("add_460")
#loc55 = loc("reduce_avg_463")
#loc56 = loc("multiply_484")
#loc57 = loc("add_490")
#loc58 = loc("multiply_499")
#loc59 = loc("add_505")
#loc60 = loc("multiply_516")
#loc61 = loc("add_522")
#loc62 = loc("reduce_avg_525")
#loc63 = loc("multiply_546")
#loc64 = loc("add_552")
#loc65 = loc("multiply_560")
#loc66 = loc("add_566")
#loc67 = loc("multiply_577")
#loc68 = loc("add_583")
#loc69 = loc("reduce_avg_586")
#loc70 = loc("multiply_607")
#loc71 = loc("add_613")
#loc72 = loc("multiply_622")
#loc73 = loc("add_628")
#loc74 = loc("multiply_639")
#loc75 = loc("add_645")
#loc76 = loc("reduce_avg_648")
#loc77 = loc("multiply_669")
#loc78 = loc("add_675")
#loc79 = loc("multiply_684")
#loc80 = loc("add_690")
#loc81 = loc("multiply_701")
#loc82 = loc("add_707")
#loc83 = loc("reduce_avg_710")
#loc84 = loc("multiply_731")
#loc85 = loc("add_737")
#loc86 = loc("multiply_745")
#loc87 = loc("add_751")
#loc88 = loc("multiply_762")
#loc89 = loc("add_768")
#loc90 = loc("reduce_avg_771")
#loc91 = loc("multiply_792")
#loc92 = loc("add_798")
#loc93 = loc("multiply_807")
#loc94 = loc("add_813")
#loc95 = loc("multiply_824")
#loc96 = loc("add_830")
#loc97 = loc("reduce_avg_833")
#loc98 = loc("multiply_854")
#loc99 = loc("add_860")
#loc100 = loc("multiply_869")
#loc101 = loc("add_875")
#loc102 = loc("multiply_886")
#loc103 = loc("add_892")
#loc104 = loc("reduce_avg_895")
#loc105 = loc("multiply_916")
#loc106 = loc("add_922")
#loc107 = loc("multiply_931")
#loc108 = loc("add_937")
#loc109 = loc("multiply_948")
#loc110 = loc("add_954")
#loc111 = loc("reduce_avg_957")
#loc112 = loc("multiply_978")
#loc113 = loc("add_984")
#loc114 = loc("multiply_992")
#loc115 = loc("add_998")
#loc116 = loc("squeeze_1003")
#loc117 = loc("add_1007")
#loc118 = loc(unknown)
#loc119 = loc("torch.nn.modules.conv.Conv2d::conv_stem"(#loc1))
#loc120 = loc("timm.layers.norm_act.BatchNormAct2d::bn1"(#loc1))
#loc121 = loc("torch.nn.modules.container.Sequential::blocks"(#loc1))
#loc122 = loc("torch.nn.modules.conv.Conv2d::conv_head"(#loc1))
#loc123 = loc("timm.layers.norm_act.BatchNormAct2d::bn2"(#loc1))
#loc124 = loc("timm.layers.adaptive_avgmax_pool.SelectAdaptivePool2d::global_pool"(#loc1))
#loc125 = loc("torch.nn.modules.linear.Linear::classifier"(#loc1))
#loc126 = loc("conv2d_0.dc.transpose.0"(#loc119))
#loc127 = loc("conv2d_0.dc.transpose.1"(#loc119))
#loc128 = loc("conv2d_0.dc.conv2d.2"(#loc119))
#loc129 = loc("conv2d_0.dc.transpose.3"(#loc119))
#loc130 = loc("conv2d_0.dc.transpose.4"(#loc119))
#loc131 = loc("torch.nn.modules.activation.SiLU::act"(#loc120))
#loc132 = loc("torch.nn.modules.container.Sequential::0"(#loc121))
#loc133 = loc("torch.nn.modules.container.Sequential::1"(#loc121))
#loc134 = loc("torch.nn.modules.container.Sequential::2"(#loc121))
#loc135 = loc("torch.nn.modules.container.Sequential::3"(#loc121))
#loc136 = loc("torch.nn.modules.container.Sequential::4"(#loc121))
#loc137 = loc("torch.nn.modules.container.Sequential::5"(#loc121))
#loc138 = loc("torch.nn.modules.container.Sequential::6"(#loc121))
#loc139 = loc("conv2d_985.dc.transpose.0"(#loc122))
#loc140 = loc("conv2d_985.dc.transpose.1"(#loc122))
#loc141 = loc("conv2d_985.dc.conv2d.2"(#loc122))
#loc142 = loc("conv2d_985.dc.transpose.3"(#loc122))
#loc143 = loc("conv2d_985.dc.transpose.4"(#loc122))
#loc144 = loc("torch.nn.modules.activation.SiLU::act"(#loc123))
#loc145 = loc("torch.nn.modules.pooling.AdaptiveAvgPool2d::pool"(#loc124))
#loc146 = loc("torch.nn.modules.flatten.Flatten::flatten"(#loc124))
#loc147 = loc("matmul_1006"(#loc125))
#loc148 = loc("sigmoid_14"(#loc131))
#loc149 = loc("multiply_15"(#loc131))
#loc150 = loc("timm.models._efficientnet_blocks.DepthwiseSeparableConv::0"(#loc132))
#loc151 = loc("timm.models._efficientnet_blocks.InvertedResidual::0"(#loc133))
#loc152 = loc("timm.models._efficientnet_blocks.InvertedResidual::1"(#loc133))
#loc153 = loc("timm.models._efficientnet_blocks.InvertedResidual::0"(#loc134))
#loc154 = loc("timm.models._efficientnet_blocks.InvertedResidual::1"(#loc134))
#loc155 = loc("timm.models._efficientnet_blocks.InvertedResidual::0"(#loc135))
#loc156 = loc("timm.models._efficientnet_blocks.InvertedResidual::1"(#loc135))
#loc157 = loc("timm.models._efficientnet_blocks.InvertedResidual::2"(#loc135))
#loc158 = loc("timm.models._efficientnet_blocks.InvertedResidual::0"(#loc136))
#loc159 = loc("timm.models._efficientnet_blocks.InvertedResidual::1"(#loc136))
#loc160 = loc("timm.models._efficientnet_blocks.InvertedResidual::2"(#loc136))
#loc161 = loc("timm.models._efficientnet_blocks.InvertedResidual::0"(#loc137))
#loc162 = loc("timm.models._efficientnet_blocks.InvertedResidual::1"(#loc137))
#loc163 = loc("timm.models._efficientnet_blocks.InvertedResidual::2"(#loc137))
#loc164 = loc("timm.models._efficientnet_blocks.InvertedResidual::3"(#loc137))
#loc165 = loc("timm.models._efficientnet_blocks.InvertedResidual::0"(#loc138))
#loc166 = loc("sigmoid_999"(#loc144))
#loc167 = loc("multiply_1000"(#loc144))
#loc168 = loc("avg_pool2d_1001.dc.reshape.0"(#loc145))
#loc169 = loc("avg_pool2d_1001.dc.transpose.1"(#loc145))
#loc170 = loc("avg_pool2d_1001.dc.reduce_avg.2"(#loc145))
#loc171 = loc("avg_pool2d_1001.dc.transpose.3"(#loc145))
#loc172 = loc("avg_pool2d_1001.dc.reshape.4"(#loc145))
#loc173 = loc("squeeze_1004"(#loc146))
#loc174 = loc("torch.nn.modules.conv.Conv2d::conv_dw"(#loc150))
#loc175 = loc("timm.layers.norm_act.BatchNormAct2d::bn1"(#loc150))
#loc176 = loc("timm.models._efficientnet_blocks.SqueezeExcite::se"(#loc150))
#loc177 = loc("torch.nn.modules.conv.Conv2d::conv_pw"(#loc150))
#loc178 = loc("torch.nn.modules.conv.Conv2d::conv_pw"(#loc151))
#loc179 = loc("timm.layers.norm_act.BatchNormAct2d::bn1"(#loc151))
#loc180 = loc("torch.nn.modules.conv.Conv2d::conv_dw"(#loc151))
#loc181 = loc("timm.layers.norm_act.BatchNormAct2d::bn2"(#loc151))
#loc182 = loc("timm.models._efficientnet_blocks.SqueezeExcite::se"(#loc151))
#loc183 = loc("torch.nn.modules.conv.Conv2d::conv_pwl"(#loc151))
#loc184 = loc("torch.nn.modules.conv.Conv2d::conv_pw"(#loc152))
#loc185 = loc("timm.layers.norm_act.BatchNormAct2d::bn1"(#loc152))
#loc186 = loc("torch.nn.modules.conv.Conv2d::conv_dw"(#loc152))
#loc187 = loc("timm.layers.norm_act.BatchNormAct2d::bn2"(#loc152))
#loc188 = loc("timm.models._efficientnet_blocks.SqueezeExcite::se"(#loc152))
#loc189 = loc("torch.nn.modules.conv.Conv2d::conv_pwl"(#loc152))
#loc190 = loc("add_183"(#loc152))
#loc191 = loc("torch.nn.modules.conv.Conv2d::conv_pw"(#loc153))
#loc192 = loc("timm.layers.norm_act.BatchNormAct2d::bn1"(#loc153))
#loc193 = loc("torch.nn.modules.conv.Conv2d::conv_dw"(#loc153))
#loc194 = loc("timm.layers.norm_act.BatchNormAct2d::bn2"(#loc153))
#loc195 = loc("timm.models._efficientnet_blocks.SqueezeExcite::se"(#loc153))
#loc196 = loc("torch.nn.modules.conv.Conv2d::conv_pwl"(#loc153))
#loc197 = loc("torch.nn.modules.conv.Conv2d::conv_pw"(#loc154))
#loc198 = loc("timm.layers.norm_act.BatchNormAct2d::bn1"(#loc154))
#loc199 = loc("torch.nn.modules.conv.Conv2d::conv_dw"(#loc154))
#loc200 = loc("timm.layers.norm_act.BatchNormAct2d::bn2"(#loc154))
#loc201 = loc("timm.models._efficientnet_blocks.SqueezeExcite::se"(#loc154))
#loc202 = loc("torch.nn.modules.conv.Conv2d::conv_pwl"(#loc154))
#loc203 = loc("add_306"(#loc154))
#loc204 = loc("torch.nn.modules.conv.Conv2d::conv_pw"(#loc155))
#loc205 = loc("timm.layers.norm_act.BatchNormAct2d::bn1"(#loc155))
#loc206 = loc("torch.nn.modules.conv.Conv2d::conv_dw"(#loc155))
#loc207 = loc("timm.layers.norm_act.BatchNormAct2d::bn2"(#loc155))
#loc208 = loc("timm.models._efficientnet_blocks.SqueezeExcite::se"(#loc155))
#loc209 = loc("torch.nn.modules.conv.Conv2d::conv_pwl"(#loc155))
#loc210 = loc("torch.nn.modules.conv.Conv2d::conv_pw"(#loc156))
#loc211 = loc("timm.layers.norm_act.BatchNormAct2d::bn1"(#loc156))
#loc212 = loc("torch.nn.modules.conv.Conv2d::conv_dw"(#loc156))
#loc213 = loc("timm.layers.norm_act.BatchNormAct2d::bn2"(#loc156))
#loc214 = loc("timm.models._efficientnet_blocks.SqueezeExcite::se"(#loc156))
#loc215 = loc("torch.nn.modules.conv.Conv2d::conv_pwl"(#loc156))
#loc216 = loc("add_429"(#loc156))
#loc217 = loc("torch.nn.modules.conv.Conv2d::conv_pw"(#loc157))
#loc218 = loc("timm.layers.norm_act.BatchNormAct2d::bn1"(#loc157))
#loc219 = loc("torch.nn.modules.conv.Conv2d::conv_dw"(#loc157))
#loc220 = loc("timm.layers.norm_act.BatchNormAct2d::bn2"(#loc157))
#loc221 = loc("timm.models._efficientnet_blocks.SqueezeExcite::se"(#loc157))
#loc222 = loc("torch.nn.modules.conv.Conv2d::conv_pwl"(#loc157))
#loc223 = loc("add_491"(#loc157))
#loc224 = loc("torch.nn.modules.conv.Conv2d::conv_pw"(#loc158))
#loc225 = loc("timm.layers.norm_act.BatchNormAct2d::bn1"(#loc158))
#loc226 = loc("torch.nn.modules.conv.Conv2d::conv_dw"(#loc158))
#loc227 = loc("timm.layers.norm_act.BatchNormAct2d::bn2"(#loc158))
#loc228 = loc("timm.models._efficientnet_blocks.SqueezeExcite::se"(#loc158))
#loc229 = loc("torch.nn.modules.conv.Conv2d::conv_pwl"(#loc158))
#loc230 = loc("torch.nn.modules.conv.Conv2d::conv_pw"(#loc159))
#loc231 = loc("timm.layers.norm_act.BatchNormAct2d::bn1"(#loc159))
#loc232 = loc("torch.nn.modules.conv.Conv2d::conv_dw"(#loc159))
#loc233 = loc("timm.layers.norm_act.BatchNormAct2d::bn2"(#loc159))
#loc234 = loc("timm.models._efficientnet_blocks.SqueezeExcite::se"(#loc159))
#loc235 = loc("torch.nn.modules.conv.Conv2d::conv_pwl"(#loc159))
#loc236 = loc("add_614"(#loc159))
#loc237 = loc("torch.nn.modules.conv.Conv2d::conv_pw"(#loc160))
#loc238 = loc("timm.layers.norm_act.BatchNormAct2d::bn1"(#loc160))
#loc239 = loc("torch.nn.modules.conv.Conv2d::conv_dw"(#loc160))
#loc240 = loc("timm.layers.norm_act.BatchNormAct2d::bn2"(#loc160))
#loc241 = loc("timm.models._efficientnet_blocks.SqueezeExcite::se"(#loc160))
#loc242 = loc("torch.nn.modules.conv.Conv2d::conv_pwl"(#loc160))
#loc243 = loc("add_676"(#loc160))
#loc244 = loc("torch.nn.modules.conv.Conv2d::conv_pw"(#loc161))
#loc245 = loc("timm.layers.norm_act.BatchNormAct2d::bn1"(#loc161))
#loc246 = loc("torch.nn.modules.conv.Conv2d::conv_dw"(#loc161))
#loc247 = loc("timm.layers.norm_act.BatchNormAct2d::bn2"(#loc161))
#loc248 = loc("timm.models._efficientnet_blocks.SqueezeExcite::se"(#loc161))
#loc249 = loc("torch.nn.modules.conv.Conv2d::conv_pwl"(#loc161))
#loc250 = loc("torch.nn.modules.conv.Conv2d::conv_pw"(#loc162))
#loc251 = loc("timm.layers.norm_act.BatchNormAct2d::bn1"(#loc162))
#loc252 = loc("torch.nn.modules.conv.Conv2d::conv_dw"(#loc162))
#loc253 = loc("timm.layers.norm_act.BatchNormAct2d::bn2"(#loc162))
#loc254 = loc("timm.models._efficientnet_blocks.SqueezeExcite::se"(#loc162))
#loc255 = loc("torch.nn.modules.conv.Conv2d::conv_pwl"(#loc162))
#loc256 = loc("add_799"(#loc162))
#loc257 = loc("torch.nn.modules.conv.Conv2d::conv_pw"(#loc163))
#loc258 = loc("timm.layers.norm_act.BatchNormAct2d::bn1"(#loc163))
#loc259 = loc("torch.nn.modules.conv.Conv2d::conv_dw"(#loc163))
#loc260 = loc("timm.layers.norm_act.BatchNormAct2d::bn2"(#loc163))
#loc261 = loc("timm.models._efficientnet_blocks.SqueezeExcite::se"(#loc163))
#loc262 = loc("torch.nn.modules.conv.Conv2d::conv_pwl"(#loc163))
#loc263 = loc("add_861"(#loc163))
#loc264 = loc("torch.nn.modules.conv.Conv2d::conv_pw"(#loc164))
#loc265 = loc("timm.layers.norm_act.BatchNormAct2d::bn1"(#loc164))
#loc266 = loc("torch.nn.modules.conv.Conv2d::conv_dw"(#loc164))
#loc267 = loc("timm.layers.norm_act.BatchNormAct2d::bn2"(#loc164))
#loc268 = loc("timm.models._efficientnet_blocks.SqueezeExcite::se"(#loc164))
#loc269 = loc("torch.nn.modules.conv.Conv2d::conv_pwl"(#loc164))
#loc270 = loc("add_923"(#loc164))
#loc271 = loc("torch.nn.modules.conv.Conv2d::conv_pw"(#loc165))
#loc272 = loc("timm.layers.norm_act.BatchNormAct2d::bn1"(#loc165))
#loc273 = loc("torch.nn.modules.conv.Conv2d::conv_dw"(#loc165))
#loc274 = loc("timm.layers.norm_act.BatchNormAct2d::bn2"(#loc165))
#loc275 = loc("timm.models._efficientnet_blocks.SqueezeExcite::se"(#loc165))
#loc276 = loc("torch.nn.modules.conv.Conv2d::conv_pwl"(#loc165))
#loc277 = loc("conv2d_17.dc.transpose.0"(#loc174))
#loc278 = loc("conv2d_17.dc.transpose.1"(#loc174))
#loc279 = loc("conv2d_17.dc.conv2d.2"(#loc174))
#loc280 = loc("conv2d_17.dc.transpose.3"(#loc174))
#loc281 = loc("conv2d_17.dc.transpose.4"(#loc174))
#loc282 = loc("torch.nn.modules.activation.SiLU::act"(#loc175))
#loc283 = loc("reduce_avg_34"(#loc176))
#loc284 = loc("torch.nn.modules.conv.Conv2d::conv_reduce"(#loc176))
#loc285 = loc("torch.nn.modules.activation.SiLU::act1"(#loc176))
#loc286 = loc("torch.nn.modules.conv.Conv2d::conv_expand"(#loc176))
#loc287 = loc("torch.nn.modules.activation.Sigmoid::gate"(#loc176))
#loc288 = loc("multiply_46"(#loc176))
#loc289 = loc("conv2d_47.dc.transpose.0"(#loc177))
#loc290 = loc("conv2d_47.dc.transpose.1"(#loc177))
#loc291 = loc("conv2d_47.dc.conv2d.2"(#loc177))
#loc292 = loc("conv2d_47.dc.transpose.3"(#loc177))
#loc293 = loc("conv2d_47.dc.transpose.4"(#loc177))
#loc294 = loc("conv2d_61.dc.transpose.0"(#loc178))
#loc295 = loc("conv2d_61.dc.transpose.1"(#loc178))
#loc296 = loc("conv2d_61.dc.conv2d.2"(#loc178))
#loc297 = loc("conv2d_61.dc.transpose.3"(#loc178))
#loc298 = loc("conv2d_61.dc.transpose.4"(#loc178))
#loc299 = loc("torch.nn.modules.activation.SiLU::act"(#loc179))
#loc300 = loc("conv2d_78.dc.transpose.0"(#loc180))
#loc301 = loc("conv2d_78.dc.transpose.1"(#loc180))
#loc302 = loc("conv2d_78.dc.conv2d.2"(#loc180))
#loc303 = loc("conv2d_78.dc.transpose.3"(#loc180))
#loc304 = loc("conv2d_78.dc.transpose.4"(#loc180))
#loc305 = loc("torch.nn.modules.activation.SiLU::act"(#loc181))
#loc306 = loc("reduce_avg_95"(#loc182))
#loc307 = loc("torch.nn.modules.conv.Conv2d::conv_reduce"(#loc182))
#loc308 = loc("torch.nn.modules.activation.SiLU::act1"(#loc182))
#loc309 = loc("torch.nn.modules.conv.Conv2d::conv_expand"(#loc182))
#loc310 = loc("torch.nn.modules.activation.Sigmoid::gate"(#loc182))
#loc311 = loc("multiply_107"(#loc182))
#loc312 = loc("conv2d_108.dc.transpose.0"(#loc183))
#loc313 = loc("conv2d_108.dc.transpose.1"(#loc183))
#loc314 = loc("conv2d_108.dc.conv2d.2"(#loc183))
#loc315 = loc("conv2d_108.dc.transpose.3"(#loc183))
#loc316 = loc("conv2d_108.dc.transpose.4"(#loc183))
#loc317 = loc("conv2d_122.dc.transpose.0"(#loc184))
#loc318 = loc("conv2d_122.dc.transpose.1"(#loc184))
#loc319 = loc("conv2d_122.dc.conv2d.2"(#loc184))
#loc320 = loc("conv2d_122.dc.transpose.3"(#loc184))
#loc321 = loc("conv2d_122.dc.transpose.4"(#loc184))
#loc322 = loc("torch.nn.modules.activation.SiLU::act"(#loc185))
#loc323 = loc("conv2d_139.dc.transpose.0"(#loc186))
#loc324 = loc("conv2d_139.dc.transpose.1"(#loc186))
#loc325 = loc("conv2d_139.dc.conv2d.2"(#loc186))
#loc326 = loc("conv2d_139.dc.transpose.3"(#loc186))
#loc327 = loc("conv2d_139.dc.transpose.4"(#loc186))
#loc328 = loc("torch.nn.modules.activation.SiLU::act"(#loc187))
#loc329 = loc("reduce_avg_156"(#loc188))
#loc330 = loc("torch.nn.modules.conv.Conv2d::conv_reduce"(#loc188))
#loc331 = loc("torch.nn.modules.activation.SiLU::act1"(#loc188))
#loc332 = loc("torch.nn.modules.conv.Conv2d::conv_expand"(#loc188))
#loc333 = loc("torch.nn.modules.activation.Sigmoid::gate"(#loc188))
#loc334 = loc("multiply_168"(#loc188))
#loc335 = loc("conv2d_169.dc.transpose.0"(#loc189))
#loc336 = loc("conv2d_169.dc.transpose.1"(#loc189))
#loc337 = loc("conv2d_169.dc.conv2d.2"(#loc189))
#loc338 = loc("conv2d_169.dc.transpose.3"(#loc189))
#loc339 = loc("conv2d_169.dc.transpose.4"(#loc189))
#loc340 = loc("conv2d_184.dc.transpose.0"(#loc191))
#loc341 = loc("conv2d_184.dc.transpose.1"(#loc191))
#loc342 = loc("conv2d_184.dc.conv2d.2"(#loc191))
#loc343 = loc("conv2d_184.dc.transpose.3"(#loc191))
#loc344 = loc("conv2d_184.dc.transpose.4"(#loc191))
#loc345 = loc("torch.nn.modules.activation.SiLU::act"(#loc192))
#loc346 = loc("conv2d_201.dc.transpose.0"(#loc193))
#loc347 = loc("conv2d_201.dc.transpose.1"(#loc193))
#loc348 = loc("conv2d_201.dc.conv2d.2"(#loc193))
#loc349 = loc("conv2d_201.dc.transpose.3"(#loc193))
#loc350 = loc("conv2d_201.dc.transpose.4"(#loc193))
#loc351 = loc("torch.nn.modules.activation.SiLU::act"(#loc194))
#loc352 = loc("reduce_avg_218"(#loc195))
#loc353 = loc("torch.nn.modules.conv.Conv2d::conv_reduce"(#loc195))
#loc354 = loc("torch.nn.modules.activation.SiLU::act1"(#loc195))
#loc355 = loc("torch.nn.modules.conv.Conv2d::conv_expand"(#loc195))
#loc356 = loc("torch.nn.modules.activation.Sigmoid::gate"(#loc195))
#loc357 = loc("multiply_230"(#loc195))
#loc358 = loc("conv2d_231.dc.transpose.0"(#loc196))
#loc359 = loc("conv2d_231.dc.transpose.1"(#loc196))
#loc360 = loc("conv2d_231.dc.conv2d.2"(#loc196))
#loc361 = loc("conv2d_231.dc.transpose.3"(#loc196))
#loc362 = loc("conv2d_231.dc.transpose.4"(#loc196))
#loc363 = loc("conv2d_245.dc.transpose.0"(#loc197))
#loc364 = loc("conv2d_245.dc.transpose.1"(#loc197))
#loc365 = loc("conv2d_245.dc.conv2d.2"(#loc197))
#loc366 = loc("conv2d_245.dc.transpose.3"(#loc197))
#loc367 = loc("conv2d_245.dc.transpose.4"(#loc197))
#loc368 = loc("torch.nn.modules.activation.SiLU::act"(#loc198))
#loc369 = loc("conv2d_262.dc.transpose.0"(#loc199))
#loc370 = loc("conv2d_262.dc.transpose.1"(#loc199))
#loc371 = loc("conv2d_262.dc.conv2d.2"(#loc199))
#loc372 = loc("conv2d_262.dc.transpose.3"(#loc199))
#loc373 = loc("conv2d_262.dc.transpose.4"(#loc199))
#loc374 = loc("torch.nn.modules.activation.SiLU::act"(#loc200))
#loc375 = loc("reduce_avg_279"(#loc201))
#loc376 = loc("torch.nn.modules.conv.Conv2d::conv_reduce"(#loc201))
#loc377 = loc("torch.nn.modules.activation.SiLU::act1"(#loc201))
#loc378 = loc("torch.nn.modules.conv.Conv2d::conv_expand"(#loc201))
#loc379 = loc("torch.nn.modules.activation.Sigmoid::gate"(#loc201))
#loc380 = loc("multiply_291"(#loc201))
#loc381 = loc("conv2d_292.dc.transpose.0"(#loc202))
#loc382 = loc("conv2d_292.dc.transpose.1"(#loc202))
#loc383 = loc("conv2d_292.dc.conv2d.2"(#loc202))
#loc384 = loc("conv2d_292.dc.transpose.3"(#loc202))
#loc385 = loc("conv2d_292.dc.transpose.4"(#loc202))
#loc386 = loc("conv2d_307.dc.transpose.0"(#loc204))
#loc387 = loc("conv2d_307.dc.transpose.1"(#loc204))
#loc388 = loc("conv2d_307.dc.conv2d.2"(#loc204))
#loc389 = loc("conv2d_307.dc.transpose.3"(#loc204))
#loc390 = loc("conv2d_307.dc.transpose.4"(#loc204))
#loc391 = loc("torch.nn.modules.activation.SiLU::act"(#loc205))
#loc392 = loc("conv2d_324.dc.transpose.0"(#loc206))
#loc393 = loc("conv2d_324.dc.transpose.1"(#loc206))
#loc394 = loc("conv2d_324.dc.conv2d.2"(#loc206))
#loc395 = loc("conv2d_324.dc.transpose.3"(#loc206))
#loc396 = loc("conv2d_324.dc.transpose.4"(#loc206))
#loc397 = loc("torch.nn.modules.activation.SiLU::act"(#loc207))
#loc398 = loc("reduce_avg_341"(#loc208))
#loc399 = loc("torch.nn.modules.conv.Conv2d::conv_reduce"(#loc208))
#loc400 = loc("torch.nn.modules.activation.SiLU::act1"(#loc208))
#loc401 = loc("torch.nn.modules.conv.Conv2d::conv_expand"(#loc208))
#loc402 = loc("torch.nn.modules.activation.Sigmoid::gate"(#loc208))
#loc403 = loc("multiply_353"(#loc208))
#loc404 = loc("conv2d_354.dc.transpose.0"(#loc209))
#loc405 = loc("conv2d_354.dc.transpose.1"(#loc209))
#loc406 = loc("conv2d_354.dc.conv2d.2"(#loc209))
#loc407 = loc("conv2d_354.dc.transpose.3"(#loc209))
#loc408 = loc("conv2d_354.dc.transpose.4"(#loc209))
#loc409 = loc("conv2d_368.dc.transpose.0"(#loc210))
#loc410 = loc("conv2d_368.dc.transpose.1"(#loc210))
#loc411 = loc("conv2d_368.dc.conv2d.2"(#loc210))
#loc412 = loc("conv2d_368.dc.transpose.3"(#loc210))
#loc413 = loc("conv2d_368.dc.transpose.4"(#loc210))
#loc414 = loc("torch.nn.modules.activation.SiLU::act"(#loc211))
#loc415 = loc("conv2d_385.dc.transpose.0"(#loc212))
#loc416 = loc("conv2d_385.dc.transpose.1"(#loc212))
#loc417 = loc("conv2d_385.dc.conv2d.2"(#loc212))
#loc418 = loc("conv2d_385.dc.transpose.3"(#loc212))
#loc419 = loc("conv2d_385.dc.transpose.4"(#loc212))
#loc420 = loc("torch.nn.modules.activation.SiLU::act"(#loc213))
#loc421 = loc("reduce_avg_402"(#loc214))
#loc422 = loc("torch.nn.modules.conv.Conv2d::conv_reduce"(#loc214))
#loc423 = loc("torch.nn.modules.activation.SiLU::act1"(#loc214))
#loc424 = loc("torch.nn.modules.conv.Conv2d::conv_expand"(#loc214))
#loc425 = loc("torch.nn.modules.activation.Sigmoid::gate"(#loc214))
#loc426 = loc("multiply_414"(#loc214))
#loc427 = loc("conv2d_415.dc.transpose.0"(#loc215))
#loc428 = loc("conv2d_415.dc.transpose.1"(#loc215))
#loc429 = loc("conv2d_415.dc.conv2d.2"(#loc215))
#loc430 = loc("conv2d_415.dc.transpose.3"(#loc215))
#loc431 = loc("conv2d_415.dc.transpose.4"(#loc215))
#loc432 = loc("conv2d_430.dc.transpose.0"(#loc217))
#loc433 = loc("conv2d_430.dc.transpose.1"(#loc217))
#loc434 = loc("conv2d_430.dc.conv2d.2"(#loc217))
#loc435 = loc("conv2d_430.dc.transpose.3"(#loc217))
#loc436 = loc("conv2d_430.dc.transpose.4"(#loc217))
#loc437 = loc("torch.nn.modules.activation.SiLU::act"(#loc218))
#loc438 = loc("conv2d_447.dc.transpose.0"(#loc219))
#loc439 = loc("conv2d_447.dc.transpose.1"(#loc219))
#loc440 = loc("conv2d_447.dc.conv2d.2"(#loc219))
#loc441 = loc("conv2d_447.dc.transpose.3"(#loc219))
#loc442 = loc("conv2d_447.dc.transpose.4"(#loc219))
#loc443 = loc("torch.nn.modules.activation.SiLU::act"(#loc220))
#loc444 = loc("reduce_avg_464"(#loc221))
#loc445 = loc("torch.nn.modules.conv.Conv2d::conv_reduce"(#loc221))
#loc446 = loc("torch.nn.modules.activation.SiLU::act1"(#loc221))
#loc447 = loc("torch.nn.modules.conv.Conv2d::conv_expand"(#loc221))
#loc448 = loc("torch.nn.modules.activation.Sigmoid::gate"(#loc221))
#loc449 = loc("multiply_476"(#loc221))
#loc450 = loc("conv2d_477.dc.transpose.0"(#loc222))
#loc451 = loc("conv2d_477.dc.transpose.1"(#loc222))
#loc452 = loc("conv2d_477.dc.conv2d.2"(#loc222))
#loc453 = loc("conv2d_477.dc.transpose.3"(#loc222))
#loc454 = loc("conv2d_477.dc.transpose.4"(#loc222))
#loc455 = loc("conv2d_492.dc.transpose.0"(#loc224))
#loc456 = loc("conv2d_492.dc.transpose.1"(#loc224))
#loc457 = loc("conv2d_492.dc.conv2d.2"(#loc224))
#loc458 = loc("conv2d_492.dc.transpose.3"(#loc224))
#loc459 = loc("conv2d_492.dc.transpose.4"(#loc224))
#loc460 = loc("torch.nn.modules.activation.SiLU::act"(#loc225))
#loc461 = loc("conv2d_509.dc.transpose.0"(#loc226))
#loc462 = loc("conv2d_509.dc.transpose.1"(#loc226))
#loc463 = loc("conv2d_509.dc.conv2d.2"(#loc226))
#loc464 = loc("conv2d_509.dc.transpose.3"(#loc226))
#loc465 = loc("conv2d_509.dc.transpose.4"(#loc226))
#loc466 = loc("torch.nn.modules.activation.SiLU::act"(#loc227))
#loc467 = loc("reduce_avg_526"(#loc228))
#loc468 = loc("torch.nn.modules.conv.Conv2d::conv_reduce"(#loc228))
#loc469 = loc("torch.nn.modules.activation.SiLU::act1"(#loc228))
#loc470 = loc("torch.nn.modules.conv.Conv2d::conv_expand"(#loc228))
#loc471 = loc("torch.nn.modules.activation.Sigmoid::gate"(#loc228))
#loc472 = loc("multiply_538"(#loc228))
#loc473 = loc("conv2d_539.dc.transpose.0"(#loc229))
#loc474 = loc("conv2d_539.dc.transpose.1"(#loc229))
#loc475 = loc("conv2d_539.dc.conv2d.2"(#loc229))
#loc476 = loc("conv2d_539.dc.transpose.3"(#loc229))
#loc477 = loc("conv2d_539.dc.transpose.4"(#loc229))
#loc478 = loc("conv2d_553.dc.transpose.0"(#loc230))
#loc479 = loc("conv2d_553.dc.transpose.1"(#loc230))
#loc480 = loc("conv2d_553.dc.conv2d.2"(#loc230))
#loc481 = loc("conv2d_553.dc.transpose.3"(#loc230))
#loc482 = loc("conv2d_553.dc.transpose.4"(#loc230))
#loc483 = loc("torch.nn.modules.activation.SiLU::act"(#loc231))
#loc484 = loc("conv2d_570.dc.transpose.0"(#loc232))
#loc485 = loc("conv2d_570.dc.transpose.1"(#loc232))
#loc486 = loc("conv2d_570.dc.conv2d.2"(#loc232))
#loc487 = loc("conv2d_570.dc.transpose.3"(#loc232))
#loc488 = loc("conv2d_570.dc.transpose.4"(#loc232))
#loc489 = loc("torch.nn.modules.activation.SiLU::act"(#loc233))
#loc490 = loc("reduce_avg_587"(#loc234))
#loc491 = loc("torch.nn.modules.conv.Conv2d::conv_reduce"(#loc234))
#loc492 = loc("torch.nn.modules.activation.SiLU::act1"(#loc234))
#loc493 = loc("torch.nn.modules.conv.Conv2d::conv_expand"(#loc234))
#loc494 = loc("torch.nn.modules.activation.Sigmoid::gate"(#loc234))
#loc495 = loc("multiply_599"(#loc234))
#loc496 = loc("conv2d_600.dc.transpose.0"(#loc235))
#loc497 = loc("conv2d_600.dc.transpose.1"(#loc235))
#loc498 = loc("conv2d_600.dc.conv2d.2"(#loc235))
#loc499 = loc("conv2d_600.dc.transpose.3"(#loc235))
#loc500 = loc("conv2d_600.dc.transpose.4"(#loc235))
#loc501 = loc("conv2d_615.dc.transpose.0"(#loc237))
#loc502 = loc("conv2d_615.dc.transpose.1"(#loc237))
#loc503 = loc("conv2d_615.dc.conv2d.2"(#loc237))
#loc504 = loc("conv2d_615.dc.transpose.3"(#loc237))
#loc505 = loc("conv2d_615.dc.transpose.4"(#loc237))
#loc506 = loc("torch.nn.modules.activation.SiLU::act"(#loc238))
#loc507 = loc("conv2d_632.dc.transpose.0"(#loc239))
#loc508 = loc("conv2d_632.dc.transpose.1"(#loc239))
#loc509 = loc("conv2d_632.dc.conv2d.2"(#loc239))
#loc510 = loc("conv2d_632.dc.transpose.3"(#loc239))
#loc511 = loc("conv2d_632.dc.transpose.4"(#loc239))
#loc512 = loc("torch.nn.modules.activation.SiLU::act"(#loc240))
#loc513 = loc("reduce_avg_649"(#loc241))
#loc514 = loc("torch.nn.modules.conv.Conv2d::conv_reduce"(#loc241))
#loc515 = loc("torch.nn.modules.activation.SiLU::act1"(#loc241))
#loc516 = loc("torch.nn.modules.conv.Conv2d::conv_expand"(#loc241))
#loc517 = loc("torch.nn.modules.activation.Sigmoid::gate"(#loc241))
#loc518 = loc("multiply_661"(#loc241))
#loc519 = loc("conv2d_662.dc.transpose.0"(#loc242))
#loc520 = loc("conv2d_662.dc.transpose.1"(#loc242))
#loc521 = loc("conv2d_662.dc.conv2d.2"(#loc242))
#loc522 = loc("conv2d_662.dc.transpose.3"(#loc242))
#loc523 = loc("conv2d_662.dc.transpose.4"(#loc242))
#loc524 = loc("conv2d_677.dc.transpose.0"(#loc244))
#loc525 = loc("conv2d_677.dc.transpose.1"(#loc244))
#loc526 = loc("conv2d_677.dc.conv2d.2"(#loc244))
#loc527 = loc("conv2d_677.dc.transpose.3"(#loc244))
#loc528 = loc("conv2d_677.dc.transpose.4"(#loc244))
#loc529 = loc("torch.nn.modules.activation.SiLU::act"(#loc245))
#loc530 = loc("conv2d_694.dc.transpose.0"(#loc246))
#loc531 = loc("conv2d_694.dc.transpose.1"(#loc246))
#loc532 = loc("conv2d_694.dc.conv2d.2"(#loc246))
#loc533 = loc("conv2d_694.dc.transpose.3"(#loc246))
#loc534 = loc("conv2d_694.dc.transpose.4"(#loc246))
#loc535 = loc("torch.nn.modules.activation.SiLU::act"(#loc247))
#loc536 = loc("reduce_avg_711"(#loc248))
#loc537 = loc("torch.nn.modules.conv.Conv2d::conv_reduce"(#loc248))
#loc538 = loc("torch.nn.modules.activation.SiLU::act1"(#loc248))
#loc539 = loc("torch.nn.modules.conv.Conv2d::conv_expand"(#loc248))
#loc540 = loc("torch.nn.modules.activation.Sigmoid::gate"(#loc248))
#loc541 = loc("multiply_723"(#loc248))
#loc542 = loc("conv2d_724.dc.transpose.0"(#loc249))
#loc543 = loc("conv2d_724.dc.transpose.1"(#loc249))
#loc544 = loc("conv2d_724.dc.conv2d.2"(#loc249))
#loc545 = loc("conv2d_724.dc.transpose.3"(#loc249))
#loc546 = loc("conv2d_724.dc.transpose.4"(#loc249))
#loc547 = loc("conv2d_738.dc.transpose.0"(#loc250))
#loc548 = loc("conv2d_738.dc.transpose.1"(#loc250))
#loc549 = loc("conv2d_738.dc.conv2d.2"(#loc250))
#loc550 = loc("conv2d_738.dc.transpose.3"(#loc250))
#loc551 = loc("conv2d_738.dc.transpose.4"(#loc250))
#loc552 = loc("torch.nn.modules.activation.SiLU::act"(#loc251))
#loc553 = loc("conv2d_755.dc.transpose.0"(#loc252))
#loc554 = loc("conv2d_755.dc.transpose.1"(#loc252))
#loc555 = loc("conv2d_755.dc.conv2d.2"(#loc252))
#loc556 = loc("conv2d_755.dc.transpose.3"(#loc252))
#loc557 = loc("conv2d_755.dc.transpose.4"(#loc252))
#loc558 = loc("torch.nn.modules.activation.SiLU::act"(#loc253))
#loc559 = loc("reduce_avg_772"(#loc254))
#loc560 = loc("torch.nn.modules.conv.Conv2d::conv_reduce"(#loc254))
#loc561 = loc("torch.nn.modules.activation.SiLU::act1"(#loc254))
#loc562 = loc("torch.nn.modules.conv.Conv2d::conv_expand"(#loc254))
#loc563 = loc("torch.nn.modules.activation.Sigmoid::gate"(#loc254))
#loc564 = loc("multiply_784"(#loc254))
#loc565 = loc("conv2d_785.dc.transpose.0"(#loc255))
#loc566 = loc("conv2d_785.dc.transpose.1"(#loc255))
#loc567 = loc("conv2d_785.dc.conv2d.2"(#loc255))
#loc568 = loc("conv2d_785.dc.transpose.3"(#loc255))
#loc569 = loc("conv2d_785.dc.transpose.4"(#loc255))
#loc570 = loc("conv2d_800.dc.transpose.0"(#loc257))
#loc571 = loc("conv2d_800.dc.transpose.1"(#loc257))
#loc572 = loc("conv2d_800.dc.conv2d.2"(#loc257))
#loc573 = loc("conv2d_800.dc.transpose.3"(#loc257))
#loc574 = loc("conv2d_800.dc.transpose.4"(#loc257))
#loc575 = loc("torch.nn.modules.activation.SiLU::act"(#loc258))
#loc576 = loc("conv2d_817.dc.transpose.0"(#loc259))
#loc577 = loc("conv2d_817.dc.transpose.1"(#loc259))
#loc578 = loc("conv2d_817.dc.conv2d.2"(#loc259))
#loc579 = loc("conv2d_817.dc.transpose.3"(#loc259))
#loc580 = loc("conv2d_817.dc.transpose.4"(#loc259))
#loc581 = loc("torch.nn.modules.activation.SiLU::act"(#loc260))
#loc582 = loc("reduce_avg_834"(#loc261))
#loc583 = loc("torch.nn.modules.conv.Conv2d::conv_reduce"(#loc261))
#loc584 = loc("torch.nn.modules.activation.SiLU::act1"(#loc261))
#loc585 = loc("torch.nn.modules.conv.Conv2d::conv_expand"(#loc261))
#loc586 = loc("torch.nn.modules.activation.Sigmoid::gate"(#loc261))
#loc587 = loc("multiply_846"(#loc261))
#loc588 = loc("conv2d_847.dc.transpose.0"(#loc262))
#loc589 = loc("conv2d_847.dc.transpose.1"(#loc262))
#loc590 = loc("conv2d_847.dc.conv2d.2"(#loc262))
#loc591 = loc("conv2d_847.dc.transpose.3"(#loc262))
#loc592 = loc("conv2d_847.dc.transpose.4"(#loc262))
#loc593 = loc("conv2d_862.dc.transpose.0"(#loc264))
#loc594 = loc("conv2d_862.dc.transpose.1"(#loc264))
#loc595 = loc("conv2d_862.dc.conv2d.2"(#loc264))
#loc596 = loc("conv2d_862.dc.transpose.3"(#loc264))
#loc597 = loc("conv2d_862.dc.transpose.4"(#loc264))
#loc598 = loc("torch.nn.modules.activation.SiLU::act"(#loc265))
#loc599 = loc("conv2d_879.dc.transpose.0"(#loc266))
#loc600 = loc("conv2d_879.dc.transpose.1"(#loc266))
#loc601 = loc("conv2d_879.dc.conv2d.2"(#loc266))
#loc602 = loc("conv2d_879.dc.transpose.3"(#loc266))
#loc603 = loc("conv2d_879.dc.transpose.4"(#loc266))
#loc604 = loc("torch.nn.modules.activation.SiLU::act"(#loc267))
#loc605 = loc("reduce_avg_896"(#loc268))
#loc606 = loc("torch.nn.modules.conv.Conv2d::conv_reduce"(#loc268))
#loc607 = loc("torch.nn.modules.activation.SiLU::act1"(#loc268))
#loc608 = loc("torch.nn.modules.conv.Conv2d::conv_expand"(#loc268))
#loc609 = loc("torch.nn.modules.activation.Sigmoid::gate"(#loc268))
#loc610 = loc("multiply_908"(#loc268))
#loc611 = loc("conv2d_909.dc.transpose.0"(#loc269))
#loc612 = loc("conv2d_909.dc.transpose.1"(#loc269))
#loc613 = loc("conv2d_909.dc.conv2d.2"(#loc269))
#loc614 = loc("conv2d_909.dc.transpose.3"(#loc269))
#loc615 = loc("conv2d_909.dc.transpose.4"(#loc269))
#loc616 = loc("conv2d_924.dc.transpose.0"(#loc271))
#loc617 = loc("conv2d_924.dc.transpose.1"(#loc271))
#loc618 = loc("conv2d_924.dc.conv2d.2"(#loc271))
#loc619 = loc("conv2d_924.dc.transpose.3"(#loc271))
#loc620 = loc("conv2d_924.dc.transpose.4"(#loc271))
#loc621 = loc("torch.nn.modules.activation.SiLU::act"(#loc272))
#loc622 = loc("conv2d_941.dc.transpose.0"(#loc273))
#loc623 = loc("conv2d_941.dc.transpose.1"(#loc273))
#loc624 = loc("conv2d_941.dc.conv2d.2"(#loc273))
#loc625 = loc("conv2d_941.dc.transpose.3"(#loc273))
#loc626 = loc("conv2d_941.dc.transpose.4"(#loc273))
#loc627 = loc("torch.nn.modules.activation.SiLU::act"(#loc274))
#loc628 = loc("reduce_avg_958"(#loc275))
#loc629 = loc("torch.nn.modules.conv.Conv2d::conv_reduce"(#loc275))
#loc630 = loc("torch.nn.modules.activation.SiLU::act1"(#loc275))
#loc631 = loc("torch.nn.modules.conv.Conv2d::conv_expand"(#loc275))
#loc632 = loc("torch.nn.modules.activation.Sigmoid::gate"(#loc275))
#loc633 = loc("multiply_970"(#loc275))
#loc634 = loc("conv2d_971.dc.transpose.0"(#loc276))
#loc635 = loc("conv2d_971.dc.transpose.1"(#loc276))
#loc636 = loc("conv2d_971.dc.conv2d.2"(#loc276))
#loc637 = loc("conv2d_971.dc.transpose.3"(#loc276))
#loc638 = loc("conv2d_971.dc.transpose.4"(#loc276))
#loc639 = loc("sigmoid_31"(#loc282))
#loc640 = loc("multiply_32"(#loc282))
#loc641 = loc("conv2d_35.dc.transpose.0"(#loc284))
#loc642 = loc("conv2d_35.dc.transpose.1"(#loc284))
#loc643 = loc("conv2d_35.dc.conv2d.4"(#loc284))
#loc644 = loc("conv2d_35.dc.transpose.5"(#loc284))
#loc645 = loc("conv2d_35.dc.transpose.6"(#loc284))
#loc646 = loc("sigmoid_39"(#loc285))
#loc647 = loc("multiply_40"(#loc285))
#loc648 = loc("conv2d_41.dc.transpose.0"(#loc286))
#loc649 = loc("conv2d_41.dc.transpose.1"(#loc286))
#loc650 = loc("conv2d_41.dc.conv2d.4"(#loc286))
#loc651 = loc("conv2d_41.dc.transpose.5"(#loc286))
#loc652 = loc("conv2d_41.dc.transpose.6"(#loc286))
#loc653 = loc("sigmoid_45"(#loc287))
#loc654 = loc("sigmoid_75"(#loc299))
#loc655 = loc("multiply_76"(#loc299))
#loc656 = loc("sigmoid_92"(#loc305))
#loc657 = loc("multiply_93"(#loc305))
#loc658 = loc("conv2d_96.dc.transpose.0"(#loc307))
#loc659 = loc("conv2d_96.dc.transpose.1"(#loc307))
#loc660 = loc("conv2d_96.dc.conv2d.4"(#loc307))
#loc661 = loc("conv2d_96.dc.transpose.5"(#loc307))
#loc662 = loc("conv2d_96.dc.transpose.6"(#loc307))
#loc663 = loc("sigmoid_100"(#loc308))
#loc664 = loc("multiply_101"(#loc308))
#loc665 = loc("conv2d_102.dc.transpose.0"(#loc309))
#loc666 = loc("conv2d_102.dc.transpose.1"(#loc309))
#loc667 = loc("conv2d_102.dc.conv2d.4"(#loc309))
#loc668 = loc("conv2d_102.dc.transpose.5"(#loc309))
#loc669 = loc("conv2d_102.dc.transpose.6"(#loc309))
#loc670 = loc("sigmoid_106"(#loc310))
#loc671 = loc("sigmoid_136"(#loc322))
#loc672 = loc("multiply_137"(#loc322))
#loc673 = loc("sigmoid_153"(#loc328))
#loc674 = loc("multiply_154"(#loc328))
#loc675 = loc("conv2d_157.dc.transpose.0"(#loc330))
#loc676 = loc("conv2d_157.dc.transpose.1"(#loc330))
#loc677 = loc("conv2d_157.dc.conv2d.4"(#loc330))
#loc678 = loc("conv2d_157.dc.transpose.5"(#loc330))
#loc679 = loc("conv2d_157.dc.transpose.6"(#loc330))
#loc680 = loc("sigmoid_161"(#loc331))
#loc681 = loc("multiply_162"(#loc331))
#loc682 = loc("conv2d_163.dc.transpose.0"(#loc332))
#loc683 = loc("conv2d_163.dc.transpose.1"(#loc332))
#loc684 = loc("conv2d_163.dc.conv2d.4"(#loc332))
#loc685 = loc("conv2d_163.dc.transpose.5"(#loc332))
#loc686 = loc("conv2d_163.dc.transpose.6"(#loc332))
#loc687 = loc("sigmoid_167"(#loc333))
#loc688 = loc("sigmoid_198"(#loc345))
#loc689 = loc("multiply_199"(#loc345))
#loc690 = loc("sigmoid_215"(#loc351))
#loc691 = loc("multiply_216"(#loc351))
#loc692 = loc("conv2d_219.dc.transpose.0"(#loc353))
#loc693 = loc("conv2d_219.dc.transpose.1"(#loc353))
#loc694 = loc("conv2d_219.dc.conv2d.4"(#loc353))
#loc695 = loc("conv2d_219.dc.transpose.5"(#loc353))
#loc696 = loc("conv2d_219.dc.transpose.6"(#loc353))
#loc697 = loc("sigmoid_223"(#loc354))
#loc698 = loc("multiply_224"(#loc354))
#loc699 = loc("conv2d_225.dc.transpose.0"(#loc355))
#loc700 = loc("conv2d_225.dc.transpose.1"(#loc355))
#loc701 = loc("conv2d_225.dc.conv2d.4"(#loc355))
#loc702 = loc("conv2d_225.dc.transpose.5"(#loc355))
#loc703 = loc("conv2d_225.dc.transpose.6"(#loc355))
#loc704 = loc("sigmoid_229"(#loc356))
#loc705 = loc("sigmoid_259"(#loc368))
#loc706 = loc("multiply_260"(#loc368))
#loc707 = loc("sigmoid_276"(#loc374))
#loc708 = loc("multiply_277"(#loc374))
#loc709 = loc("conv2d_280.dc.transpose.0"(#loc376))
#loc710 = loc("conv2d_280.dc.transpose.1"(#loc376))
#loc711 = loc("conv2d_280.dc.conv2d.4"(#loc376))
#loc712 = loc("conv2d_280.dc.transpose.5"(#loc376))
#loc713 = loc("conv2d_280.dc.transpose.6"(#loc376))
#loc714 = loc("sigmoid_284"(#loc377))
#loc715 = loc("multiply_285"(#loc377))
#loc716 = loc("conv2d_286.dc.transpose.0"(#loc378))
#loc717 = loc("conv2d_286.dc.transpose.1"(#loc378))
#loc718 = loc("conv2d_286.dc.conv2d.4"(#loc378))
#loc719 = loc("conv2d_286.dc.transpose.5"(#loc378))
#loc720 = loc("conv2d_286.dc.transpose.6"(#loc378))
#loc721 = loc("sigmoid_290"(#loc379))
#loc722 = loc("sigmoid_321"(#loc391))
#loc723 = loc("multiply_322"(#loc391))
#loc724 = loc("sigmoid_338"(#loc397))
#loc725 = loc("multiply_339"(#loc397))
#loc726 = loc("conv2d_342.dc.transpose.0"(#loc399))
#loc727 = loc("conv2d_342.dc.transpose.1"(#loc399))
#loc728 = loc("conv2d_342.dc.conv2d.4"(#loc399))
#loc729 = loc("conv2d_342.dc.transpose.5"(#loc399))
#loc730 = loc("conv2d_342.dc.transpose.6"(#loc399))
#loc731 = loc("sigmoid_346"(#loc400))
#loc732 = loc("multiply_347"(#loc400))
#loc733 = loc("conv2d_348.dc.transpose.0"(#loc401))
#loc734 = loc("conv2d_348.dc.transpose.1"(#loc401))
#loc735 = loc("conv2d_348.dc.conv2d.4"(#loc401))
#loc736 = loc("conv2d_348.dc.transpose.5"(#loc401))
#loc737 = loc("conv2d_348.dc.transpose.6"(#loc401))
#loc738 = loc("sigmoid_352"(#loc402))
#loc739 = loc("sigmoid_382"(#loc414))
#loc740 = loc("multiply_383"(#loc414))
#loc741 = loc("sigmoid_399"(#loc420))
#loc742 = loc("multiply_400"(#loc420))
#loc743 = loc("conv2d_403.dc.transpose.0"(#loc422))
#loc744 = loc("conv2d_403.dc.transpose.1"(#loc422))
#loc745 = loc("conv2d_403.dc.conv2d.4"(#loc422))
#loc746 = loc("conv2d_403.dc.transpose.5"(#loc422))
#loc747 = loc("conv2d_403.dc.transpose.6"(#loc422))
#loc748 = loc("sigmoid_407"(#loc423))
#loc749 = loc("multiply_408"(#loc423))
#loc750 = loc("conv2d_409.dc.transpose.0"(#loc424))
#loc751 = loc("conv2d_409.dc.transpose.1"(#loc424))
#loc752 = loc("conv2d_409.dc.conv2d.4"(#loc424))
#loc753 = loc("conv2d_409.dc.transpose.5"(#loc424))
#loc754 = loc("conv2d_409.dc.transpose.6"(#loc424))
#loc755 = loc("sigmoid_413"(#loc425))
#loc756 = loc("sigmoid_444"(#loc437))
#loc757 = loc("multiply_445"(#loc437))
#loc758 = loc("sigmoid_461"(#loc443))
#loc759 = loc("multiply_462"(#loc443))
#loc760 = loc("conv2d_465.dc.transpose.0"(#loc445))
#loc761 = loc("conv2d_465.dc.transpose.1"(#loc445))
#loc762 = loc("conv2d_465.dc.conv2d.4"(#loc445))
#loc763 = loc("conv2d_465.dc.transpose.5"(#loc445))
#loc764 = loc("conv2d_465.dc.transpose.6"(#loc445))
#loc765 = loc("sigmoid_469"(#loc446))
#loc766 = loc("multiply_470"(#loc446))
#loc767 = loc("conv2d_471.dc.transpose.0"(#loc447))
#loc768 = loc("conv2d_471.dc.transpose.1"(#loc447))
#loc769 = loc("conv2d_471.dc.conv2d.4"(#loc447))
#loc770 = loc("conv2d_471.dc.transpose.5"(#loc447))
#loc771 = loc("conv2d_471.dc.transpose.6"(#loc447))
#loc772 = loc("sigmoid_475"(#loc448))
#loc773 = loc("sigmoid_506"(#loc460))
#loc774 = loc("multiply_507"(#loc460))
#loc775 = loc("sigmoid_523"(#loc466))
#loc776 = loc("multiply_524"(#loc466))
#loc777 = loc("conv2d_527.dc.transpose.0"(#loc468))
#loc778 = loc("conv2d_527.dc.transpose.1"(#loc468))
#loc779 = loc("conv2d_527.dc.conv2d.4"(#loc468))
#loc780 = loc("conv2d_527.dc.transpose.5"(#loc468))
#loc781 = loc("conv2d_527.dc.transpose.6"(#loc468))
#loc782 = loc("sigmoid_531"(#loc469))
#loc783 = loc("multiply_532"(#loc469))
#loc784 = loc("conv2d_533.dc.transpose.0"(#loc470))
#loc785 = loc("conv2d_533.dc.transpose.1"(#loc470))
#loc786 = loc("conv2d_533.dc.conv2d.4"(#loc470))
#loc787 = loc("conv2d_533.dc.transpose.5"(#loc470))
#loc788 = loc("conv2d_533.dc.transpose.6"(#loc470))
#loc789 = loc("sigmoid_537"(#loc471))
#loc790 = loc("sigmoid_567"(#loc483))
#loc791 = loc("multiply_568"(#loc483))
#loc792 = loc("sigmoid_584"(#loc489))
#loc793 = loc("multiply_585"(#loc489))
#loc794 = loc("conv2d_588.dc.transpose.0"(#loc491))
#loc795 = loc("conv2d_588.dc.transpose.1"(#loc491))
#loc796 = loc("conv2d_588.dc.conv2d.4"(#loc491))
#loc797 = loc("conv2d_588.dc.transpose.5"(#loc491))
#loc798 = loc("conv2d_588.dc.transpose.6"(#loc491))
#loc799 = loc("sigmoid_592"(#loc492))
#loc800 = loc("multiply_593"(#loc492))
#loc801 = loc("conv2d_594.dc.transpose.0"(#loc493))
#loc802 = loc("conv2d_594.dc.transpose.1"(#loc493))
#loc803 = loc("conv2d_594.dc.conv2d.4"(#loc493))
#loc804 = loc("conv2d_594.dc.transpose.5"(#loc493))
#loc805 = loc("conv2d_594.dc.transpose.6"(#loc493))
#loc806 = loc("sigmoid_598"(#loc494))
#loc807 = loc("sigmoid_629"(#loc506))
#loc808 = loc("multiply_630"(#loc506))
#loc809 = loc("sigmoid_646"(#loc512))
#loc810 = loc("multiply_647"(#loc512))
#loc811 = loc("conv2d_650.dc.transpose.0"(#loc514))
#loc812 = loc("conv2d_650.dc.transpose.1"(#loc514))
#loc813 = loc("conv2d_650.dc.conv2d.4"(#loc514))
#loc814 = loc("conv2d_650.dc.transpose.5"(#loc514))
#loc815 = loc("conv2d_650.dc.transpose.6"(#loc514))
#loc816 = loc("sigmoid_654"(#loc515))
#loc817 = loc("multiply_655"(#loc515))
#loc818 = loc("conv2d_656.dc.transpose.0"(#loc516))
#loc819 = loc("conv2d_656.dc.transpose.1"(#loc516))
#loc820 = loc("conv2d_656.dc.conv2d.4"(#loc516))
#loc821 = loc("conv2d_656.dc.transpose.5"(#loc516))
#loc822 = loc("conv2d_656.dc.transpose.6"(#loc516))
#loc823 = loc("sigmoid_660"(#loc517))
#loc824 = loc("sigmoid_691"(#loc529))
#loc825 = loc("multiply_692"(#loc529))
#loc826 = loc("sigmoid_708"(#loc535))
#loc827 = loc("multiply_709"(#loc535))
#loc828 = loc("conv2d_712.dc.transpose.0"(#loc537))
#loc829 = loc("conv2d_712.dc.transpose.1"(#loc537))
#loc830 = loc("conv2d_712.dc.conv2d.4"(#loc537))
#loc831 = loc("conv2d_712.dc.transpose.5"(#loc537))
#loc832 = loc("conv2d_712.dc.transpose.6"(#loc537))
#loc833 = loc("sigmoid_716"(#loc538))
#loc834 = loc("multiply_717"(#loc538))
#loc835 = loc("conv2d_718.dc.transpose.0"(#loc539))
#loc836 = loc("conv2d_718.dc.transpose.1"(#loc539))
#loc837 = loc("conv2d_718.dc.conv2d.4"(#loc539))
#loc838 = loc("conv2d_718.dc.transpose.5"(#loc539))
#loc839 = loc("conv2d_718.dc.transpose.6"(#loc539))
#loc840 = loc("sigmoid_722"(#loc540))
#loc841 = loc("sigmoid_752"(#loc552))
#loc842 = loc("multiply_753"(#loc552))
#loc843 = loc("sigmoid_769"(#loc558))
#loc844 = loc("multiply_770"(#loc558))
#loc845 = loc("conv2d_773.dc.transpose.0"(#loc560))
#loc846 = loc("conv2d_773.dc.transpose.1"(#loc560))
#loc847 = loc("conv2d_773.dc.conv2d.4"(#loc560))
#loc848 = loc("conv2d_773.dc.transpose.5"(#loc560))
#loc849 = loc("conv2d_773.dc.transpose.6"(#loc560))
#loc850 = loc("sigmoid_777"(#loc561))
#loc851 = loc("multiply_778"(#loc561))
#loc852 = loc("conv2d_779.dc.transpose.0"(#loc562))
#loc853 = loc("conv2d_779.dc.transpose.1"(#loc562))
#loc854 = loc("conv2d_779.dc.conv2d.4"(#loc562))
#loc855 = loc("conv2d_779.dc.transpose.5"(#loc562))
#loc856 = loc("conv2d_779.dc.transpose.6"(#loc562))
#loc857 = loc("sigmoid_783"(#loc563))
#loc858 = loc("sigmoid_814"(#loc575))
#loc859 = loc("multiply_815"(#loc575))
#loc860 = loc("sigmoid_831"(#loc581))
#loc861 = loc("multiply_832"(#loc581))
#loc862 = loc("conv2d_835.dc.transpose.0"(#loc583))
#loc863 = loc("conv2d_835.dc.transpose.1"(#loc583))
#loc864 = loc("conv2d_835.dc.conv2d.4"(#loc583))
#loc865 = loc("conv2d_835.dc.transpose.5"(#loc583))
#loc866 = loc("conv2d_835.dc.transpose.6"(#loc583))
#loc867 = loc("sigmoid_839"(#loc584))
#loc868 = loc("multiply_840"(#loc584))
#loc869 = loc("conv2d_841.dc.transpose.0"(#loc585))
#loc870 = loc("conv2d_841.dc.transpose.1"(#loc585))
#loc871 = loc("conv2d_841.dc.conv2d.4"(#loc585))
#loc872 = loc("conv2d_841.dc.transpose.5"(#loc585))
#loc873 = loc("conv2d_841.dc.transpose.6"(#loc585))
#loc874 = loc("sigmoid_845"(#loc586))
#loc875 = loc("sigmoid_876"(#loc598))
#loc876 = loc("multiply_877"(#loc598))
#loc877 = loc("sigmoid_893"(#loc604))
#loc878 = loc("multiply_894"(#loc604))
#loc879 = loc("conv2d_897.dc.transpose.0"(#loc606))
#loc880 = loc("conv2d_897.dc.transpose.1"(#loc606))
#loc881 = loc("conv2d_897.dc.conv2d.4"(#loc606))
#loc882 = loc("conv2d_897.dc.transpose.5"(#loc606))
#loc883 = loc("conv2d_897.dc.transpose.6"(#loc606))
#loc884 = loc("sigmoid_901"(#loc607))
#loc885 = loc("multiply_902"(#loc607))
#loc886 = loc("conv2d_903.dc.transpose.0"(#loc608))
#loc887 = loc("conv2d_903.dc.transpose.1"(#loc608))
#loc888 = loc("conv2d_903.dc.conv2d.4"(#loc608))
#loc889 = loc("conv2d_903.dc.transpose.5"(#loc608))
#loc890 = loc("conv2d_903.dc.transpose.6"(#loc608))
#loc891 = loc("sigmoid_907"(#loc609))
#loc892 = loc("sigmoid_938"(#loc621))
#loc893 = loc("multiply_939"(#loc621))
#loc894 = loc("sigmoid_955"(#loc627))
#loc895 = loc("multiply_956"(#loc627))
#loc896 = loc("conv2d_959.dc.transpose.0"(#loc629))
#loc897 = loc("conv2d_959.dc.transpose.1"(#loc629))
#loc898 = loc("conv2d_959.dc.conv2d.4"(#loc629))
#loc899 = loc("conv2d_959.dc.transpose.5"(#loc629))
#loc900 = loc("conv2d_959.dc.transpose.6"(#loc629))
#loc901 = loc("sigmoid_963"(#loc630))
#loc902 = loc("multiply_964"(#loc630))
#loc903 = loc("conv2d_965.dc.transpose.0"(#loc631))
#loc904 = loc("conv2d_965.dc.transpose.1"(#loc631))
#loc905 = loc("conv2d_965.dc.conv2d.4"(#loc631))
#loc906 = loc("conv2d_965.dc.transpose.5"(#loc631))
#loc907 = loc("conv2d_965.dc.transpose.6"(#loc631))
#loc908 = loc("sigmoid_969"(#loc632))
