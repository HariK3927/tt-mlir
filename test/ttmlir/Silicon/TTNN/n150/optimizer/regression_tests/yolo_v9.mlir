// REQUIRES: opmodel, regression
// RUN: ttmlir-opt --ttir-to-ttnn-backend-pipeline="system-desc-path=%system_desc_path% enable-optimizer=true memory-layout-analysis-enabled=false enable-fusing-pass=true" -o yolo_v9_ttnn.mlir %s
// RUN: ttmlir-translate --ttnn-to-flatbuffer yolo_v9_ttnn.mlir > %t.ttnn
#loc = loc("YOLOv9":0:0)
module @YOLOv9 {
  func.func @forward(%arg0: tensor<1x3x640x640xbf16> {ttcore.argument_type = #ttcore.argument_type<input>, ttir.name = "input_1"} loc("YOLOv9":0:0), %arg1: tensor<1x2x8400xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_add_2579"} loc("YOLOv9":0:0), %arg2: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_3"} loc("YOLOv9":0:0), %arg3: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_3_fork_clone3564"} loc("YOLOv9":0:0), %arg4: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_19"} loc("YOLOv9":0:0), %arg5: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_19_fork_clone3316"} loc("YOLOv9":0:0), %arg6: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_35"} loc("YOLOv9":0:0), %arg7: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_35_fork_clone3024"} loc("YOLOv9":0:0), %arg8: tensor<1x32x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_53"} loc("YOLOv9":0:0), %arg9: tensor<1x32x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_53_fork_clone3620"} loc("YOLOv9":0:0), %arg10: tensor<1x32x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_69"} loc("YOLOv9":0:0), %arg11: tensor<1x32x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_69_fork_clone3791"} loc("YOLOv9":0:0), %arg12: tensor<1x32x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_83"} loc("YOLOv9":0:0), %arg13: tensor<1x32x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_83_fork_clone3794"} loc("YOLOv9":0:0), %arg14: tensor<1x32x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_100"} loc("YOLOv9":0:0), %arg15: tensor<1x32x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_100_fork_clone3625"} loc("YOLOv9":0:0), %arg16: tensor<1x32x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_117"} loc("YOLOv9":0:0), %arg17: tensor<1x32x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_117_fork_clone3576"} loc("YOLOv9":0:0), %arg18: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_134"} loc("YOLOv9":0:0), %arg19: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_134_fork_clone3250"} loc("YOLOv9":0:0), %arg20: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_150"} loc("YOLOv9":0:0), %arg21: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_150_fork_clone2924"} loc("YOLOv9":0:0), %arg22: tensor<1x32x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_166"} loc("YOLOv9":0:0), %arg23: tensor<1x32x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_166_fork_clone3631"} loc("YOLOv9":0:0), %arg24: tensor<1x32x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_182"} loc("YOLOv9":0:0), %arg25: tensor<1x32x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_182_fork_clone3797"} loc("YOLOv9":0:0), %arg26: tensor<1x32x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_196"} loc("YOLOv9":0:0), %arg27: tensor<1x32x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_196_fork_clone3800"} loc("YOLOv9":0:0), %arg28: tensor<1x32x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_213"} loc("YOLOv9":0:0), %arg29: tensor<1x32x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_213_fork_clone3636"} loc("YOLOv9":0:0), %arg30: tensor<1x32x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_230"} loc("YOLOv9":0:0), %arg31: tensor<1x32x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_230_fork_clone3586"} loc("YOLOv9":0:0), %arg32: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_247"} loc("YOLOv9":0:0), %arg33: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_247_fork_clone3257"} loc("YOLOv9":0:0), %arg34: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_263"} loc("YOLOv9":0:0), %arg35: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_263_fork_clone2929"} loc("YOLOv9":0:0), %arg36: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_280"} loc("YOLOv9":0:0), %arg37: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_280_fork_clone2483"} loc("YOLOv9":0:0), %arg38: tensor<256x1x2x2xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "dc.input_tensor.avg_pool2d_293.0"} loc("YOLOv9":0:0), %arg39: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_298"} loc("YOLOv9":0:0), %arg40: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_298_fork_clone1965"} loc("YOLOv9":0:0), %arg41: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_316"} loc("YOLOv9":0:0), %arg42: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_316_fork_clone1969"} loc("YOLOv9":0:0), %arg43: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_333"} loc("YOLOv9":0:0), %arg44: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_333_fork_clone1475"} loc("YOLOv9":0:0), %arg45: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_351"} loc("YOLOv9":0:0), %arg46: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_351_fork_clone2320"} loc("YOLOv9":0:0), %arg47: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_367"} loc("YOLOv9":0:0), %arg48: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_367_fork_clone2762"} loc("YOLOv9":0:0), %arg49: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_381"} loc("YOLOv9":0:0), %arg50: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_381_fork_clone2765"} loc("YOLOv9":0:0), %arg51: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_398"} loc("YOLOv9":0:0), %arg52: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_398_fork_clone2325"} loc("YOLOv9":0:0), %arg53: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_415"} loc("YOLOv9":0:0), %arg54: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_415_fork_clone2257"} loc("YOLOv9":0:0), %arg55: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_432"} loc("YOLOv9":0:0), %arg56: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_432_fork_clone1801"} loc("YOLOv9":0:0), %arg57: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_448"} loc("YOLOv9":0:0), %arg58: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_448_fork_clone1366"} loc("YOLOv9":0:0), %arg59: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_464"} loc("YOLOv9":0:0), %arg60: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_464_fork_clone2331"} loc("YOLOv9":0:0), %arg61: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_480"} loc("YOLOv9":0:0), %arg62: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_480_fork_clone2768"} loc("YOLOv9":0:0), %arg63: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_494"} loc("YOLOv9":0:0), %arg64: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_494_fork_clone2771"} loc("YOLOv9":0:0), %arg65: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_511"} loc("YOLOv9":0:0), %arg66: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_511_fork_clone2336"} loc("YOLOv9":0:0), %arg67: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_528"} loc("YOLOv9":0:0), %arg68: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_528_fork_clone2267"} loc("YOLOv9":0:0), %arg69: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_545"} loc("YOLOv9":0:0), %arg70: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_545_fork_clone1808"} loc("YOLOv9":0:0), %arg71: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_561"} loc("YOLOv9":0:0), %arg72: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_561_fork_clone1371"} loc("YOLOv9":0:0), %arg73: tensor<1x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_578"} loc("YOLOv9":0:0), %arg74: tensor<1x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_578_fork_clone878"} loc("YOLOv9":0:0), %arg75: tensor<512x1x2x2xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "dc.input_tensor.avg_pool2d_591.0"} loc("YOLOv9":0:0), %arg76: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_596"} loc("YOLOv9":0:0), %arg77: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_596_fork_clone2949"} loc("YOLOv9":0:0), %arg78: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_614"} loc("YOLOv9":0:0), %arg79: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_614_fork_clone2953"} loc("YOLOv9":0:0), %arg80: tensor<1x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_631"} loc("YOLOv9":0:0), %arg81: tensor<1x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_631_fork_clone2514"} loc("YOLOv9":0:0), %arg82: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_649"} loc("YOLOv9":0:0), %arg83: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_649_fork_clone3266"} loc("YOLOv9":0:0), %arg84: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_665"} loc("YOLOv9":0:0), %arg85: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_665_fork_clone3589"} loc("YOLOv9":0:0), %arg86: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_679"} loc("YOLOv9":0:0), %arg87: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_679_fork_clone3592"} loc("YOLOv9":0:0), %arg88: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_696"} loc("YOLOv9":0:0), %arg89: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_696_fork_clone3271"} loc("YOLOv9":0:0), %arg90: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_713"} loc("YOLOv9":0:0), %arg91: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_713_fork_clone3206"} loc("YOLOv9":0:0), %arg92: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_730"} loc("YOLOv9":0:0), %arg93: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_730_fork_clone2783"} loc("YOLOv9":0:0), %arg94: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_746"} loc("YOLOv9":0:0), %arg95: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_746_fork_clone2426"} loc("YOLOv9":0:0), %arg96: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_762"} loc("YOLOv9":0:0), %arg97: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_762_fork_clone3277"} loc("YOLOv9":0:0), %arg98: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_778"} loc("YOLOv9":0:0), %arg99: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_778_fork_clone3595"} loc("YOLOv9":0:0), %arg100: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_792"} loc("YOLOv9":0:0), %arg101: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_792_fork_clone3598"} loc("YOLOv9":0:0), %arg102: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_809"} loc("YOLOv9":0:0), %arg103: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_809_fork_clone3282"} loc("YOLOv9":0:0), %arg104: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_826"} loc("YOLOv9":0:0), %arg105: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_826_fork_clone3216"} loc("YOLOv9":0:0), %arg106: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_843"} loc("YOLOv9":0:0), %arg107: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_843_fork_clone2790"} loc("YOLOv9":0:0), %arg108: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_859"} loc("YOLOv9":0:0), %arg109: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_859_fork_clone2431"} loc("YOLOv9":0:0), %arg110: tensor<1x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_876"} loc("YOLOv9":0:0), %arg111: tensor<1x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_876_fork_clone2012"} loc("YOLOv9":0:0), %arg112: tensor<512x1x2x2xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "dc.input_tensor.avg_pool2d_889.0"} loc("YOLOv9":0:0), %arg113: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_894"} loc("YOLOv9":0:0), %arg114: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_894_fork_clone2808"} loc("YOLOv9":0:0), %arg115: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_912"} loc("YOLOv9":0:0), %arg116: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_912_fork_clone2812"} loc("YOLOv9":0:0), %arg117: tensor<1x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_929"} loc("YOLOv9":0:0), %arg118: tensor<1x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_929_fork_clone2379"} loc("YOLOv9":0:0), %arg119: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_947"} loc("YOLOv9":0:0), %arg120: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_947_fork_clone3158"} loc("YOLOv9":0:0), %arg121: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_963"} loc("YOLOv9":0:0), %arg122: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_963_fork_clone3493"} loc("YOLOv9":0:0), %arg123: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_977"} loc("YOLOv9":0:0), %arg124: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_977_fork_clone3496"} loc("YOLOv9":0:0), %arg125: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_994"} loc("YOLOv9":0:0), %arg126: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_994_fork_clone3163"} loc("YOLOv9":0:0), %arg127: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1011"} loc("YOLOv9":0:0), %arg128: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1011_fork_clone3076"} loc("YOLOv9":0:0), %arg129: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1028"} loc("YOLOv9":0:0), %arg130: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1028_fork_clone2649"} loc("YOLOv9":0:0), %arg131: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1044"} loc("YOLOv9":0:0), %arg132: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1044_fork_clone2305"} loc("YOLOv9":0:0), %arg133: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1060"} loc("YOLOv9":0:0), %arg134: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1060_fork_clone3169"} loc("YOLOv9":0:0), %arg135: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1076"} loc("YOLOv9":0:0), %arg136: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1076_fork_clone3499"} loc("YOLOv9":0:0), %arg137: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1090"} loc("YOLOv9":0:0), %arg138: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1090_fork_clone3502"} loc("YOLOv9":0:0), %arg139: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1107"} loc("YOLOv9":0:0), %arg140: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1107_fork_clone3174"} loc("YOLOv9":0:0), %arg141: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1124"} loc("YOLOv9":0:0), %arg142: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1124_fork_clone3086"} loc("YOLOv9":0:0), %arg143: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1141"} loc("YOLOv9":0:0), %arg144: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1141_fork_clone2656"} loc("YOLOv9":0:0), %arg145: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1157"} loc("YOLOv9":0:0), %arg146: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1157_fork_clone2310"} loc("YOLOv9":0:0), %arg147: tensor<1x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1174"} loc("YOLOv9":0:0), %arg148: tensor<1x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1174_fork_clone1859"} loc("YOLOv9":0:0), %arg149: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1190"} loc("YOLOv9":0:0), %arg150: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1190_fork_clone1446"} loc("YOLOv9":0:0), %arg151: tensor<1x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1210"} loc("YOLOv9":0:0), %arg152: tensor<1x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1210_fork_clone948"} loc("YOLOv9":0:0), %arg153: tensor<1x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1228"} loc("YOLOv9":0:0), %arg154: tensor<1x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1228_fork_clone1516"} loc("YOLOv9":0:0), %arg155: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1246"} loc("YOLOv9":0:0), %arg156: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1246_fork_clone2355"} loc("YOLOv9":0:0), %arg157: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1262"} loc("YOLOv9":0:0), %arg158: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1262_fork_clone2795"} loc("YOLOv9":0:0), %arg159: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1276"} loc("YOLOv9":0:0), %arg160: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1276_fork_clone2798"} loc("YOLOv9":0:0), %arg161: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1293"} loc("YOLOv9":0:0), %arg162: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1293_fork_clone2360"} loc("YOLOv9":0:0), %arg163: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1310"} loc("YOLOv9":0:0), %arg164: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1310_fork_clone2286"} loc("YOLOv9":0:0), %arg165: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1327"} loc("YOLOv9":0:0), %arg166: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1327_fork_clone1831"} loc("YOLOv9":0:0), %arg167: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1343"} loc("YOLOv9":0:0), %arg168: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1343_fork_clone1408"} loc("YOLOv9":0:0), %arg169: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1359"} loc("YOLOv9":0:0), %arg170: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1359_fork_clone2366"} loc("YOLOv9":0:0), %arg171: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1375"} loc("YOLOv9":0:0), %arg172: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1375_fork_clone2801"} loc("YOLOv9":0:0), %arg173: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1389"} loc("YOLOv9":0:0), %arg174: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1389_fork_clone2804"} loc("YOLOv9":0:0), %arg175: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1406"} loc("YOLOv9":0:0), %arg176: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1406_fork_clone2371"} loc("YOLOv9":0:0), %arg177: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1423"} loc("YOLOv9":0:0), %arg178: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1423_fork_clone2296"} loc("YOLOv9":0:0), %arg179: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1440"} loc("YOLOv9":0:0), %arg180: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1440_fork_clone1838"} loc("YOLOv9":0:0), %arg181: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1456"} loc("YOLOv9":0:0), %arg182: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1456_fork_clone1413"} loc("YOLOv9":0:0), %arg183: tensor<1x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1473"} loc("YOLOv9":0:0), %arg184: tensor<1x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1473_fork_clone913"} loc("YOLOv9":0:0), %arg185: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1491"} loc("YOLOv9":0:0), %arg186: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1491_fork_clone580"} loc("YOLOv9":0:0), %arg187: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1509"} loc("YOLOv9":0:0), %arg188: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1509_fork_clone1271"} loc("YOLOv9":0:0), %arg189: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1525"} loc("YOLOv9":0:0), %arg190: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1525_fork_clone1813"} loc("YOLOv9":0:0), %arg191: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1539"} loc("YOLOv9":0:0), %arg192: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1539_fork_clone1816"} loc("YOLOv9":0:0), %arg193: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1556"} loc("YOLOv9":0:0), %arg194: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1556_fork_clone1276"} loc("YOLOv9":0:0), %arg195: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1573"} loc("YOLOv9":0:0), %arg196: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1573_fork_clone1176"} loc("YOLOv9":0:0), %arg197: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1590"} loc("YOLOv9":0:0), %arg198: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1590_fork_clone746"} loc("YOLOv9":0:0), %arg199: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1606"} loc("YOLOv9":0:0), %arg200: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1606_fork_clone542"} loc("YOLOv9":0:0), %arg201: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1622"} loc("YOLOv9":0:0), %arg202: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1622_fork_clone1282"} loc("YOLOv9":0:0), %arg203: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1638"} loc("YOLOv9":0:0), %arg204: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1638_fork_clone1819"} loc("YOLOv9":0:0), %arg205: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1652"} loc("YOLOv9":0:0), %arg206: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1652_fork_clone1822"} loc("YOLOv9":0:0), %arg207: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1669"} loc("YOLOv9":0:0), %arg208: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1669_fork_clone1287"} loc("YOLOv9":0:0), %arg209: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1686"} loc("YOLOv9":0:0), %arg210: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1686_fork_clone1186"} loc("YOLOv9":0:0), %arg211: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1703"} loc("YOLOv9":0:0), %arg212: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1703_fork_clone753"} loc("YOLOv9":0:0), %arg213: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1719"} loc("YOLOv9":0:0), %arg214: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1719_fork_clone547"} loc("YOLOv9":0:0), %arg215: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1736"} loc("YOLOv9":0:0), %arg216: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1736_fork_clone387"} loc("YOLOv9":0:0), %arg217: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1752"} loc("YOLOv9":0:0), %arg218: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1752_fork_clone274"} loc("YOLOv9":0:0), %arg219: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1768"} loc("YOLOv9":0:0), %arg220: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1768_fork_clone142"} loc("YOLOv9":0:0), %arg221: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1788"} loc("YOLOv9":0:0), %arg222: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1788_fork_clone279"} loc("YOLOv9":0:0), %arg223: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1804"} loc("YOLOv9":0:0), %arg224: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1804_fork_clone147"} loc("YOLOv9":0:0), %arg225: tensor<256x1x2x2xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "dc.input_tensor.avg_pool2d_1823.0"} loc("YOLOv9":0:0), %arg226: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1828"} loc("YOLOv9":0:0), %arg227: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1828_fork_clone996"} loc("YOLOv9":0:0), %arg228: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1846"} loc("YOLOv9":0:0), %arg229: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1846_fork_clone1000"} loc("YOLOv9":0:0), %arg230: tensor<1x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1864"} loc("YOLOv9":0:0), %arg231: tensor<1x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1864_fork_clone595"} loc("YOLOv9":0:0), %arg232: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1882"} loc("YOLOv9":0:0), %arg233: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1882_fork_clone1308"} loc("YOLOv9":0:0), %arg234: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1898"} loc("YOLOv9":0:0), %arg235: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1898_fork_clone1843"} loc("YOLOv9":0:0), %arg236: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1912"} loc("YOLOv9":0:0), %arg237: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1912_fork_clone1846"} loc("YOLOv9":0:0), %arg238: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1929"} loc("YOLOv9":0:0), %arg239: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1929_fork_clone1313"} loc("YOLOv9":0:0), %arg240: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1946"} loc("YOLOv9":0:0), %arg241: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1946_fork_clone1213"} loc("YOLOv9":0:0), %arg242: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1963"} loc("YOLOv9":0:0), %arg243: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1963_fork_clone768"} loc("YOLOv9":0:0), %arg244: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1979"} loc("YOLOv9":0:0), %arg245: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1979_fork_clone556"} loc("YOLOv9":0:0), %arg246: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1995"} loc("YOLOv9":0:0), %arg247: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1995_fork_clone1319"} loc("YOLOv9":0:0), %arg248: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2011"} loc("YOLOv9":0:0), %arg249: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2011_fork_clone1849"} loc("YOLOv9":0:0), %arg250: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2025"} loc("YOLOv9":0:0), %arg251: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2025_fork_clone1852"} loc("YOLOv9":0:0), %arg252: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2042"} loc("YOLOv9":0:0), %arg253: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2042_fork_clone1324"} loc("YOLOv9":0:0), %arg254: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2059"} loc("YOLOv9":0:0), %arg255: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2059_fork_clone1223"} loc("YOLOv9":0:0), %arg256: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2076"} loc("YOLOv9":0:0), %arg257: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2076_fork_clone775"} loc("YOLOv9":0:0), %arg258: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2092"} loc("YOLOv9":0:0), %arg259: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2092_fork_clone561"} loc("YOLOv9":0:0), %arg260: tensor<1x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2109"} loc("YOLOv9":0:0), %arg261: tensor<1x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2109_fork_clone398"} loc("YOLOv9":0:0), %arg262: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2125"} loc("YOLOv9":0:0), %arg263: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2125_fork_clone286"} loc("YOLOv9":0:0), %arg264: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2141"} loc("YOLOv9":0:0), %arg265: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2141_fork_clone152"} loc("YOLOv9":0:0), %arg266: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2161"} loc("YOLOv9":0:0), %arg267: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2161_fork_clone291"} loc("YOLOv9":0:0), %arg268: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2177"} loc("YOLOv9":0:0), %arg269: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2177_fork_clone157"} loc("YOLOv9":0:0), %arg270: tensor<512x1x2x2xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "dc.input_tensor.avg_pool2d_2196.0"} loc("YOLOv9":0:0), %arg271: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2201"} loc("YOLOv9":0:0), %arg272: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2201_fork_clone1028"} loc("YOLOv9":0:0), %arg273: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2219"} loc("YOLOv9":0:0), %arg274: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2219_fork_clone1032"} loc("YOLOv9":0:0), %arg275: tensor<1x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2237"} loc("YOLOv9":0:0), %arg276: tensor<1x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2237_fork_clone610"} loc("YOLOv9":0:0), %arg277: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2255"} loc("YOLOv9":0:0), %arg278: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2255_fork_clone1338"} loc("YOLOv9":0:0), %arg279: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2271"} loc("YOLOv9":0:0), %arg280: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2271_fork_clone1864"} loc("YOLOv9":0:0), %arg281: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2285"} loc("YOLOv9":0:0), %arg282: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2285_fork_clone1867"} loc("YOLOv9":0:0), %arg283: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2302"} loc("YOLOv9":0:0), %arg284: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2302_fork_clone1343"} loc("YOLOv9":0:0), %arg285: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2319"} loc("YOLOv9":0:0), %arg286: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2319_fork_clone1245"} loc("YOLOv9":0:0), %arg287: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2336"} loc("YOLOv9":0:0), %arg288: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2336_fork_clone790"} loc("YOLOv9":0:0), %arg289: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2352"} loc("YOLOv9":0:0), %arg290: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2352_fork_clone570"} loc("YOLOv9":0:0), %arg291: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2368"} loc("YOLOv9":0:0), %arg292: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2368_fork_clone1349"} loc("YOLOv9":0:0), %arg293: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2384"} loc("YOLOv9":0:0), %arg294: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2384_fork_clone1870"} loc("YOLOv9":0:0), %arg295: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2398"} loc("YOLOv9":0:0), %arg296: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2398_fork_clone1873"} loc("YOLOv9":0:0), %arg297: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2415"} loc("YOLOv9":0:0), %arg298: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2415_fork_clone1354"} loc("YOLOv9":0:0), %arg299: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2432"} loc("YOLOv9":0:0), %arg300: tensor<1x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2432_fork_clone1255"} loc("YOLOv9":0:0), %arg301: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2449"} loc("YOLOv9":0:0), %arg302: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2449_fork_clone797"} loc("YOLOv9":0:0), %arg303: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2465"} loc("YOLOv9":0:0), %arg304: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2465_fork_clone575"} loc("YOLOv9":0:0), %arg305: tensor<1x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2482"} loc("YOLOv9":0:0), %arg306: tensor<1x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2482_fork_clone409"} loc("YOLOv9":0:0), %arg307: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2498"} loc("YOLOv9":0:0), %arg308: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2498_fork_clone298"} loc("YOLOv9":0:0), %arg309: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2514"} loc("YOLOv9":0:0), %arg310: tensor<1x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2514_fork_clone162"} loc("YOLOv9":0:0), %arg311: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2534"} loc("YOLOv9":0:0), %arg312: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2534_fork_clone303"} loc("YOLOv9":0:0), %arg313: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2550"} loc("YOLOv9":0:0), %arg314: tensor<1x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_2550_fork_clone167"} loc("YOLOv9":0:0), %arg315: tensor<1x16x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_1_conv2d_2574"} loc("YOLOv9":0:0), %arg316: tensor<1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_1_divide_2581"} loc("YOLOv9":0:0), %arg317: tensor<1x8400xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_1_multiply_2584"} loc("YOLOv9":0:0), %arg318: tensor<64x3x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.0.conv.weight"} loc("YOLOv9":0:0), %arg319: tensor<128x64x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.1.conv.weight"} loc("YOLOv9":0:0), %arg320: tensor<128x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.cv1.conv.weight"} loc("YOLOv9":0:0), %arg321: tensor<32x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.cv2.0.cv1.conv.weight"} loc("YOLOv9":0:0), %arg322: tensor<32x32x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.cv2.0.m.0.cv1.conv1.conv.weight"} loc("YOLOv9":0:0), %arg323: tensor<32x32x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.cv2.0.m.0.cv1.conv2.conv.weight"} loc("YOLOv9":0:0), %arg324: tensor<32x32x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.cv2.0.m.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg325: tensor<32x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.cv2.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg326: tensor<64x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.cv2.0.cv3.conv.weight"} loc("YOLOv9":0:0), %arg327: tensor<64x64x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.cv2.1.conv.weight"} loc("YOLOv9":0:0), %arg328: tensor<32x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.cv3.0.cv1.conv.weight"} loc("YOLOv9":0:0), %arg329: tensor<32x32x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.cv3.0.m.0.cv1.conv1.conv.weight"} loc("YOLOv9":0:0), %arg330: tensor<32x32x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.cv3.0.m.0.cv1.conv2.conv.weight"} loc("YOLOv9":0:0), %arg331: tensor<32x32x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.cv3.0.m.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg332: tensor<32x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.cv3.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg333: tensor<64x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.cv3.0.cv3.conv.weight"} loc("YOLOv9":0:0), %arg334: tensor<64x64x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.cv3.1.conv.weight"} loc("YOLOv9":0:0), %arg335: tensor<256x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.cv4.conv.weight"} loc("YOLOv9":0:0), %arg336: tensor<128x128x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.3.cv1.conv.weight"} loc("YOLOv9":0:0), %arg337: tensor<128x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.3.cv2.conv.weight"} loc("YOLOv9":0:0), %arg338: tensor<256x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.cv1.conv.weight"} loc("YOLOv9":0:0), %arg339: tensor<64x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.cv2.0.cv1.conv.weight"} loc("YOLOv9":0:0), %arg340: tensor<64x64x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.cv2.0.m.0.cv1.conv1.conv.weight"} loc("YOLOv9":0:0), %arg341: tensor<64x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.cv2.0.m.0.cv1.conv2.conv.weight"} loc("YOLOv9":0:0), %arg342: tensor<64x64x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.cv2.0.m.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg343: tensor<64x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.cv2.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg344: tensor<128x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.cv2.0.cv3.conv.weight"} loc("YOLOv9":0:0), %arg345: tensor<128x128x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.cv2.1.conv.weight"} loc("YOLOv9":0:0), %arg346: tensor<64x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.cv3.0.cv1.conv.weight"} loc("YOLOv9":0:0), %arg347: tensor<64x64x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.cv3.0.m.0.cv1.conv1.conv.weight"} loc("YOLOv9":0:0), %arg348: tensor<64x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.cv3.0.m.0.cv1.conv2.conv.weight"} loc("YOLOv9":0:0), %arg349: tensor<64x64x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.cv3.0.m.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg350: tensor<64x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.cv3.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg351: tensor<128x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.cv3.0.cv3.conv.weight"} loc("YOLOv9":0:0), %arg352: tensor<128x128x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.cv3.1.conv.weight"} loc("YOLOv9":0:0), %arg353: tensor<512x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.cv4.conv.weight"} loc("YOLOv9":0:0), %arg354: tensor<256x256x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.5.cv1.conv.weight"} loc("YOLOv9":0:0), %arg355: tensor<256x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.5.cv2.conv.weight"} loc("YOLOv9":0:0), %arg356: tensor<512x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.cv1.conv.weight"} loc("YOLOv9":0:0), %arg357: tensor<128x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.cv2.0.cv1.conv.weight"} loc("YOLOv9":0:0), %arg358: tensor<128x128x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.cv2.0.m.0.cv1.conv1.conv.weight"} loc("YOLOv9":0:0), %arg359: tensor<128x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.cv2.0.m.0.cv1.conv2.conv.weight"} loc("YOLOv9":0:0), %arg360: tensor<128x128x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.cv2.0.m.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg361: tensor<128x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.cv2.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg362: tensor<256x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.cv2.0.cv3.conv.weight"} loc("YOLOv9":0:0), %arg363: tensor<256x256x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.cv2.1.conv.weight"} loc("YOLOv9":0:0), %arg364: tensor<128x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.cv3.0.cv1.conv.weight"} loc("YOLOv9":0:0), %arg365: tensor<128x128x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.cv3.0.m.0.cv1.conv1.conv.weight"} loc("YOLOv9":0:0), %arg366: tensor<128x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.cv3.0.m.0.cv1.conv2.conv.weight"} loc("YOLOv9":0:0), %arg367: tensor<128x128x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.cv3.0.m.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg368: tensor<128x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.cv3.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg369: tensor<256x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.cv3.0.cv3.conv.weight"} loc("YOLOv9":0:0), %arg370: tensor<256x256x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.cv3.1.conv.weight"} loc("YOLOv9":0:0), %arg371: tensor<512x1024x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.cv4.conv.weight"} loc("YOLOv9":0:0), %arg372: tensor<256x256x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.7.cv1.conv.weight"} loc("YOLOv9":0:0), %arg373: tensor<256x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.7.cv2.conv.weight"} loc("YOLOv9":0:0), %arg374: tensor<512x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.cv1.conv.weight"} loc("YOLOv9":0:0), %arg375: tensor<128x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.cv2.0.cv1.conv.weight"} loc("YOLOv9":0:0), %arg376: tensor<128x128x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.cv2.0.m.0.cv1.conv1.conv.weight"} loc("YOLOv9":0:0), %arg377: tensor<128x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.cv2.0.m.0.cv1.conv2.conv.weight"} loc("YOLOv9":0:0), %arg378: tensor<128x128x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.cv2.0.m.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg379: tensor<128x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.cv2.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg380: tensor<256x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.cv2.0.cv3.conv.weight"} loc("YOLOv9":0:0), %arg381: tensor<256x256x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.cv2.1.conv.weight"} loc("YOLOv9":0:0), %arg382: tensor<128x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.cv3.0.cv1.conv.weight"} loc("YOLOv9":0:0), %arg383: tensor<128x128x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.cv3.0.m.0.cv1.conv1.conv.weight"} loc("YOLOv9":0:0), %arg384: tensor<128x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.cv3.0.m.0.cv1.conv2.conv.weight"} loc("YOLOv9":0:0), %arg385: tensor<128x128x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.cv3.0.m.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg386: tensor<128x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.cv3.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg387: tensor<256x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.cv3.0.cv3.conv.weight"} loc("YOLOv9":0:0), %arg388: tensor<256x256x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.cv3.1.conv.weight"} loc("YOLOv9":0:0), %arg389: tensor<512x1024x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.cv4.conv.weight"} loc("YOLOv9":0:0), %arg390: tensor<256x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.9.cv1.conv.weight"} loc("YOLOv9":0:0), %arg391: tensor<512x1024x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.9.cv5.conv.weight"} loc("YOLOv9":0:0), %arg392: tensor<512x1024x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.12.cv1.conv.weight"} loc("YOLOv9":0:0), %arg393: tensor<128x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.12.cv2.0.cv1.conv.weight"} loc("YOLOv9":0:0), %arg394: tensor<128x128x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.12.cv2.0.m.0.cv1.conv1.conv.weight"} loc("YOLOv9":0:0), %arg395: tensor<128x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.12.cv2.0.m.0.cv1.conv2.conv.weight"} loc("YOLOv9":0:0), %arg396: tensor<128x128x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.12.cv2.0.m.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg397: tensor<128x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.12.cv2.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg398: tensor<256x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.12.cv2.0.cv3.conv.weight"} loc("YOLOv9":0:0), %arg399: tensor<256x256x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.12.cv2.1.conv.weight"} loc("YOLOv9":0:0), %arg400: tensor<128x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.12.cv3.0.cv1.conv.weight"} loc("YOLOv9":0:0), %arg401: tensor<128x128x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.12.cv3.0.m.0.cv1.conv1.conv.weight"} loc("YOLOv9":0:0), %arg402: tensor<128x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.12.cv3.0.m.0.cv1.conv2.conv.weight"} loc("YOLOv9":0:0), %arg403: tensor<128x128x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.12.cv3.0.m.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg404: tensor<128x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.12.cv3.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg405: tensor<256x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.12.cv3.0.cv3.conv.weight"} loc("YOLOv9":0:0), %arg406: tensor<256x256x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.12.cv3.1.conv.weight"} loc("YOLOv9":0:0), %arg407: tensor<512x1024x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.12.cv4.conv.weight"} loc("YOLOv9":0:0), %arg408: tensor<256x1024x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.15.cv1.conv.weight"} loc("YOLOv9":0:0), %arg409: tensor<64x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.15.cv2.0.cv1.conv.weight"} loc("YOLOv9":0:0), %arg410: tensor<64x64x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.15.cv2.0.m.0.cv1.conv1.conv.weight"} loc("YOLOv9":0:0), %arg411: tensor<64x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.15.cv2.0.m.0.cv1.conv2.conv.weight"} loc("YOLOv9":0:0), %arg412: tensor<64x64x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.15.cv2.0.m.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg413: tensor<64x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.15.cv2.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg414: tensor<128x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.15.cv2.0.cv3.conv.weight"} loc("YOLOv9":0:0), %arg415: tensor<128x128x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.15.cv2.1.conv.weight"} loc("YOLOv9":0:0), %arg416: tensor<64x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.15.cv3.0.cv1.conv.weight"} loc("YOLOv9":0:0), %arg417: tensor<64x64x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.15.cv3.0.m.0.cv1.conv1.conv.weight"} loc("YOLOv9":0:0), %arg418: tensor<64x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.15.cv3.0.m.0.cv1.conv2.conv.weight"} loc("YOLOv9":0:0), %arg419: tensor<64x64x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.15.cv3.0.m.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg420: tensor<64x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.15.cv3.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg421: tensor<128x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.15.cv3.0.cv3.conv.weight"} loc("YOLOv9":0:0), %arg422: tensor<128x128x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.15.cv3.1.conv.weight"} loc("YOLOv9":0:0), %arg423: tensor<256x512x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.15.cv4.conv.weight"} loc("YOLOv9":0:0), %arg424: tensor<64x256x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv2.0.0.conv.weight"} loc("YOLOv9":0:0), %arg425: tensor<64x64x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv2.0.1.conv.weight"} loc("YOLOv9":0:0), %arg426: tensor<64x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv2.0.2.weight"} loc("YOLOv9":0:0), %arg427: tensor<1x1x1x64xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv2.0.2.bias"} loc("YOLOv9":0:0), %arg428: tensor<256x256x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv3.0.0.conv.weight"} loc("YOLOv9":0:0), %arg429: tensor<256x256x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv3.0.1.conv.weight"} loc("YOLOv9":0:0), %arg430: tensor<80x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv3.0.2.weight"} loc("YOLOv9":0:0), %arg431: tensor<1x1x1x80xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv3.0.2.bias"} loc("YOLOv9":0:0), %arg432: tensor<128x128x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.16.cv1.conv.weight"} loc("YOLOv9":0:0), %arg433: tensor<128x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.16.cv2.conv.weight"} loc("YOLOv9":0:0), %arg434: tensor<512x768x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.18.cv1.conv.weight"} loc("YOLOv9":0:0), %arg435: tensor<128x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.18.cv2.0.cv1.conv.weight"} loc("YOLOv9":0:0), %arg436: tensor<128x128x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.18.cv2.0.m.0.cv1.conv1.conv.weight"} loc("YOLOv9":0:0), %arg437: tensor<128x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.18.cv2.0.m.0.cv1.conv2.conv.weight"} loc("YOLOv9":0:0), %arg438: tensor<128x128x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.18.cv2.0.m.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg439: tensor<128x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.18.cv2.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg440: tensor<256x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.18.cv2.0.cv3.conv.weight"} loc("YOLOv9":0:0), %arg441: tensor<256x256x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.18.cv2.1.conv.weight"} loc("YOLOv9":0:0), %arg442: tensor<128x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.18.cv3.0.cv1.conv.weight"} loc("YOLOv9":0:0), %arg443: tensor<128x128x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.18.cv3.0.m.0.cv1.conv1.conv.weight"} loc("YOLOv9":0:0), %arg444: tensor<128x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.18.cv3.0.m.0.cv1.conv2.conv.weight"} loc("YOLOv9":0:0), %arg445: tensor<128x128x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.18.cv3.0.m.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg446: tensor<128x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.18.cv3.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg447: tensor<256x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.18.cv3.0.cv3.conv.weight"} loc("YOLOv9":0:0), %arg448: tensor<256x256x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.18.cv3.1.conv.weight"} loc("YOLOv9":0:0), %arg449: tensor<512x1024x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.18.cv4.conv.weight"} loc("YOLOv9":0:0), %arg450: tensor<64x512x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv2.1.0.conv.weight"} loc("YOLOv9":0:0), %arg451: tensor<64x64x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv2.1.1.conv.weight"} loc("YOLOv9":0:0), %arg452: tensor<64x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv2.1.2.weight"} loc("YOLOv9":0:0), %arg453: tensor<1x1x1x64xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv2.1.2.bias"} loc("YOLOv9":0:0), %arg454: tensor<256x512x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv3.1.0.conv.weight"} loc("YOLOv9":0:0), %arg455: tensor<256x256x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv3.1.1.conv.weight"} loc("YOLOv9":0:0), %arg456: tensor<80x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv3.1.2.weight"} loc("YOLOv9":0:0), %arg457: tensor<1x1x1x80xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv3.1.2.bias"} loc("YOLOv9":0:0), %arg458: tensor<256x256x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.19.cv1.conv.weight"} loc("YOLOv9":0:0), %arg459: tensor<256x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.19.cv2.conv.weight"} loc("YOLOv9":0:0), %arg460: tensor<512x1024x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.21.cv1.conv.weight"} loc("YOLOv9":0:0), %arg461: tensor<128x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.21.cv2.0.cv1.conv.weight"} loc("YOLOv9":0:0), %arg462: tensor<128x128x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.21.cv2.0.m.0.cv1.conv1.conv.weight"} loc("YOLOv9":0:0), %arg463: tensor<128x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.21.cv2.0.m.0.cv1.conv2.conv.weight"} loc("YOLOv9":0:0), %arg464: tensor<128x128x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.21.cv2.0.m.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg465: tensor<128x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.21.cv2.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg466: tensor<256x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.21.cv2.0.cv3.conv.weight"} loc("YOLOv9":0:0), %arg467: tensor<256x256x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.21.cv2.1.conv.weight"} loc("YOLOv9":0:0), %arg468: tensor<128x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.21.cv3.0.cv1.conv.weight"} loc("YOLOv9":0:0), %arg469: tensor<128x128x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.21.cv3.0.m.0.cv1.conv1.conv.weight"} loc("YOLOv9":0:0), %arg470: tensor<128x128x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.21.cv3.0.m.0.cv1.conv2.conv.weight"} loc("YOLOv9":0:0), %arg471: tensor<128x128x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.21.cv3.0.m.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg472: tensor<128x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.21.cv3.0.cv2.conv.weight"} loc("YOLOv9":0:0), %arg473: tensor<256x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.21.cv3.0.cv3.conv.weight"} loc("YOLOv9":0:0), %arg474: tensor<256x256x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.21.cv3.1.conv.weight"} loc("YOLOv9":0:0), %arg475: tensor<512x1024x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.21.cv4.conv.weight"} loc("YOLOv9":0:0), %arg476: tensor<64x512x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv2.2.0.conv.weight"} loc("YOLOv9":0:0), %arg477: tensor<64x64x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv2.2.1.conv.weight"} loc("YOLOv9":0:0), %arg478: tensor<64x64x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv2.2.2.weight"} loc("YOLOv9":0:0), %arg479: tensor<1x1x1x64xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv2.2.2.bias"} loc("YOLOv9":0:0), %arg480: tensor<256x512x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv3.2.0.conv.weight"} loc("YOLOv9":0:0), %arg481: tensor<256x256x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv3.2.1.conv.weight"} loc("YOLOv9":0:0), %arg482: tensor<80x256x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv3.2.2.weight"} loc("YOLOv9":0:0), %arg483: tensor<1x1x1x80xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv3.2.2.bias"} loc("YOLOv9":0:0)) -> (tensor<1x84x8400xbf16> {ttir.name = "YOLOv9.output_concatenate_2587"}, tensor<1x144x80x80xbf16> {ttir.name = "YOLOv9.output_concatenate_1821"}, tensor<1x144x40x40xbf16> {ttir.name = "YOLOv9.output_concatenate_2194"}, tensor<1x144x20x20xbf16> {ttir.name = "YOLOv9.output_concatenate_2567"}) {
    %0 = ttir.empty() : tensor<1x640x3x640xbf16> loc(#loc518)
    %1 = "ttir.transpose"(%arg0, %0) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x3x640x640xbf16>, tensor<1x640x3x640xbf16>) -> tensor<1x640x3x640xbf16> loc(#loc518)
    %2 = ttir.empty() : tensor<1x640x640x3xbf16> loc(#loc519)
    %3 = "ttir.transpose"(%1, %2) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x640x3x640xbf16>, tensor<1x640x640x3xbf16>) -> tensor<1x640x640x3xbf16> loc(#loc519)
    %4 = ttir.empty() : tensor<1x320x320x64xbf16> loc(#loc520)
    %5 = "ttir.conv2d"(%3, %arg318, %4) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 2, 2>}> {channel_last = 1 : si32} : (tensor<1x640x640x3xbf16>, tensor<64x3x3x3xbf16>, tensor<1x320x320x64xbf16>) -> tensor<1x320x320x64xbf16> loc(#loc520)
    %6 = ttir.empty() : tensor<1x320x64x320xbf16> loc(#loc521)
    %7 = "ttir.transpose"(%5, %6) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x320x320x64xbf16>, tensor<1x320x64x320xbf16>) -> tensor<1x320x64x320xbf16> loc(#loc521)
    %8 = ttir.empty() : tensor<1x64x320x320xbf16> loc(#loc522)
    %9 = "ttir.transpose"(%7, %8) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x64x320xbf16>, tensor<1x64x320x320xbf16>) -> tensor<1x64x320x320xbf16> loc(#loc522)
    %10 = ttir.empty() : tensor<1x64x320x320xbf16> loc(#loc2)
    %11 = "ttir.multiply"(%9, %arg2, %10) : (tensor<1x64x320x320xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x320x320xbf16>) -> tensor<1x64x320x320xbf16> loc(#loc2)
    %12 = ttir.empty() : tensor<1x64x320x320xbf16> loc(#loc3)
    %13 = "ttir.add"(%11, %arg3, %12) : (tensor<1x64x320x320xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x320x320xbf16>) -> tensor<1x64x320x320xbf16> loc(#loc3)
    %14 = ttir.empty() : tensor<1x64x320x320xbf16> loc(#loc523)
    %15 = "ttir.sigmoid"(%13, %14) : (tensor<1x64x320x320xbf16>, tensor<1x64x320x320xbf16>) -> tensor<1x64x320x320xbf16> loc(#loc523)
    %16 = ttir.empty() : tensor<1x64x320x320xbf16> loc(#loc524)
    %17 = "ttir.multiply"(%13, %15, %16) : (tensor<1x64x320x320xbf16>, tensor<1x64x320x320xbf16>, tensor<1x64x320x320xbf16>) -> tensor<1x64x320x320xbf16> loc(#loc524)
    %18 = ttir.empty() : tensor<1x320x64x320xbf16> loc(#loc525)
    %19 = "ttir.transpose"(%17, %18) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x64x320x320xbf16>, tensor<1x320x64x320xbf16>) -> tensor<1x320x64x320xbf16> loc(#loc525)
    %20 = ttir.empty() : tensor<1x320x320x64xbf16> loc(#loc526)
    %21 = "ttir.transpose"(%19, %20) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x320x64x320xbf16>, tensor<1x320x320x64xbf16>) -> tensor<1x320x320x64xbf16> loc(#loc526)
    %22 = ttir.empty() : tensor<1x160x160x128xbf16> loc(#loc527)
    %23 = "ttir.conv2d"(%21, %arg319, %22) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 2, 2>}> {channel_last = 1 : si32} : (tensor<1x320x320x64xbf16>, tensor<128x64x3x3xbf16>, tensor<1x160x160x128xbf16>) -> tensor<1x160x160x128xbf16> loc(#loc527)
    %24 = ttir.empty() : tensor<1x160x128x160xbf16> loc(#loc528)
    %25 = "ttir.transpose"(%23, %24) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x128xbf16>, tensor<1x160x128x160xbf16>) -> tensor<1x160x128x160xbf16> loc(#loc528)
    %26 = ttir.empty() : tensor<1x128x160x160xbf16> loc(#loc529)
    %27 = "ttir.transpose"(%25, %26) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x128x160xbf16>, tensor<1x128x160x160xbf16>) -> tensor<1x128x160x160xbf16> loc(#loc529)
    %28 = ttir.empty() : tensor<1x128x160x160xbf16> loc(#loc4)
    %29 = "ttir.multiply"(%27, %arg4, %28) : (tensor<1x128x160x160xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x160x160xbf16>) -> tensor<1x128x160x160xbf16> loc(#loc4)
    %30 = ttir.empty() : tensor<1x128x160x160xbf16> loc(#loc5)
    %31 = "ttir.add"(%29, %arg5, %30) : (tensor<1x128x160x160xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x160x160xbf16>) -> tensor<1x128x160x160xbf16> loc(#loc5)
    %32 = ttir.empty() : tensor<1x128x160x160xbf16> loc(#loc338)
    %33 = "ttir.sigmoid"(%31, %32) : (tensor<1x128x160x160xbf16>, tensor<1x128x160x160xbf16>) -> tensor<1x128x160x160xbf16> loc(#loc338)
    %34 = ttir.empty() : tensor<1x128x160x160xbf16> loc(#loc339)
    %35 = "ttir.multiply"(%31, %33, %34) : (tensor<1x128x160x160xbf16>, tensor<1x128x160x160xbf16>, tensor<1x128x160x160xbf16>) -> tensor<1x128x160x160xbf16> loc(#loc339)
    %36 = ttir.empty() : tensor<1x160x128x160xbf16> loc(#loc684)
    %37 = "ttir.transpose"(%35, %36) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x160x160xbf16>, tensor<1x160x128x160xbf16>) -> tensor<1x160x128x160xbf16> loc(#loc684)
    %38 = ttir.empty() : tensor<1x160x160x128xbf16> loc(#loc685)
    %39 = "ttir.transpose"(%37, %38) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x128x160xbf16>, tensor<1x160x160x128xbf16>) -> tensor<1x160x160x128xbf16> loc(#loc685)
    %40 = ttir.empty() : tensor<1x160x160x128xbf16> loc(#loc686)
    %41 = "ttir.conv2d"(%39, %arg320, %40) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x128xbf16>, tensor<128x128x1x1xbf16>, tensor<1x160x160x128xbf16>) -> tensor<1x160x160x128xbf16> loc(#loc686)
    %42 = ttir.empty() : tensor<1x160x128x160xbf16> loc(#loc687)
    %43 = "ttir.transpose"(%41, %42) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x128xbf16>, tensor<1x160x128x160xbf16>) -> tensor<1x160x128x160xbf16> loc(#loc687)
    %44 = ttir.empty() : tensor<1x128x160x160xbf16> loc(#loc688)
    %45 = "ttir.transpose"(%43, %44) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x128x160xbf16>, tensor<1x128x160x160xbf16>) -> tensor<1x128x160x160xbf16> loc(#loc688)
    %46 = ttir.empty() : tensor<1x128x160x160xbf16> loc(#loc6)
    %47 = "ttir.multiply"(%45, %arg6, %46) : (tensor<1x128x160x160xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x160x160xbf16>) -> tensor<1x128x160x160xbf16> loc(#loc6)
    %48 = ttir.empty() : tensor<1x128x160x160xbf16> loc(#loc7)
    %49 = "ttir.add"(%47, %arg7, %48) : (tensor<1x128x160x160xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x160x160xbf16>) -> tensor<1x128x160x160xbf16> loc(#loc7)
    %50 = ttir.empty() : tensor<1x128x160x160xbf16> loc(#loc531)
    %51 = "ttir.sigmoid"(%49, %50) : (tensor<1x128x160x160xbf16>, tensor<1x128x160x160xbf16>) -> tensor<1x128x160x160xbf16> loc(#loc531)
    %52 = ttir.empty() : tensor<1x128x160x160xbf16> loc(#loc532)
    %53 = "ttir.multiply"(%49, %51, %52) : (tensor<1x128x160x160xbf16>, tensor<1x128x160x160xbf16>, tensor<1x128x160x160xbf16>) -> tensor<1x128x160x160xbf16> loc(#loc532)
    %54 = ttir.empty() : tensor<1x64x160x160xbf16> loc(#loc341)
    %55 = "ttir.index"(%53, %54) <{begin = 0 : i32, dim = 1 : i32, end = 64 : i32, step = 1 : i32}> : (tensor<1x128x160x160xbf16>, tensor<1x64x160x160xbf16>) -> tensor<1x64x160x160xbf16> loc(#loc341)
    %56 = ttir.empty() : tensor<1x64x160x160xbf16> loc(#loc342)
    %57 = "ttir.index"(%53, %56) <{begin = 64 : i32, dim = 1 : i32, end = 128 : i32, step = 1 : i32}> : (tensor<1x128x160x160xbf16>, tensor<1x64x160x160xbf16>) -> tensor<1x64x160x160xbf16> loc(#loc342)
    %58 = ttir.empty() : tensor<1x160x64x160xbf16> loc(#loc1323)
    %59 = "ttir.transpose"(%57, %58) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x64x160x160xbf16>, tensor<1x160x64x160xbf16>) -> tensor<1x160x64x160xbf16> loc(#loc1323)
    %60 = ttir.empty() : tensor<1x160x160x64xbf16> loc(#loc1324)
    %61 = "ttir.transpose"(%59, %60) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x64x160xbf16>, tensor<1x160x160x64xbf16>) -> tensor<1x160x160x64xbf16> loc(#loc1324)
    %62 = ttir.empty() : tensor<1x160x160x32xbf16> loc(#loc1325)
    %63 = "ttir.conv2d"(%61, %arg321, %62) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x64xbf16>, tensor<32x64x1x1xbf16>, tensor<1x160x160x32xbf16>) -> tensor<1x160x160x32xbf16> loc(#loc1325)
    %64 = ttir.empty() : tensor<1x160x32x160xbf16> loc(#loc1326)
    %65 = "ttir.transpose"(%63, %64) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x32xbf16>, tensor<1x160x32x160xbf16>) -> tensor<1x160x32x160xbf16> loc(#loc1326)
    %66 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1327)
    %67 = "ttir.transpose"(%65, %66) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x32x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1327)
    %68 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc8)
    %69 = "ttir.multiply"(%67, %arg8, %68) : (tensor<1x32x160x160xbf16>, tensor<1x32x1x1xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc8)
    %70 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc9)
    %71 = "ttir.add"(%69, %arg9, %70) : (tensor<1x32x160x160xbf16>, tensor<1x32x1x1xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc9)
    %72 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1024)
    %73 = "ttir.sigmoid"(%71, %72) : (tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1024)
    %74 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1025)
    %75 = "ttir.multiply"(%71, %73, %74) : (tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1025)
    %76 = ttir.empty() : tensor<1x160x32x160xbf16> loc(#loc1852)
    %77 = "ttir.transpose"(%75, %76) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x32x160x160xbf16>, tensor<1x160x32x160xbf16>) -> tensor<1x160x32x160xbf16> loc(#loc1852)
    %78 = ttir.empty() : tensor<1x160x160x32xbf16> loc(#loc1853)
    %79 = "ttir.transpose"(%77, %78) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x32x160xbf16>, tensor<1x160x160x32xbf16>) -> tensor<1x160x160x32xbf16> loc(#loc1853)
    %80 = ttir.empty() : tensor<1x160x160x32xbf16> loc(#loc1854)
    %81 = "ttir.conv2d"(%79, %arg322, %80) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x32xbf16>, tensor<32x32x3x3xbf16>, tensor<1x160x160x32xbf16>) -> tensor<1x160x160x32xbf16> loc(#loc1854)
    %82 = ttir.empty() : tensor<1x160x32x160xbf16> loc(#loc1855)
    %83 = "ttir.transpose"(%81, %82) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x32xbf16>, tensor<1x160x32x160xbf16>) -> tensor<1x160x32x160xbf16> loc(#loc1855)
    %84 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1856)
    %85 = "ttir.transpose"(%83, %84) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x32x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1856)
    %86 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc10)
    %87 = "ttir.multiply"(%85, %arg10, %86) : (tensor<1x32x160x160xbf16>, tensor<1x32x1x1xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc10)
    %88 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc11)
    %89 = "ttir.add"(%87, %arg11, %88) : (tensor<1x32x160x160xbf16>, tensor<1x32x1x1xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc11)
    %90 = ttir.empty() : tensor<1x160x32x160xbf16> loc(#loc1857)
    %91 = "ttir.transpose"(%75, %90) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x32x160x160xbf16>, tensor<1x160x32x160xbf16>) -> tensor<1x160x32x160xbf16> loc(#loc1857)
    %92 = ttir.empty() : tensor<1x160x160x32xbf16> loc(#loc1858)
    %93 = "ttir.transpose"(%91, %92) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x32x160xbf16>, tensor<1x160x160x32xbf16>) -> tensor<1x160x160x32xbf16> loc(#loc1858)
    %94 = ttir.empty() : tensor<1x160x160x32xbf16> loc(#loc1859)
    %95 = "ttir.conv2d"(%93, %arg323, %94) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x32xbf16>, tensor<32x32x1x1xbf16>, tensor<1x160x160x32xbf16>) -> tensor<1x160x160x32xbf16> loc(#loc1859)
    %96 = ttir.empty() : tensor<1x160x32x160xbf16> loc(#loc1860)
    %97 = "ttir.transpose"(%95, %96) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x32xbf16>, tensor<1x160x32x160xbf16>) -> tensor<1x160x32x160xbf16> loc(#loc1860)
    %98 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1861)
    %99 = "ttir.transpose"(%97, %98) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x32x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1861)
    %100 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc12)
    %101 = "ttir.multiply"(%99, %arg12, %100) : (tensor<1x32x160x160xbf16>, tensor<1x32x1x1xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc12)
    %102 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc13)
    %103 = "ttir.add"(%101, %arg13, %102) : (tensor<1x32x160x160xbf16>, tensor<1x32x1x1xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc13)
    %104 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1613)
    %105 = "ttir.add"(%89, %103, %104) : (tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1613)
    %106 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1740)
    %107 = "ttir.sigmoid"(%105, %106) : (tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1740)
    %108 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1741)
    %109 = "ttir.multiply"(%105, %107, %108) : (tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1741)
    %110 = ttir.empty() : tensor<1x160x32x160xbf16> loc(#loc1742)
    %111 = "ttir.transpose"(%109, %110) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x32x160x160xbf16>, tensor<1x160x32x160xbf16>) -> tensor<1x160x32x160xbf16> loc(#loc1742)
    %112 = ttir.empty() : tensor<1x160x160x32xbf16> loc(#loc1743)
    %113 = "ttir.transpose"(%111, %112) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x32x160xbf16>, tensor<1x160x160x32xbf16>) -> tensor<1x160x160x32xbf16> loc(#loc1743)
    %114 = ttir.empty() : tensor<1x160x160x32xbf16> loc(#loc1744)
    %115 = "ttir.conv2d"(%113, %arg324, %114) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x32xbf16>, tensor<32x32x3x3xbf16>, tensor<1x160x160x32xbf16>) -> tensor<1x160x160x32xbf16> loc(#loc1744)
    %116 = ttir.empty() : tensor<1x160x32x160xbf16> loc(#loc1745)
    %117 = "ttir.transpose"(%115, %116) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x32xbf16>, tensor<1x160x32x160xbf16>) -> tensor<1x160x32x160xbf16> loc(#loc1745)
    %118 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1746)
    %119 = "ttir.transpose"(%117, %118) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x32x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1746)
    %120 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc14)
    %121 = "ttir.multiply"(%119, %arg14, %120) : (tensor<1x32x160x160xbf16>, tensor<1x32x1x1xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc14)
    %122 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc15)
    %123 = "ttir.add"(%121, %arg15, %122) : (tensor<1x32x160x160xbf16>, tensor<1x32x1x1xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc15)
    %124 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1616)
    %125 = "ttir.sigmoid"(%123, %124) : (tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1616)
    %126 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1617)
    %127 = "ttir.multiply"(%123, %125, %126) : (tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1617)
    %128 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1330)
    %129 = "ttir.add"(%75, %127, %128) : (tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1330)
    %130 = ttir.empty() : tensor<1x160x64x160xbf16> loc(#loc1331)
    %131 = "ttir.transpose"(%57, %130) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x64x160x160xbf16>, tensor<1x160x64x160xbf16>) -> tensor<1x160x64x160xbf16> loc(#loc1331)
    %132 = ttir.empty() : tensor<1x160x160x64xbf16> loc(#loc1332)
    %133 = "ttir.transpose"(%131, %132) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x64x160xbf16>, tensor<1x160x160x64xbf16>) -> tensor<1x160x160x64xbf16> loc(#loc1332)
    %134 = ttir.empty() : tensor<1x160x160x32xbf16> loc(#loc1333)
    %135 = "ttir.conv2d"(%133, %arg325, %134) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x64xbf16>, tensor<32x64x1x1xbf16>, tensor<1x160x160x32xbf16>) -> tensor<1x160x160x32xbf16> loc(#loc1333)
    %136 = ttir.empty() : tensor<1x160x32x160xbf16> loc(#loc1334)
    %137 = "ttir.transpose"(%135, %136) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x32xbf16>, tensor<1x160x32x160xbf16>) -> tensor<1x160x32x160xbf16> loc(#loc1334)
    %138 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1335)
    %139 = "ttir.transpose"(%137, %138) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x32x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1335)
    %140 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc16)
    %141 = "ttir.multiply"(%139, %arg16, %140) : (tensor<1x32x160x160xbf16>, tensor<1x32x1x1xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc16)
    %142 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc17)
    %143 = "ttir.add"(%141, %arg17, %142) : (tensor<1x32x160x160xbf16>, tensor<1x32x1x1xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc17)
    %144 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1028)
    %145 = "ttir.sigmoid"(%143, %144) : (tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1028)
    %146 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1029)
    %147 = "ttir.multiply"(%143, %145, %146) : (tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1029)
    %148 = ttir.empty() : tensor<1x64x160x160xbf16> loc(#loc692)
    %149 = "ttir.concat"(%129, %147, %148) <{dim = -3 : si32}> : (tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>, tensor<1x64x160x160xbf16>) -> tensor<1x64x160x160xbf16> loc(#loc692)
    %150 = ttir.empty() : tensor<1x160x64x160xbf16> loc(#loc1336)
    %151 = "ttir.transpose"(%149, %150) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x64x160x160xbf16>, tensor<1x160x64x160xbf16>) -> tensor<1x160x64x160xbf16> loc(#loc1336)
    %152 = ttir.empty() : tensor<1x160x160x64xbf16> loc(#loc1337)
    %153 = "ttir.transpose"(%151, %152) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x64x160xbf16>, tensor<1x160x160x64xbf16>) -> tensor<1x160x160x64xbf16> loc(#loc1337)
    %154 = ttir.empty() : tensor<1x160x160x64xbf16> loc(#loc1338)
    %155 = "ttir.conv2d"(%153, %arg326, %154) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x64xbf16>, tensor<64x64x1x1xbf16>, tensor<1x160x160x64xbf16>) -> tensor<1x160x160x64xbf16> loc(#loc1338)
    %156 = ttir.empty() : tensor<1x160x64x160xbf16> loc(#loc1339)
    %157 = "ttir.transpose"(%155, %156) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x64xbf16>, tensor<1x160x64x160xbf16>) -> tensor<1x160x64x160xbf16> loc(#loc1339)
    %158 = ttir.empty() : tensor<1x64x160x160xbf16> loc(#loc1340)
    %159 = "ttir.transpose"(%157, %158) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x64x160xbf16>, tensor<1x64x160x160xbf16>) -> tensor<1x64x160x160xbf16> loc(#loc1340)
    %160 = ttir.empty() : tensor<1x64x160x160xbf16> loc(#loc18)
    %161 = "ttir.multiply"(%159, %arg18, %160) : (tensor<1x64x160x160xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x160x160xbf16>) -> tensor<1x64x160x160xbf16> loc(#loc18)
    %162 = ttir.empty() : tensor<1x64x160x160xbf16> loc(#loc19)
    %163 = "ttir.add"(%161, %arg19, %162) : (tensor<1x64x160x160xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x160x160xbf16>) -> tensor<1x64x160x160xbf16> loc(#loc19)
    %164 = ttir.empty() : tensor<1x64x160x160xbf16> loc(#loc1031)
    %165 = "ttir.sigmoid"(%163, %164) : (tensor<1x64x160x160xbf16>, tensor<1x64x160x160xbf16>) -> tensor<1x64x160x160xbf16> loc(#loc1031)
    %166 = ttir.empty() : tensor<1x64x160x160xbf16> loc(#loc1032)
    %167 = "ttir.multiply"(%163, %165, %166) : (tensor<1x64x160x160xbf16>, tensor<1x64x160x160xbf16>, tensor<1x64x160x160xbf16>) -> tensor<1x64x160x160xbf16> loc(#loc1032)
    %168 = ttir.empty() : tensor<1x160x64x160xbf16> loc(#loc1033)
    %169 = "ttir.transpose"(%167, %168) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x64x160x160xbf16>, tensor<1x160x64x160xbf16>) -> tensor<1x160x64x160xbf16> loc(#loc1033)
    %170 = ttir.empty() : tensor<1x160x160x64xbf16> loc(#loc1034)
    %171 = "ttir.transpose"(%169, %170) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x64x160xbf16>, tensor<1x160x160x64xbf16>) -> tensor<1x160x160x64xbf16> loc(#loc1034)
    %172 = ttir.empty() : tensor<1x160x160x64xbf16> loc(#loc1035)
    %173 = "ttir.conv2d"(%171, %arg327, %172) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x64xbf16>, tensor<64x64x3x3xbf16>, tensor<1x160x160x64xbf16>) -> tensor<1x160x160x64xbf16> loc(#loc1035)
    %174 = ttir.empty() : tensor<1x160x64x160xbf16> loc(#loc1036)
    %175 = "ttir.transpose"(%173, %174) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x64xbf16>, tensor<1x160x64x160xbf16>) -> tensor<1x160x64x160xbf16> loc(#loc1036)
    %176 = ttir.empty() : tensor<1x64x160x160xbf16> loc(#loc1037)
    %177 = "ttir.transpose"(%175, %176) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x64x160xbf16>, tensor<1x64x160x160xbf16>) -> tensor<1x64x160x160xbf16> loc(#loc1037)
    %178 = ttir.empty() : tensor<1x64x160x160xbf16> loc(#loc20)
    %179 = "ttir.multiply"(%177, %arg20, %178) : (tensor<1x64x160x160xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x160x160xbf16>) -> tensor<1x64x160x160xbf16> loc(#loc20)
    %180 = ttir.empty() : tensor<1x64x160x160xbf16> loc(#loc21)
    %181 = "ttir.add"(%179, %arg21, %180) : (tensor<1x64x160x160xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x160x160xbf16>) -> tensor<1x64x160x160xbf16> loc(#loc21)
    %182 = ttir.empty() : tensor<1x64x160x160xbf16> loc(#loc695)
    %183 = "ttir.sigmoid"(%181, %182) : (tensor<1x64x160x160xbf16>, tensor<1x64x160x160xbf16>) -> tensor<1x64x160x160xbf16> loc(#loc695)
    %184 = ttir.empty() : tensor<1x64x160x160xbf16> loc(#loc696)
    %185 = "ttir.multiply"(%181, %183, %184) : (tensor<1x64x160x160xbf16>, tensor<1x64x160x160xbf16>, tensor<1x64x160x160xbf16>) -> tensor<1x64x160x160xbf16> loc(#loc696)
    %186 = ttir.empty() : tensor<1x160x64x160xbf16> loc(#loc1341)
    %187 = "ttir.transpose"(%185, %186) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x64x160x160xbf16>, tensor<1x160x64x160xbf16>) -> tensor<1x160x64x160xbf16> loc(#loc1341)
    %188 = ttir.empty() : tensor<1x160x160x64xbf16> loc(#loc1342)
    %189 = "ttir.transpose"(%187, %188) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x64x160xbf16>, tensor<1x160x160x64xbf16>) -> tensor<1x160x160x64xbf16> loc(#loc1342)
    %190 = ttir.empty() : tensor<1x160x160x32xbf16> loc(#loc1343)
    %191 = "ttir.conv2d"(%189, %arg328, %190) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x64xbf16>, tensor<32x64x1x1xbf16>, tensor<1x160x160x32xbf16>) -> tensor<1x160x160x32xbf16> loc(#loc1343)
    %192 = ttir.empty() : tensor<1x160x32x160xbf16> loc(#loc1344)
    %193 = "ttir.transpose"(%191, %192) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x32xbf16>, tensor<1x160x32x160xbf16>) -> tensor<1x160x32x160xbf16> loc(#loc1344)
    %194 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1345)
    %195 = "ttir.transpose"(%193, %194) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x32x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1345)
    %196 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc22)
    %197 = "ttir.multiply"(%195, %arg22, %196) : (tensor<1x32x160x160xbf16>, tensor<1x32x1x1xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc22)
    %198 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc23)
    %199 = "ttir.add"(%197, %arg23, %198) : (tensor<1x32x160x160xbf16>, tensor<1x32x1x1xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc23)
    %200 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1039)
    %201 = "ttir.sigmoid"(%199, %200) : (tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1039)
    %202 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1040)
    %203 = "ttir.multiply"(%199, %201, %202) : (tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1040)
    %204 = ttir.empty() : tensor<1x160x32x160xbf16> loc(#loc1862)
    %205 = "ttir.transpose"(%203, %204) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x32x160x160xbf16>, tensor<1x160x32x160xbf16>) -> tensor<1x160x32x160xbf16> loc(#loc1862)
    %206 = ttir.empty() : tensor<1x160x160x32xbf16> loc(#loc1863)
    %207 = "ttir.transpose"(%205, %206) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x32x160xbf16>, tensor<1x160x160x32xbf16>) -> tensor<1x160x160x32xbf16> loc(#loc1863)
    %208 = ttir.empty() : tensor<1x160x160x32xbf16> loc(#loc1864)
    %209 = "ttir.conv2d"(%207, %arg329, %208) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x32xbf16>, tensor<32x32x3x3xbf16>, tensor<1x160x160x32xbf16>) -> tensor<1x160x160x32xbf16> loc(#loc1864)
    %210 = ttir.empty() : tensor<1x160x32x160xbf16> loc(#loc1865)
    %211 = "ttir.transpose"(%209, %210) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x32xbf16>, tensor<1x160x32x160xbf16>) -> tensor<1x160x32x160xbf16> loc(#loc1865)
    %212 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1866)
    %213 = "ttir.transpose"(%211, %212) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x32x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1866)
    %214 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc24)
    %215 = "ttir.multiply"(%213, %arg24, %214) : (tensor<1x32x160x160xbf16>, tensor<1x32x1x1xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc24)
    %216 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc25)
    %217 = "ttir.add"(%215, %arg25, %216) : (tensor<1x32x160x160xbf16>, tensor<1x32x1x1xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc25)
    %218 = ttir.empty() : tensor<1x160x32x160xbf16> loc(#loc1867)
    %219 = "ttir.transpose"(%203, %218) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x32x160x160xbf16>, tensor<1x160x32x160xbf16>) -> tensor<1x160x32x160xbf16> loc(#loc1867)
    %220 = ttir.empty() : tensor<1x160x160x32xbf16> loc(#loc1868)
    %221 = "ttir.transpose"(%219, %220) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x32x160xbf16>, tensor<1x160x160x32xbf16>) -> tensor<1x160x160x32xbf16> loc(#loc1868)
    %222 = ttir.empty() : tensor<1x160x160x32xbf16> loc(#loc1869)
    %223 = "ttir.conv2d"(%221, %arg330, %222) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x32xbf16>, tensor<32x32x1x1xbf16>, tensor<1x160x160x32xbf16>) -> tensor<1x160x160x32xbf16> loc(#loc1869)
    %224 = ttir.empty() : tensor<1x160x32x160xbf16> loc(#loc1870)
    %225 = "ttir.transpose"(%223, %224) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x32xbf16>, tensor<1x160x32x160xbf16>) -> tensor<1x160x32x160xbf16> loc(#loc1870)
    %226 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1871)
    %227 = "ttir.transpose"(%225, %226) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x32x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1871)
    %228 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc26)
    %229 = "ttir.multiply"(%227, %arg26, %228) : (tensor<1x32x160x160xbf16>, tensor<1x32x1x1xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc26)
    %230 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc27)
    %231 = "ttir.add"(%229, %arg27, %230) : (tensor<1x32x160x160xbf16>, tensor<1x32x1x1xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc27)
    %232 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1620)
    %233 = "ttir.add"(%217, %231, %232) : (tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1620)
    %234 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1621)
    %235 = "ttir.sigmoid"(%233, %234) : (tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1621)
    %236 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1622)
    %237 = "ttir.multiply"(%233, %235, %236) : (tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1622)
    %238 = ttir.empty() : tensor<1x160x32x160xbf16> loc(#loc1749)
    %239 = "ttir.transpose"(%237, %238) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x32x160x160xbf16>, tensor<1x160x32x160xbf16>) -> tensor<1x160x32x160xbf16> loc(#loc1749)
    %240 = ttir.empty() : tensor<1x160x160x32xbf16> loc(#loc1750)
    %241 = "ttir.transpose"(%239, %240) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x32x160xbf16>, tensor<1x160x160x32xbf16>) -> tensor<1x160x160x32xbf16> loc(#loc1750)
    %242 = ttir.empty() : tensor<1x160x160x32xbf16> loc(#loc1751)
    %243 = "ttir.conv2d"(%241, %arg331, %242) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x32xbf16>, tensor<32x32x3x3xbf16>, tensor<1x160x160x32xbf16>) -> tensor<1x160x160x32xbf16> loc(#loc1751)
    %244 = ttir.empty() : tensor<1x160x32x160xbf16> loc(#loc1752)
    %245 = "ttir.transpose"(%243, %244) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x32xbf16>, tensor<1x160x32x160xbf16>) -> tensor<1x160x32x160xbf16> loc(#loc1752)
    %246 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1753)
    %247 = "ttir.transpose"(%245, %246) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x32x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1753)
    %248 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc28)
    %249 = "ttir.multiply"(%247, %arg28, %248) : (tensor<1x32x160x160xbf16>, tensor<1x32x1x1xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc28)
    %250 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc29)
    %251 = "ttir.add"(%249, %arg29, %250) : (tensor<1x32x160x160xbf16>, tensor<1x32x1x1xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc29)
    %252 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1624)
    %253 = "ttir.sigmoid"(%251, %252) : (tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1624)
    %254 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1625)
    %255 = "ttir.multiply"(%251, %253, %254) : (tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1625)
    %256 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1348)
    %257 = "ttir.add"(%203, %255, %256) : (tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1348)
    %258 = ttir.empty() : tensor<1x160x64x160xbf16> loc(#loc1349)
    %259 = "ttir.transpose"(%185, %258) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x64x160x160xbf16>, tensor<1x160x64x160xbf16>) -> tensor<1x160x64x160xbf16> loc(#loc1349)
    %260 = ttir.empty() : tensor<1x160x160x64xbf16> loc(#loc1350)
    %261 = "ttir.transpose"(%259, %260) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x64x160xbf16>, tensor<1x160x160x64xbf16>) -> tensor<1x160x160x64xbf16> loc(#loc1350)
    %262 = ttir.empty() : tensor<1x160x160x32xbf16> loc(#loc1351)
    %263 = "ttir.conv2d"(%261, %arg332, %262) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x64xbf16>, tensor<32x64x1x1xbf16>, tensor<1x160x160x32xbf16>) -> tensor<1x160x160x32xbf16> loc(#loc1351)
    %264 = ttir.empty() : tensor<1x160x32x160xbf16> loc(#loc1352)
    %265 = "ttir.transpose"(%263, %264) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x32xbf16>, tensor<1x160x32x160xbf16>) -> tensor<1x160x32x160xbf16> loc(#loc1352)
    %266 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1353)
    %267 = "ttir.transpose"(%265, %266) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x32x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1353)
    %268 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc30)
    %269 = "ttir.multiply"(%267, %arg30, %268) : (tensor<1x32x160x160xbf16>, tensor<1x32x1x1xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc30)
    %270 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc31)
    %271 = "ttir.add"(%269, %arg31, %270) : (tensor<1x32x160x160xbf16>, tensor<1x32x1x1xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc31)
    %272 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1043)
    %273 = "ttir.sigmoid"(%271, %272) : (tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1043)
    %274 = ttir.empty() : tensor<1x32x160x160xbf16> loc(#loc1044)
    %275 = "ttir.multiply"(%271, %273, %274) : (tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>) -> tensor<1x32x160x160xbf16> loc(#loc1044)
    %276 = ttir.empty() : tensor<1x64x160x160xbf16> loc(#loc700)
    %277 = "ttir.concat"(%257, %275, %276) <{dim = -3 : si32}> : (tensor<1x32x160x160xbf16>, tensor<1x32x160x160xbf16>, tensor<1x64x160x160xbf16>) -> tensor<1x64x160x160xbf16> loc(#loc700)
    %278 = ttir.empty() : tensor<1x160x64x160xbf16> loc(#loc1354)
    %279 = "ttir.transpose"(%277, %278) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x64x160x160xbf16>, tensor<1x160x64x160xbf16>) -> tensor<1x160x64x160xbf16> loc(#loc1354)
    %280 = ttir.empty() : tensor<1x160x160x64xbf16> loc(#loc1355)
    %281 = "ttir.transpose"(%279, %280) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x64x160xbf16>, tensor<1x160x160x64xbf16>) -> tensor<1x160x160x64xbf16> loc(#loc1355)
    %282 = ttir.empty() : tensor<1x160x160x64xbf16> loc(#loc1356)
    %283 = "ttir.conv2d"(%281, %arg333, %282) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x64xbf16>, tensor<64x64x1x1xbf16>, tensor<1x160x160x64xbf16>) -> tensor<1x160x160x64xbf16> loc(#loc1356)
    %284 = ttir.empty() : tensor<1x160x64x160xbf16> loc(#loc1357)
    %285 = "ttir.transpose"(%283, %284) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x64xbf16>, tensor<1x160x64x160xbf16>) -> tensor<1x160x64x160xbf16> loc(#loc1357)
    %286 = ttir.empty() : tensor<1x64x160x160xbf16> loc(#loc1358)
    %287 = "ttir.transpose"(%285, %286) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x64x160xbf16>, tensor<1x64x160x160xbf16>) -> tensor<1x64x160x160xbf16> loc(#loc1358)
    %288 = ttir.empty() : tensor<1x64x160x160xbf16> loc(#loc32)
    %289 = "ttir.multiply"(%287, %arg32, %288) : (tensor<1x64x160x160xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x160x160xbf16>) -> tensor<1x64x160x160xbf16> loc(#loc32)
    %290 = ttir.empty() : tensor<1x64x160x160xbf16> loc(#loc33)
    %291 = "ttir.add"(%289, %arg33, %290) : (tensor<1x64x160x160xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x160x160xbf16>) -> tensor<1x64x160x160xbf16> loc(#loc33)
    %292 = ttir.empty() : tensor<1x64x160x160xbf16> loc(#loc1046)
    %293 = "ttir.sigmoid"(%291, %292) : (tensor<1x64x160x160xbf16>, tensor<1x64x160x160xbf16>) -> tensor<1x64x160x160xbf16> loc(#loc1046)
    %294 = ttir.empty() : tensor<1x64x160x160xbf16> loc(#loc1047)
    %295 = "ttir.multiply"(%291, %293, %294) : (tensor<1x64x160x160xbf16>, tensor<1x64x160x160xbf16>, tensor<1x64x160x160xbf16>) -> tensor<1x64x160x160xbf16> loc(#loc1047)
    %296 = ttir.empty() : tensor<1x160x64x160xbf16> loc(#loc1048)
    %297 = "ttir.transpose"(%295, %296) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x64x160x160xbf16>, tensor<1x160x64x160xbf16>) -> tensor<1x160x64x160xbf16> loc(#loc1048)
    %298 = ttir.empty() : tensor<1x160x160x64xbf16> loc(#loc1049)
    %299 = "ttir.transpose"(%297, %298) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x64x160xbf16>, tensor<1x160x160x64xbf16>) -> tensor<1x160x160x64xbf16> loc(#loc1049)
    %300 = ttir.empty() : tensor<1x160x160x64xbf16> loc(#loc1050)
    %301 = "ttir.conv2d"(%299, %arg334, %300) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x64xbf16>, tensor<64x64x3x3xbf16>, tensor<1x160x160x64xbf16>) -> tensor<1x160x160x64xbf16> loc(#loc1050)
    %302 = ttir.empty() : tensor<1x160x64x160xbf16> loc(#loc1051)
    %303 = "ttir.transpose"(%301, %302) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x64xbf16>, tensor<1x160x64x160xbf16>) -> tensor<1x160x64x160xbf16> loc(#loc1051)
    %304 = ttir.empty() : tensor<1x64x160x160xbf16> loc(#loc1052)
    %305 = "ttir.transpose"(%303, %304) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x64x160xbf16>, tensor<1x64x160x160xbf16>) -> tensor<1x64x160x160xbf16> loc(#loc1052)
    %306 = ttir.empty() : tensor<1x64x160x160xbf16> loc(#loc34)
    %307 = "ttir.multiply"(%305, %arg34, %306) : (tensor<1x64x160x160xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x160x160xbf16>) -> tensor<1x64x160x160xbf16> loc(#loc34)
    %308 = ttir.empty() : tensor<1x64x160x160xbf16> loc(#loc35)
    %309 = "ttir.add"(%307, %arg35, %308) : (tensor<1x64x160x160xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x160x160xbf16>) -> tensor<1x64x160x160xbf16> loc(#loc35)
    %310 = ttir.empty() : tensor<1x64x160x160xbf16> loc(#loc703)
    %311 = "ttir.sigmoid"(%309, %310) : (tensor<1x64x160x160xbf16>, tensor<1x64x160x160xbf16>) -> tensor<1x64x160x160xbf16> loc(#loc703)
    %312 = ttir.empty() : tensor<1x64x160x160xbf16> loc(#loc704)
    %313 = "ttir.multiply"(%309, %311, %312) : (tensor<1x64x160x160xbf16>, tensor<1x64x160x160xbf16>, tensor<1x64x160x160xbf16>) -> tensor<1x64x160x160xbf16> loc(#loc704)
    %314 = ttir.empty() : tensor<1x256x160x160xbf16> loc(#loc345)
    %315 = "ttir.concat"(%55, %57, %185, %313, %314) <{dim = -3 : si32}> : (tensor<1x64x160x160xbf16>, tensor<1x64x160x160xbf16>, tensor<1x64x160x160xbf16>, tensor<1x64x160x160xbf16>, tensor<1x256x160x160xbf16>) -> tensor<1x256x160x160xbf16> loc(#loc345)
    %316 = ttir.empty() : tensor<1x160x256x160xbf16> loc(#loc705)
    %317 = "ttir.transpose"(%315, %316) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x160x160xbf16>, tensor<1x160x256x160xbf16>) -> tensor<1x160x256x160xbf16> loc(#loc705)
    %318 = ttir.empty() : tensor<1x160x160x256xbf16> loc(#loc706)
    %319 = "ttir.transpose"(%317, %318) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x256x160xbf16>, tensor<1x160x160x256xbf16>) -> tensor<1x160x160x256xbf16> loc(#loc706)
    %320 = ttir.empty() : tensor<1x160x160x256xbf16> loc(#loc707)
    %321 = "ttir.conv2d"(%319, %arg335, %320) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x256xbf16>, tensor<256x256x1x1xbf16>, tensor<1x160x160x256xbf16>) -> tensor<1x160x160x256xbf16> loc(#loc707)
    %322 = ttir.empty() : tensor<1x160x256x160xbf16> loc(#loc708)
    %323 = "ttir.transpose"(%321, %322) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x256xbf16>, tensor<1x160x256x160xbf16>) -> tensor<1x160x256x160xbf16> loc(#loc708)
    %324 = ttir.empty() : tensor<1x256x160x160xbf16> loc(#loc709)
    %325 = "ttir.transpose"(%323, %324) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x256x160xbf16>, tensor<1x256x160x160xbf16>) -> tensor<1x256x160x160xbf16> loc(#loc709)
    %326 = ttir.empty() : tensor<1x256x160x160xbf16> loc(#loc36)
    %327 = "ttir.multiply"(%325, %arg36, %326) : (tensor<1x256x160x160xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x160x160xbf16>) -> tensor<1x256x160x160xbf16> loc(#loc36)
    %328 = ttir.empty() : tensor<1x256x160x160xbf16> loc(#loc37)
    %329 = "ttir.add"(%327, %arg37, %328) : (tensor<1x256x160x160xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x160x160xbf16>) -> tensor<1x256x160x160xbf16> loc(#loc37)
    %330 = ttir.empty() : tensor<1x256x160x160xbf16> loc(#loc538)
    %331 = "ttir.sigmoid"(%329, %330) : (tensor<1x256x160x160xbf16>, tensor<1x256x160x160xbf16>) -> tensor<1x256x160x160xbf16> loc(#loc538)
    %332 = ttir.empty() : tensor<1x256x160x160xbf16> loc(#loc539)
    %333 = "ttir.multiply"(%329, %331, %332) : (tensor<1x256x160x160xbf16>, tensor<1x256x160x160xbf16>, tensor<1x256x160x160xbf16>) -> tensor<1x256x160x160xbf16> loc(#loc539)
    %334 = ttir.empty() : tensor<1x160x256x160xbf16> loc(#loc347)
    %335 = "ttir.transpose"(%333, %334) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x160x160xbf16>, tensor<1x160x256x160xbf16>) -> tensor<1x160x256x160xbf16> loc(#loc347)
    %336 = ttir.empty() : tensor<1x160x160x256xbf16> loc(#loc348)
    %337 = "ttir.transpose"(%335, %336) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x256x160xbf16>, tensor<1x160x160x256xbf16>) -> tensor<1x160x160x256xbf16> loc(#loc348)
    %338 = ttir.empty() : tensor<1x159x159x256xbf16> loc(#loc349)
    %339 = "ttir.conv2d"(%337, %arg38, %338) <{dilation = array<i32: 1, 1>, groups = 256 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x256xbf16>, tensor<256x1x2x2xbf16>, tensor<1x159x159x256xbf16>) -> tensor<1x159x159x256xbf16> loc(#loc349)
    %340 = ttir.empty() : tensor<1x159x256x159xbf16> loc(#loc350)
    %341 = "ttir.transpose"(%339, %340) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x159x159x256xbf16>, tensor<1x159x256x159xbf16>) -> tensor<1x159x256x159xbf16> loc(#loc350)
    %342 = ttir.empty() : tensor<1x256x159x159xbf16> loc(#loc351)
    %343 = "ttir.transpose"(%341, %342) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x159x256x159xbf16>, tensor<1x256x159x159xbf16>) -> tensor<1x256x159x159xbf16> loc(#loc351)
    %344 = ttir.empty() : tensor<1x128x159x159xbf16> loc(#loc352)
    %345 = "ttir.index"(%343, %344) <{begin = 0 : i32, dim = 1 : i32, end = 128 : i32, step = 1 : i32}> : (tensor<1x256x159x159xbf16>, tensor<1x128x159x159xbf16>) -> tensor<1x128x159x159xbf16> loc(#loc352)
    %346 = ttir.empty() : tensor<1x159x128x159xbf16> loc(#loc710)
    %347 = "ttir.transpose"(%345, %346) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x159x159xbf16>, tensor<1x159x128x159xbf16>) -> tensor<1x159x128x159xbf16> loc(#loc710)
    %348 = ttir.empty() : tensor<1x159x159x128xbf16> loc(#loc711)
    %349 = "ttir.transpose"(%347, %348) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x159x128x159xbf16>, tensor<1x159x159x128xbf16>) -> tensor<1x159x159x128xbf16> loc(#loc711)
    %350 = ttir.empty() : tensor<1x80x80x128xbf16> loc(#loc712)
    %351 = "ttir.conv2d"(%349, %arg336, %350) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 2, 2>}> {channel_last = 1 : si32} : (tensor<1x159x159x128xbf16>, tensor<128x128x3x3xbf16>, tensor<1x80x80x128xbf16>) -> tensor<1x80x80x128xbf16> loc(#loc712)
    %352 = ttir.empty() : tensor<1x80x128x80xbf16> loc(#loc713)
    %353 = "ttir.transpose"(%351, %352) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x128xbf16>, tensor<1x80x128x80xbf16>) -> tensor<1x80x128x80xbf16> loc(#loc713)
    %354 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc714)
    %355 = "ttir.transpose"(%353, %354) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x128x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc714)
    %356 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc38)
    %357 = "ttir.multiply"(%355, %arg39, %356) : (tensor<1x128x80x80xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc38)
    %358 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc39)
    %359 = "ttir.add"(%357, %arg40, %358) : (tensor<1x128x80x80xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc39)
    %360 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc541)
    %361 = "ttir.sigmoid"(%359, %360) : (tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc541)
    %362 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc542)
    %363 = "ttir.multiply"(%359, %361, %362) : (tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc542)
    %364 = ttir.empty() : tensor<1x128x159x159xbf16> loc(#loc354)
    %365 = "ttir.index"(%343, %364) <{begin = 128 : i32, dim = 1 : i32, end = 256 : i32, step = 1 : i32}> : (tensor<1x256x159x159xbf16>, tensor<1x128x159x159xbf16>) -> tensor<1x128x159x159xbf16> loc(#loc354)
    %366 = ttir.empty() : tensor<1x159x128x159xbf16> loc(#loc355)
    %367 = "ttir.transpose"(%365, %366) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x159x159xbf16>, tensor<1x159x128x159xbf16>) -> tensor<1x159x128x159xbf16> loc(#loc355)
    %368 = ttir.empty() : tensor<1x159x159x128xbf16> loc(#loc356)
    %369 = "ttir.transpose"(%367, %368) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x159x128x159xbf16>, tensor<1x159x159x128xbf16>) -> tensor<1x159x159x128xbf16> loc(#loc356)
    %370 = ttir.empty() : tensor<1x80x80x128xbf16> loc(#loc357)
    %371 = "ttir.max_pool2d"(%369, %370) <{ceil_mode = false, dilation_height = 1 : si32, dilation_width = 1 : si32, kernel_height = 3 : si32, kernel_width = 3 : si32, padding_bottom = 1 : si32, padding_left = 1 : si32, padding_right = 1 : si32, padding_top = 1 : si32, stride_height = 2 : si32, stride_width = 2 : si32}> {channel_last = true} : (tensor<1x159x159x128xbf16>, tensor<1x80x80x128xbf16>) -> tensor<1x80x80x128xbf16> loc(#loc357)
    %372 = ttir.empty() : tensor<1x80x128x80xbf16> loc(#loc358)
    %373 = "ttir.transpose"(%371, %372) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x128xbf16>, tensor<1x80x128x80xbf16>) -> tensor<1x80x128x80xbf16> loc(#loc358)
    %374 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc359)
    %375 = "ttir.transpose"(%373, %374) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x128x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc359)
    %376 = ttir.empty() : tensor<1x80x128x80xbf16> loc(#loc715)
    %377 = "ttir.transpose"(%375, %376) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x80x80xbf16>, tensor<1x80x128x80xbf16>) -> tensor<1x80x128x80xbf16> loc(#loc715)
    %378 = ttir.empty() : tensor<1x80x80x128xbf16> loc(#loc716)
    %379 = "ttir.transpose"(%377, %378) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x128x80xbf16>, tensor<1x80x80x128xbf16>) -> tensor<1x80x80x128xbf16> loc(#loc716)
    %380 = ttir.empty() : tensor<1x80x80x128xbf16> loc(#loc717)
    %381 = "ttir.conv2d"(%379, %arg337, %380) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x128xbf16>, tensor<128x128x1x1xbf16>, tensor<1x80x80x128xbf16>) -> tensor<1x80x80x128xbf16> loc(#loc717)
    %382 = ttir.empty() : tensor<1x80x128x80xbf16> loc(#loc718)
    %383 = "ttir.transpose"(%381, %382) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x128xbf16>, tensor<1x80x128x80xbf16>) -> tensor<1x80x128x80xbf16> loc(#loc718)
    %384 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc719)
    %385 = "ttir.transpose"(%383, %384) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x128x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc719)
    %386 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc40)
    %387 = "ttir.multiply"(%385, %arg41, %386) : (tensor<1x128x80x80xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc40)
    %388 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc41)
    %389 = "ttir.add"(%387, %arg42, %388) : (tensor<1x128x80x80xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc41)
    %390 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc544)
    %391 = "ttir.sigmoid"(%389, %390) : (tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc544)
    %392 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc545)
    %393 = "ttir.multiply"(%389, %391, %392) : (tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc545)
    %394 = ttir.empty() : tensor<1x256x80x80xbf16> loc(#loc361)
    %395 = "ttir.concat"(%363, %393, %394) <{dim = -3 : si32}> : (tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>, tensor<1x256x80x80xbf16>) -> tensor<1x256x80x80xbf16> loc(#loc361)
    %396 = ttir.empty() : tensor<1x80x256x80xbf16> loc(#loc720)
    %397 = "ttir.transpose"(%395, %396) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x80x80xbf16>, tensor<1x80x256x80xbf16>) -> tensor<1x80x256x80xbf16> loc(#loc720)
    %398 = ttir.empty() : tensor<1x80x80x256xbf16> loc(#loc721)
    %399 = "ttir.transpose"(%397, %398) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x256x80xbf16>, tensor<1x80x80x256xbf16>) -> tensor<1x80x80x256xbf16> loc(#loc721)
    %400 = ttir.empty() : tensor<1x80x80x256xbf16> loc(#loc722)
    %401 = "ttir.conv2d"(%399, %arg338, %400) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x256xbf16>, tensor<256x256x1x1xbf16>, tensor<1x80x80x256xbf16>) -> tensor<1x80x80x256xbf16> loc(#loc722)
    %402 = ttir.empty() : tensor<1x80x256x80xbf16> loc(#loc723)
    %403 = "ttir.transpose"(%401, %402) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x256xbf16>, tensor<1x80x256x80xbf16>) -> tensor<1x80x256x80xbf16> loc(#loc723)
    %404 = ttir.empty() : tensor<1x256x80x80xbf16> loc(#loc724)
    %405 = "ttir.transpose"(%403, %404) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x256x80xbf16>, tensor<1x256x80x80xbf16>) -> tensor<1x256x80x80xbf16> loc(#loc724)
    %406 = ttir.empty() : tensor<1x256x80x80xbf16> loc(#loc42)
    %407 = "ttir.multiply"(%405, %arg43, %406) : (tensor<1x256x80x80xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x80x80xbf16>) -> tensor<1x256x80x80xbf16> loc(#loc42)
    %408 = ttir.empty() : tensor<1x256x80x80xbf16> loc(#loc43)
    %409 = "ttir.add"(%407, %arg44, %408) : (tensor<1x256x80x80xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x80x80xbf16>) -> tensor<1x256x80x80xbf16> loc(#loc43)
    %410 = ttir.empty() : tensor<1x256x80x80xbf16> loc(#loc547)
    %411 = "ttir.sigmoid"(%409, %410) : (tensor<1x256x80x80xbf16>, tensor<1x256x80x80xbf16>) -> tensor<1x256x80x80xbf16> loc(#loc547)
    %412 = ttir.empty() : tensor<1x256x80x80xbf16> loc(#loc548)
    %413 = "ttir.multiply"(%409, %411, %412) : (tensor<1x256x80x80xbf16>, tensor<1x256x80x80xbf16>, tensor<1x256x80x80xbf16>) -> tensor<1x256x80x80xbf16> loc(#loc548)
    %414 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc363)
    %415 = "ttir.index"(%413, %414) <{begin = 0 : i32, dim = 1 : i32, end = 128 : i32, step = 1 : i32}> : (tensor<1x256x80x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc363)
    %416 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc364)
    %417 = "ttir.index"(%413, %416) <{begin = 128 : i32, dim = 1 : i32, end = 256 : i32, step = 1 : i32}> : (tensor<1x256x80x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc364)
    %418 = ttir.empty() : tensor<1x80x128x80xbf16> loc(#loc1359)
    %419 = "ttir.transpose"(%417, %418) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x80x80xbf16>, tensor<1x80x128x80xbf16>) -> tensor<1x80x128x80xbf16> loc(#loc1359)
    %420 = ttir.empty() : tensor<1x80x80x128xbf16> loc(#loc1360)
    %421 = "ttir.transpose"(%419, %420) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x128x80xbf16>, tensor<1x80x80x128xbf16>) -> tensor<1x80x80x128xbf16> loc(#loc1360)
    %422 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1361)
    %423 = "ttir.conv2d"(%421, %arg339, %422) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x128xbf16>, tensor<64x128x1x1xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1361)
    %424 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1362)
    %425 = "ttir.transpose"(%423, %424) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x64xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1362)
    %426 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1363)
    %427 = "ttir.transpose"(%425, %426) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1363)
    %428 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc44)
    %429 = "ttir.multiply"(%427, %arg45, %428) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc44)
    %430 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc45)
    %431 = "ttir.add"(%429, %arg46, %430) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc45)
    %432 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1054)
    %433 = "ttir.sigmoid"(%431, %432) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1054)
    %434 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1055)
    %435 = "ttir.multiply"(%431, %433, %434) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1055)
    %436 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1872)
    %437 = "ttir.transpose"(%435, %436) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x64x80x80xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1872)
    %438 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1873)
    %439 = "ttir.transpose"(%437, %438) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1873)
    %440 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1874)
    %441 = "ttir.conv2d"(%439, %arg340, %440) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x64xbf16>, tensor<64x64x3x3xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1874)
    %442 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1875)
    %443 = "ttir.transpose"(%441, %442) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x64xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1875)
    %444 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1876)
    %445 = "ttir.transpose"(%443, %444) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1876)
    %446 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc46)
    %447 = "ttir.multiply"(%445, %arg47, %446) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc46)
    %448 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc47)
    %449 = "ttir.add"(%447, %arg48, %448) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc47)
    %450 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1877)
    %451 = "ttir.transpose"(%435, %450) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x64x80x80xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1877)
    %452 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1878)
    %453 = "ttir.transpose"(%451, %452) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1878)
    %454 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1879)
    %455 = "ttir.conv2d"(%453, %arg341, %454) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x64xbf16>, tensor<64x64x1x1xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1879)
    %456 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1880)
    %457 = "ttir.transpose"(%455, %456) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x64xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1880)
    %458 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1881)
    %459 = "ttir.transpose"(%457, %458) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1881)
    %460 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc48)
    %461 = "ttir.multiply"(%459, %arg49, %460) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc48)
    %462 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc49)
    %463 = "ttir.add"(%461, %arg50, %462) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc49)
    %464 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1628)
    %465 = "ttir.add"(%449, %463, %464) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1628)
    %466 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1629)
    %467 = "ttir.sigmoid"(%465, %466) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1629)
    %468 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1630)
    %469 = "ttir.multiply"(%465, %467, %468) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1630)
    %470 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1756)
    %471 = "ttir.transpose"(%469, %470) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x64x80x80xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1756)
    %472 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1757)
    %473 = "ttir.transpose"(%471, %472) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1757)
    %474 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1758)
    %475 = "ttir.conv2d"(%473, %arg342, %474) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x64xbf16>, tensor<64x64x3x3xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1758)
    %476 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1759)
    %477 = "ttir.transpose"(%475, %476) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x64xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1759)
    %478 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1760)
    %479 = "ttir.transpose"(%477, %478) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1760)
    %480 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc50)
    %481 = "ttir.multiply"(%479, %arg51, %480) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc50)
    %482 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc51)
    %483 = "ttir.add"(%481, %arg52, %482) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc51)
    %484 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1632)
    %485 = "ttir.sigmoid"(%483, %484) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1632)
    %486 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1633)
    %487 = "ttir.multiply"(%483, %485, %486) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1633)
    %488 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1366)
    %489 = "ttir.add"(%435, %487, %488) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1366)
    %490 = ttir.empty() : tensor<1x80x128x80xbf16> loc(#loc1367)
    %491 = "ttir.transpose"(%417, %490) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x80x80xbf16>, tensor<1x80x128x80xbf16>) -> tensor<1x80x128x80xbf16> loc(#loc1367)
    %492 = ttir.empty() : tensor<1x80x80x128xbf16> loc(#loc1368)
    %493 = "ttir.transpose"(%491, %492) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x128x80xbf16>, tensor<1x80x80x128xbf16>) -> tensor<1x80x80x128xbf16> loc(#loc1368)
    %494 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1369)
    %495 = "ttir.conv2d"(%493, %arg343, %494) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x128xbf16>, tensor<64x128x1x1xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1369)
    %496 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1370)
    %497 = "ttir.transpose"(%495, %496) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x64xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1370)
    %498 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1371)
    %499 = "ttir.transpose"(%497, %498) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1371)
    %500 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc52)
    %501 = "ttir.multiply"(%499, %arg53, %500) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc52)
    %502 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc53)
    %503 = "ttir.add"(%501, %arg54, %502) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc53)
    %504 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1058)
    %505 = "ttir.sigmoid"(%503, %504) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1058)
    %506 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1059)
    %507 = "ttir.multiply"(%503, %505, %506) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1059)
    %508 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc728)
    %509 = "ttir.concat"(%489, %507, %508) <{dim = -3 : si32}> : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc728)
    %510 = ttir.empty() : tensor<1x80x128x80xbf16> loc(#loc1372)
    %511 = "ttir.transpose"(%509, %510) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x80x80xbf16>, tensor<1x80x128x80xbf16>) -> tensor<1x80x128x80xbf16> loc(#loc1372)
    %512 = ttir.empty() : tensor<1x80x80x128xbf16> loc(#loc1373)
    %513 = "ttir.transpose"(%511, %512) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x128x80xbf16>, tensor<1x80x80x128xbf16>) -> tensor<1x80x80x128xbf16> loc(#loc1373)
    %514 = ttir.empty() : tensor<1x80x80x128xbf16> loc(#loc1374)
    %515 = "ttir.conv2d"(%513, %arg344, %514) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x128xbf16>, tensor<128x128x1x1xbf16>, tensor<1x80x80x128xbf16>) -> tensor<1x80x80x128xbf16> loc(#loc1374)
    %516 = ttir.empty() : tensor<1x80x128x80xbf16> loc(#loc1375)
    %517 = "ttir.transpose"(%515, %516) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x128xbf16>, tensor<1x80x128x80xbf16>) -> tensor<1x80x128x80xbf16> loc(#loc1375)
    %518 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc1376)
    %519 = "ttir.transpose"(%517, %518) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x128x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc1376)
    %520 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc54)
    %521 = "ttir.multiply"(%519, %arg55, %520) : (tensor<1x128x80x80xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc54)
    %522 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc55)
    %523 = "ttir.add"(%521, %arg56, %522) : (tensor<1x128x80x80xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc55)
    %524 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc1061)
    %525 = "ttir.sigmoid"(%523, %524) : (tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc1061)
    %526 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc1062)
    %527 = "ttir.multiply"(%523, %525, %526) : (tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc1062)
    %528 = ttir.empty() : tensor<1x80x128x80xbf16> loc(#loc1063)
    %529 = "ttir.transpose"(%527, %528) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x80x80xbf16>, tensor<1x80x128x80xbf16>) -> tensor<1x80x128x80xbf16> loc(#loc1063)
    %530 = ttir.empty() : tensor<1x80x80x128xbf16> loc(#loc1064)
    %531 = "ttir.transpose"(%529, %530) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x128x80xbf16>, tensor<1x80x80x128xbf16>) -> tensor<1x80x80x128xbf16> loc(#loc1064)
    %532 = ttir.empty() : tensor<1x80x80x128xbf16> loc(#loc1065)
    %533 = "ttir.conv2d"(%531, %arg345, %532) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x128xbf16>, tensor<128x128x3x3xbf16>, tensor<1x80x80x128xbf16>) -> tensor<1x80x80x128xbf16> loc(#loc1065)
    %534 = ttir.empty() : tensor<1x80x128x80xbf16> loc(#loc1066)
    %535 = "ttir.transpose"(%533, %534) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x128xbf16>, tensor<1x80x128x80xbf16>) -> tensor<1x80x128x80xbf16> loc(#loc1066)
    %536 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc1067)
    %537 = "ttir.transpose"(%535, %536) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x128x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc1067)
    %538 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc56)
    %539 = "ttir.multiply"(%537, %arg57, %538) : (tensor<1x128x80x80xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc56)
    %540 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc57)
    %541 = "ttir.add"(%539, %arg58, %540) : (tensor<1x128x80x80xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc57)
    %542 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc731)
    %543 = "ttir.sigmoid"(%541, %542) : (tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc731)
    %544 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc732)
    %545 = "ttir.multiply"(%541, %543, %544) : (tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc732)
    %546 = ttir.empty() : tensor<1x80x128x80xbf16> loc(#loc1377)
    %547 = "ttir.transpose"(%545, %546) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x80x80xbf16>, tensor<1x80x128x80xbf16>) -> tensor<1x80x128x80xbf16> loc(#loc1377)
    %548 = ttir.empty() : tensor<1x80x80x128xbf16> loc(#loc1378)
    %549 = "ttir.transpose"(%547, %548) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x128x80xbf16>, tensor<1x80x80x128xbf16>) -> tensor<1x80x80x128xbf16> loc(#loc1378)
    %550 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1379)
    %551 = "ttir.conv2d"(%549, %arg346, %550) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x128xbf16>, tensor<64x128x1x1xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1379)
    %552 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1380)
    %553 = "ttir.transpose"(%551, %552) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x64xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1380)
    %554 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1381)
    %555 = "ttir.transpose"(%553, %554) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1381)
    %556 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc58)
    %557 = "ttir.multiply"(%555, %arg59, %556) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc58)
    %558 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc59)
    %559 = "ttir.add"(%557, %arg60, %558) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc59)
    %560 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1069)
    %561 = "ttir.sigmoid"(%559, %560) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1069)
    %562 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1070)
    %563 = "ttir.multiply"(%559, %561, %562) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1070)
    %564 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1882)
    %565 = "ttir.transpose"(%563, %564) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x64x80x80xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1882)
    %566 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1883)
    %567 = "ttir.transpose"(%565, %566) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1883)
    %568 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1884)
    %569 = "ttir.conv2d"(%567, %arg347, %568) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x64xbf16>, tensor<64x64x3x3xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1884)
    %570 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1885)
    %571 = "ttir.transpose"(%569, %570) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x64xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1885)
    %572 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1886)
    %573 = "ttir.transpose"(%571, %572) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1886)
    %574 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc60)
    %575 = "ttir.multiply"(%573, %arg61, %574) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc60)
    %576 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc61)
    %577 = "ttir.add"(%575, %arg62, %576) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc61)
    %578 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1887)
    %579 = "ttir.transpose"(%563, %578) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x64x80x80xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1887)
    %580 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1888)
    %581 = "ttir.transpose"(%579, %580) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1888)
    %582 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1889)
    %583 = "ttir.conv2d"(%581, %arg348, %582) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x64xbf16>, tensor<64x64x1x1xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1889)
    %584 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1890)
    %585 = "ttir.transpose"(%583, %584) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x64xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1890)
    %586 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1891)
    %587 = "ttir.transpose"(%585, %586) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1891)
    %588 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc62)
    %589 = "ttir.multiply"(%587, %arg63, %588) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc62)
    %590 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc63)
    %591 = "ttir.add"(%589, %arg64, %590) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc63)
    %592 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1636)
    %593 = "ttir.add"(%577, %591, %592) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1636)
    %594 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1637)
    %595 = "ttir.sigmoid"(%593, %594) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1637)
    %596 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1638)
    %597 = "ttir.multiply"(%593, %595, %596) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1638)
    %598 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1763)
    %599 = "ttir.transpose"(%597, %598) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x64x80x80xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1763)
    %600 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1764)
    %601 = "ttir.transpose"(%599, %600) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1764)
    %602 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1765)
    %603 = "ttir.conv2d"(%601, %arg349, %602) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x64xbf16>, tensor<64x64x3x3xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1765)
    %604 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1766)
    %605 = "ttir.transpose"(%603, %604) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x64xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1766)
    %606 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1767)
    %607 = "ttir.transpose"(%605, %606) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1767)
    %608 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc64)
    %609 = "ttir.multiply"(%607, %arg65, %608) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc64)
    %610 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc65)
    %611 = "ttir.add"(%609, %arg66, %610) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc65)
    %612 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1640)
    %613 = "ttir.sigmoid"(%611, %612) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1640)
    %614 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1641)
    %615 = "ttir.multiply"(%611, %613, %614) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1641)
    %616 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1384)
    %617 = "ttir.add"(%563, %615, %616) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1384)
    %618 = ttir.empty() : tensor<1x80x128x80xbf16> loc(#loc1385)
    %619 = "ttir.transpose"(%545, %618) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x80x80xbf16>, tensor<1x80x128x80xbf16>) -> tensor<1x80x128x80xbf16> loc(#loc1385)
    %620 = ttir.empty() : tensor<1x80x80x128xbf16> loc(#loc1386)
    %621 = "ttir.transpose"(%619, %620) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x128x80xbf16>, tensor<1x80x80x128xbf16>) -> tensor<1x80x80x128xbf16> loc(#loc1386)
    %622 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1387)
    %623 = "ttir.conv2d"(%621, %arg350, %622) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x128xbf16>, tensor<64x128x1x1xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1387)
    %624 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1388)
    %625 = "ttir.transpose"(%623, %624) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x64xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1388)
    %626 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1389)
    %627 = "ttir.transpose"(%625, %626) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1389)
    %628 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc66)
    %629 = "ttir.multiply"(%627, %arg67, %628) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc66)
    %630 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc67)
    %631 = "ttir.add"(%629, %arg68, %630) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc67)
    %632 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1073)
    %633 = "ttir.sigmoid"(%631, %632) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1073)
    %634 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1074)
    %635 = "ttir.multiply"(%631, %633, %634) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1074)
    %636 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc736)
    %637 = "ttir.concat"(%617, %635, %636) <{dim = -3 : si32}> : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc736)
    %638 = ttir.empty() : tensor<1x80x128x80xbf16> loc(#loc1390)
    %639 = "ttir.transpose"(%637, %638) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x80x80xbf16>, tensor<1x80x128x80xbf16>) -> tensor<1x80x128x80xbf16> loc(#loc1390)
    %640 = ttir.empty() : tensor<1x80x80x128xbf16> loc(#loc1391)
    %641 = "ttir.transpose"(%639, %640) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x128x80xbf16>, tensor<1x80x80x128xbf16>) -> tensor<1x80x80x128xbf16> loc(#loc1391)
    %642 = ttir.empty() : tensor<1x80x80x128xbf16> loc(#loc1392)
    %643 = "ttir.conv2d"(%641, %arg351, %642) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x128xbf16>, tensor<128x128x1x1xbf16>, tensor<1x80x80x128xbf16>) -> tensor<1x80x80x128xbf16> loc(#loc1392)
    %644 = ttir.empty() : tensor<1x80x128x80xbf16> loc(#loc1393)
    %645 = "ttir.transpose"(%643, %644) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x128xbf16>, tensor<1x80x128x80xbf16>) -> tensor<1x80x128x80xbf16> loc(#loc1393)
    %646 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc1394)
    %647 = "ttir.transpose"(%645, %646) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x128x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc1394)
    %648 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc68)
    %649 = "ttir.multiply"(%647, %arg69, %648) : (tensor<1x128x80x80xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc68)
    %650 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc69)
    %651 = "ttir.add"(%649, %arg70, %650) : (tensor<1x128x80x80xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc69)
    %652 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc1076)
    %653 = "ttir.sigmoid"(%651, %652) : (tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc1076)
    %654 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc1077)
    %655 = "ttir.multiply"(%651, %653, %654) : (tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc1077)
    %656 = ttir.empty() : tensor<1x80x128x80xbf16> loc(#loc1078)
    %657 = "ttir.transpose"(%655, %656) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x80x80xbf16>, tensor<1x80x128x80xbf16>) -> tensor<1x80x128x80xbf16> loc(#loc1078)
    %658 = ttir.empty() : tensor<1x80x80x128xbf16> loc(#loc1079)
    %659 = "ttir.transpose"(%657, %658) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x128x80xbf16>, tensor<1x80x80x128xbf16>) -> tensor<1x80x80x128xbf16> loc(#loc1079)
    %660 = ttir.empty() : tensor<1x80x80x128xbf16> loc(#loc1080)
    %661 = "ttir.conv2d"(%659, %arg352, %660) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x128xbf16>, tensor<128x128x3x3xbf16>, tensor<1x80x80x128xbf16>) -> tensor<1x80x80x128xbf16> loc(#loc1080)
    %662 = ttir.empty() : tensor<1x80x128x80xbf16> loc(#loc1081)
    %663 = "ttir.transpose"(%661, %662) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x128xbf16>, tensor<1x80x128x80xbf16>) -> tensor<1x80x128x80xbf16> loc(#loc1081)
    %664 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc1082)
    %665 = "ttir.transpose"(%663, %664) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x128x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc1082)
    %666 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc70)
    %667 = "ttir.multiply"(%665, %arg71, %666) : (tensor<1x128x80x80xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc70)
    %668 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc71)
    %669 = "ttir.add"(%667, %arg72, %668) : (tensor<1x128x80x80xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc71)
    %670 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc739)
    %671 = "ttir.sigmoid"(%669, %670) : (tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc739)
    %672 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc740)
    %673 = "ttir.multiply"(%669, %671, %672) : (tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc740)
    %674 = ttir.empty() : tensor<1x512x80x80xbf16> loc(#loc367)
    %675 = "ttir.concat"(%415, %417, %545, %673, %674) <{dim = -3 : si32}> : (tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>, tensor<1x512x80x80xbf16>) -> tensor<1x512x80x80xbf16> loc(#loc367)
    %676 = ttir.empty() : tensor<1x80x512x80xbf16> loc(#loc741)
    %677 = "ttir.transpose"(%675, %676) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x512x80x80xbf16>, tensor<1x80x512x80xbf16>) -> tensor<1x80x512x80xbf16> loc(#loc741)
    %678 = ttir.empty() : tensor<1x80x80x512xbf16> loc(#loc742)
    %679 = "ttir.transpose"(%677, %678) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x512x80xbf16>, tensor<1x80x80x512xbf16>) -> tensor<1x80x80x512xbf16> loc(#loc742)
    %680 = ttir.empty() : tensor<1x80x80x512xbf16> loc(#loc743)
    %681 = "ttir.conv2d"(%679, %arg353, %680) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x512xbf16>, tensor<512x512x1x1xbf16>, tensor<1x80x80x512xbf16>) -> tensor<1x80x80x512xbf16> loc(#loc743)
    %682 = ttir.empty() : tensor<1x80x512x80xbf16> loc(#loc744)
    %683 = "ttir.transpose"(%681, %682) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x512xbf16>, tensor<1x80x512x80xbf16>) -> tensor<1x80x512x80xbf16> loc(#loc744)
    %684 = ttir.empty() : tensor<1x512x80x80xbf16> loc(#loc745)
    %685 = "ttir.transpose"(%683, %684) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x512x80xbf16>, tensor<1x512x80x80xbf16>) -> tensor<1x512x80x80xbf16> loc(#loc745)
    %686 = ttir.empty() : tensor<1x512x80x80xbf16> loc(#loc72)
    %687 = "ttir.multiply"(%685, %arg73, %686) : (tensor<1x512x80x80xbf16>, tensor<1x512x1x1xbf16>, tensor<1x512x80x80xbf16>) -> tensor<1x512x80x80xbf16> loc(#loc72)
    %688 = ttir.empty() : tensor<1x512x80x80xbf16> loc(#loc73)
    %689 = "ttir.add"(%687, %arg74, %688) : (tensor<1x512x80x80xbf16>, tensor<1x512x1x1xbf16>, tensor<1x512x80x80xbf16>) -> tensor<1x512x80x80xbf16> loc(#loc73)
    %690 = ttir.empty() : tensor<1x512x80x80xbf16> loc(#loc554)
    %691 = "ttir.sigmoid"(%689, %690) : (tensor<1x512x80x80xbf16>, tensor<1x512x80x80xbf16>) -> tensor<1x512x80x80xbf16> loc(#loc554)
    %692 = ttir.empty() : tensor<1x512x80x80xbf16> loc(#loc555)
    %693 = "ttir.multiply"(%689, %691, %692) : (tensor<1x512x80x80xbf16>, tensor<1x512x80x80xbf16>, tensor<1x512x80x80xbf16>) -> tensor<1x512x80x80xbf16> loc(#loc555)
    %694 = ttir.empty() : tensor<1x80x512x80xbf16> loc(#loc369)
    %695 = "ttir.transpose"(%693, %694) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x512x80x80xbf16>, tensor<1x80x512x80xbf16>) -> tensor<1x80x512x80xbf16> loc(#loc369)
    %696 = ttir.empty() : tensor<1x80x80x512xbf16> loc(#loc370)
    %697 = "ttir.transpose"(%695, %696) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x512x80xbf16>, tensor<1x80x80x512xbf16>) -> tensor<1x80x80x512xbf16> loc(#loc370)
    %698 = ttir.empty() : tensor<1x79x79x512xbf16> loc(#loc371)
    %699 = "ttir.conv2d"(%697, %arg75, %698) <{dilation = array<i32: 1, 1>, groups = 512 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x512xbf16>, tensor<512x1x2x2xbf16>, tensor<1x79x79x512xbf16>) -> tensor<1x79x79x512xbf16> loc(#loc371)
    %700 = ttir.empty() : tensor<1x79x512x79xbf16> loc(#loc372)
    %701 = "ttir.transpose"(%699, %700) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x79x79x512xbf16>, tensor<1x79x512x79xbf16>) -> tensor<1x79x512x79xbf16> loc(#loc372)
    %702 = ttir.empty() : tensor<1x512x79x79xbf16> loc(#loc373)
    %703 = "ttir.transpose"(%701, %702) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x79x512x79xbf16>, tensor<1x512x79x79xbf16>) -> tensor<1x512x79x79xbf16> loc(#loc373)
    %704 = ttir.empty() : tensor<1x256x79x79xbf16> loc(#loc374)
    %705 = "ttir.index"(%703, %704) <{begin = 0 : i32, dim = 1 : i32, end = 256 : i32, step = 1 : i32}> : (tensor<1x512x79x79xbf16>, tensor<1x256x79x79xbf16>) -> tensor<1x256x79x79xbf16> loc(#loc374)
    %706 = ttir.empty() : tensor<1x79x256x79xbf16> loc(#loc746)
    %707 = "ttir.transpose"(%705, %706) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x79x79xbf16>, tensor<1x79x256x79xbf16>) -> tensor<1x79x256x79xbf16> loc(#loc746)
    %708 = ttir.empty() : tensor<1x79x79x256xbf16> loc(#loc747)
    %709 = "ttir.transpose"(%707, %708) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x79x256x79xbf16>, tensor<1x79x79x256xbf16>) -> tensor<1x79x79x256xbf16> loc(#loc747)
    %710 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc748)
    %711 = "ttir.conv2d"(%709, %arg354, %710) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 2, 2>}> {channel_last = 1 : si32} : (tensor<1x79x79x256xbf16>, tensor<256x256x3x3xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc748)
    %712 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc749)
    %713 = "ttir.transpose"(%711, %712) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x256xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc749)
    %714 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc750)
    %715 = "ttir.transpose"(%713, %714) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc750)
    %716 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc74)
    %717 = "ttir.multiply"(%715, %arg76, %716) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc74)
    %718 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc75)
    %719 = "ttir.add"(%717, %arg77, %718) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc75)
    %720 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc557)
    %721 = "ttir.sigmoid"(%719, %720) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc557)
    %722 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc558)
    %723 = "ttir.multiply"(%719, %721, %722) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc558)
    %724 = ttir.empty() : tensor<1x256x79x79xbf16> loc(#loc376)
    %725 = "ttir.index"(%703, %724) <{begin = 256 : i32, dim = 1 : i32, end = 512 : i32, step = 1 : i32}> : (tensor<1x512x79x79xbf16>, tensor<1x256x79x79xbf16>) -> tensor<1x256x79x79xbf16> loc(#loc376)
    %726 = ttir.empty() : tensor<1x79x256x79xbf16> loc(#loc377)
    %727 = "ttir.transpose"(%725, %726) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x79x79xbf16>, tensor<1x79x256x79xbf16>) -> tensor<1x79x256x79xbf16> loc(#loc377)
    %728 = ttir.empty() : tensor<1x79x79x256xbf16> loc(#loc378)
    %729 = "ttir.transpose"(%727, %728) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x79x256x79xbf16>, tensor<1x79x79x256xbf16>) -> tensor<1x79x79x256xbf16> loc(#loc378)
    %730 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc379)
    %731 = "ttir.max_pool2d"(%729, %730) <{ceil_mode = false, dilation_height = 1 : si32, dilation_width = 1 : si32, kernel_height = 3 : si32, kernel_width = 3 : si32, padding_bottom = 1 : si32, padding_left = 1 : si32, padding_right = 1 : si32, padding_top = 1 : si32, stride_height = 2 : si32, stride_width = 2 : si32}> {channel_last = true} : (tensor<1x79x79x256xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc379)
    %732 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc380)
    %733 = "ttir.transpose"(%731, %732) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x256xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc380)
    %734 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc381)
    %735 = "ttir.transpose"(%733, %734) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc381)
    %736 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc751)
    %737 = "ttir.transpose"(%735, %736) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc751)
    %738 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc752)
    %739 = "ttir.transpose"(%737, %738) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc752)
    %740 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc753)
    %741 = "ttir.conv2d"(%739, %arg355, %740) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x256xbf16>, tensor<256x256x1x1xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc753)
    %742 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc754)
    %743 = "ttir.transpose"(%741, %742) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x256xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc754)
    %744 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc755)
    %745 = "ttir.transpose"(%743, %744) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc755)
    %746 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc76)
    %747 = "ttir.multiply"(%745, %arg78, %746) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc76)
    %748 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc77)
    %749 = "ttir.add"(%747, %arg79, %748) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc77)
    %750 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc560)
    %751 = "ttir.sigmoid"(%749, %750) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc560)
    %752 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc561)
    %753 = "ttir.multiply"(%749, %751, %752) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc561)
    %754 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc383)
    %755 = "ttir.concat"(%723, %753, %754) <{dim = -3 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc383)
    %756 = ttir.empty() : tensor<1x40x512x40xbf16> loc(#loc756)
    %757 = "ttir.transpose"(%755, %756) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x512x40x40xbf16>, tensor<1x40x512x40xbf16>) -> tensor<1x40x512x40xbf16> loc(#loc756)
    %758 = ttir.empty() : tensor<1x40x40x512xbf16> loc(#loc757)
    %759 = "ttir.transpose"(%757, %758) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x512x40xbf16>, tensor<1x40x40x512xbf16>) -> tensor<1x40x40x512xbf16> loc(#loc757)
    %760 = ttir.empty() : tensor<1x40x40x512xbf16> loc(#loc758)
    %761 = "ttir.conv2d"(%759, %arg356, %760) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x512xbf16>, tensor<512x512x1x1xbf16>, tensor<1x40x40x512xbf16>) -> tensor<1x40x40x512xbf16> loc(#loc758)
    %762 = ttir.empty() : tensor<1x40x512x40xbf16> loc(#loc759)
    %763 = "ttir.transpose"(%761, %762) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x512xbf16>, tensor<1x40x512x40xbf16>) -> tensor<1x40x512x40xbf16> loc(#loc759)
    %764 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc760)
    %765 = "ttir.transpose"(%763, %764) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x512x40xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc760)
    %766 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc78)
    %767 = "ttir.multiply"(%765, %arg80, %766) : (tensor<1x512x40x40xbf16>, tensor<1x512x1x1xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc78)
    %768 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc79)
    %769 = "ttir.add"(%767, %arg81, %768) : (tensor<1x512x40x40xbf16>, tensor<1x512x1x1xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc79)
    %770 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc563)
    %771 = "ttir.sigmoid"(%769, %770) : (tensor<1x512x40x40xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc563)
    %772 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc564)
    %773 = "ttir.multiply"(%769, %771, %772) : (tensor<1x512x40x40xbf16>, tensor<1x512x40x40xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc564)
    %774 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc385)
    %775 = "ttir.index"(%773, %774) <{begin = 0 : i32, dim = 1 : i32, end = 256 : i32, step = 1 : i32}> : (tensor<1x512x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc385)
    %776 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc386)
    %777 = "ttir.index"(%773, %776) <{begin = 256 : i32, dim = 1 : i32, end = 512 : i32, step = 1 : i32}> : (tensor<1x512x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc386)
    %778 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1395)
    %779 = "ttir.transpose"(%777, %778) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1395)
    %780 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1396)
    %781 = "ttir.transpose"(%779, %780) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1396)
    %782 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1397)
    %783 = "ttir.conv2d"(%781, %arg357, %782) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x256xbf16>, tensor<128x256x1x1xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1397)
    %784 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1398)
    %785 = "ttir.transpose"(%783, %784) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1398)
    %786 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1399)
    %787 = "ttir.transpose"(%785, %786) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1399)
    %788 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc80)
    %789 = "ttir.multiply"(%787, %arg82, %788) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc80)
    %790 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc81)
    %791 = "ttir.add"(%789, %arg83, %790) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc81)
    %792 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1084)
    %793 = "ttir.sigmoid"(%791, %792) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1084)
    %794 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1085)
    %795 = "ttir.multiply"(%791, %793, %794) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1085)
    %796 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1892)
    %797 = "ttir.transpose"(%795, %796) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x40x40xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1892)
    %798 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1893)
    %799 = "ttir.transpose"(%797, %798) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1893)
    %800 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1894)
    %801 = "ttir.conv2d"(%799, %arg358, %800) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x128xbf16>, tensor<128x128x3x3xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1894)
    %802 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1895)
    %803 = "ttir.transpose"(%801, %802) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1895)
    %804 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1896)
    %805 = "ttir.transpose"(%803, %804) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1896)
    %806 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc82)
    %807 = "ttir.multiply"(%805, %arg84, %806) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc82)
    %808 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc83)
    %809 = "ttir.add"(%807, %arg85, %808) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc83)
    %810 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1897)
    %811 = "ttir.transpose"(%795, %810) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x40x40xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1897)
    %812 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1898)
    %813 = "ttir.transpose"(%811, %812) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1898)
    %814 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1899)
    %815 = "ttir.conv2d"(%813, %arg359, %814) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x128xbf16>, tensor<128x128x1x1xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1899)
    %816 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1900)
    %817 = "ttir.transpose"(%815, %816) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1900)
    %818 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1901)
    %819 = "ttir.transpose"(%817, %818) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1901)
    %820 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc84)
    %821 = "ttir.multiply"(%819, %arg86, %820) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc84)
    %822 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc85)
    %823 = "ttir.add"(%821, %arg87, %822) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc85)
    %824 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1644)
    %825 = "ttir.add"(%809, %823, %824) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1644)
    %826 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1645)
    %827 = "ttir.sigmoid"(%825, %826) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1645)
    %828 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1646)
    %829 = "ttir.multiply"(%825, %827, %828) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1646)
    %830 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1770)
    %831 = "ttir.transpose"(%829, %830) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x40x40xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1770)
    %832 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1771)
    %833 = "ttir.transpose"(%831, %832) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1771)
    %834 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1772)
    %835 = "ttir.conv2d"(%833, %arg360, %834) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x128xbf16>, tensor<128x128x3x3xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1772)
    %836 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1773)
    %837 = "ttir.transpose"(%835, %836) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1773)
    %838 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1774)
    %839 = "ttir.transpose"(%837, %838) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1774)
    %840 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc86)
    %841 = "ttir.multiply"(%839, %arg88, %840) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc86)
    %842 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc87)
    %843 = "ttir.add"(%841, %arg89, %842) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc87)
    %844 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1648)
    %845 = "ttir.sigmoid"(%843, %844) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1648)
    %846 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1649)
    %847 = "ttir.multiply"(%843, %845, %846) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1649)
    %848 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1402)
    %849 = "ttir.add"(%795, %847, %848) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1402)
    %850 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1403)
    %851 = "ttir.transpose"(%777, %850) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1403)
    %852 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1404)
    %853 = "ttir.transpose"(%851, %852) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1404)
    %854 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1405)
    %855 = "ttir.conv2d"(%853, %arg361, %854) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x256xbf16>, tensor<128x256x1x1xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1405)
    %856 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1406)
    %857 = "ttir.transpose"(%855, %856) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1406)
    %858 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1407)
    %859 = "ttir.transpose"(%857, %858) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1407)
    %860 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc88)
    %861 = "ttir.multiply"(%859, %arg90, %860) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc88)
    %862 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc89)
    %863 = "ttir.add"(%861, %arg91, %862) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc89)
    %864 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1088)
    %865 = "ttir.sigmoid"(%863, %864) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1088)
    %866 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1089)
    %867 = "ttir.multiply"(%863, %865, %866) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1089)
    %868 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc764)
    %869 = "ttir.concat"(%849, %867, %868) <{dim = -3 : si32}> : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc764)
    %870 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1408)
    %871 = "ttir.transpose"(%869, %870) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1408)
    %872 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1409)
    %873 = "ttir.transpose"(%871, %872) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1409)
    %874 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1410)
    %875 = "ttir.conv2d"(%873, %arg362, %874) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x256xbf16>, tensor<256x256x1x1xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1410)
    %876 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1411)
    %877 = "ttir.transpose"(%875, %876) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x256xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1411)
    %878 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc1412)
    %879 = "ttir.transpose"(%877, %878) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc1412)
    %880 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc90)
    %881 = "ttir.multiply"(%879, %arg92, %880) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc90)
    %882 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc91)
    %883 = "ttir.add"(%881, %arg93, %882) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc91)
    %884 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc1091)
    %885 = "ttir.sigmoid"(%883, %884) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc1091)
    %886 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc1092)
    %887 = "ttir.multiply"(%883, %885, %886) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc1092)
    %888 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1093)
    %889 = "ttir.transpose"(%887, %888) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1093)
    %890 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1094)
    %891 = "ttir.transpose"(%889, %890) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1094)
    %892 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1095)
    %893 = "ttir.conv2d"(%891, %arg363, %892) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x256xbf16>, tensor<256x256x3x3xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1095)
    %894 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1096)
    %895 = "ttir.transpose"(%893, %894) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x256xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1096)
    %896 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc1097)
    %897 = "ttir.transpose"(%895, %896) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc1097)
    %898 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc92)
    %899 = "ttir.multiply"(%897, %arg94, %898) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc92)
    %900 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc93)
    %901 = "ttir.add"(%899, %arg95, %900) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc93)
    %902 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc767)
    %903 = "ttir.sigmoid"(%901, %902) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc767)
    %904 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc768)
    %905 = "ttir.multiply"(%901, %903, %904) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc768)
    %906 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1413)
    %907 = "ttir.transpose"(%905, %906) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1413)
    %908 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1414)
    %909 = "ttir.transpose"(%907, %908) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1414)
    %910 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1415)
    %911 = "ttir.conv2d"(%909, %arg364, %910) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x256xbf16>, tensor<128x256x1x1xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1415)
    %912 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1416)
    %913 = "ttir.transpose"(%911, %912) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1416)
    %914 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1417)
    %915 = "ttir.transpose"(%913, %914) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1417)
    %916 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc94)
    %917 = "ttir.multiply"(%915, %arg96, %916) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc94)
    %918 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc95)
    %919 = "ttir.add"(%917, %arg97, %918) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc95)
    %920 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1099)
    %921 = "ttir.sigmoid"(%919, %920) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1099)
    %922 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1100)
    %923 = "ttir.multiply"(%919, %921, %922) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1100)
    %924 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1902)
    %925 = "ttir.transpose"(%923, %924) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x40x40xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1902)
    %926 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1903)
    %927 = "ttir.transpose"(%925, %926) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1903)
    %928 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1904)
    %929 = "ttir.conv2d"(%927, %arg365, %928) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x128xbf16>, tensor<128x128x3x3xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1904)
    %930 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1905)
    %931 = "ttir.transpose"(%929, %930) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1905)
    %932 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1906)
    %933 = "ttir.transpose"(%931, %932) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1906)
    %934 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc96)
    %935 = "ttir.multiply"(%933, %arg98, %934) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc96)
    %936 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc97)
    %937 = "ttir.add"(%935, %arg99, %936) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc97)
    %938 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1907)
    %939 = "ttir.transpose"(%923, %938) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x40x40xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1907)
    %940 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1908)
    %941 = "ttir.transpose"(%939, %940) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1908)
    %942 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1909)
    %943 = "ttir.conv2d"(%941, %arg366, %942) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x128xbf16>, tensor<128x128x1x1xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1909)
    %944 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1910)
    %945 = "ttir.transpose"(%943, %944) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1910)
    %946 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1911)
    %947 = "ttir.transpose"(%945, %946) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1911)
    %948 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc98)
    %949 = "ttir.multiply"(%947, %arg100, %948) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc98)
    %950 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc99)
    %951 = "ttir.add"(%949, %arg101, %950) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc99)
    %952 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1652)
    %953 = "ttir.add"(%937, %951, %952) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1652)
    %954 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1653)
    %955 = "ttir.sigmoid"(%953, %954) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1653)
    %956 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1654)
    %957 = "ttir.multiply"(%953, %955, %956) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1654)
    %958 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1777)
    %959 = "ttir.transpose"(%957, %958) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x40x40xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1777)
    %960 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1778)
    %961 = "ttir.transpose"(%959, %960) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1778)
    %962 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1779)
    %963 = "ttir.conv2d"(%961, %arg367, %962) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x128xbf16>, tensor<128x128x3x3xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1779)
    %964 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1780)
    %965 = "ttir.transpose"(%963, %964) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1780)
    %966 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1781)
    %967 = "ttir.transpose"(%965, %966) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1781)
    %968 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc100)
    %969 = "ttir.multiply"(%967, %arg102, %968) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc100)
    %970 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc101)
    %971 = "ttir.add"(%969, %arg103, %970) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc101)
    %972 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1656)
    %973 = "ttir.sigmoid"(%971, %972) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1656)
    %974 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1657)
    %975 = "ttir.multiply"(%971, %973, %974) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1657)
    %976 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1420)
    %977 = "ttir.add"(%923, %975, %976) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1420)
    %978 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1421)
    %979 = "ttir.transpose"(%905, %978) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1421)
    %980 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1422)
    %981 = "ttir.transpose"(%979, %980) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1422)
    %982 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1423)
    %983 = "ttir.conv2d"(%981, %arg368, %982) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x256xbf16>, tensor<128x256x1x1xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1423)
    %984 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1424)
    %985 = "ttir.transpose"(%983, %984) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1424)
    %986 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1425)
    %987 = "ttir.transpose"(%985, %986) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1425)
    %988 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc102)
    %989 = "ttir.multiply"(%987, %arg104, %988) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc102)
    %990 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc103)
    %991 = "ttir.add"(%989, %arg105, %990) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc103)
    %992 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1103)
    %993 = "ttir.sigmoid"(%991, %992) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1103)
    %994 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1104)
    %995 = "ttir.multiply"(%991, %993, %994) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1104)
    %996 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc772)
    %997 = "ttir.concat"(%977, %995, %996) <{dim = -3 : si32}> : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc772)
    %998 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1426)
    %999 = "ttir.transpose"(%997, %998) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1426)
    %1000 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1427)
    %1001 = "ttir.transpose"(%999, %1000) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1427)
    %1002 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1428)
    %1003 = "ttir.conv2d"(%1001, %arg369, %1002) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x256xbf16>, tensor<256x256x1x1xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1428)
    %1004 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1429)
    %1005 = "ttir.transpose"(%1003, %1004) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x256xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1429)
    %1006 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc1430)
    %1007 = "ttir.transpose"(%1005, %1006) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc1430)
    %1008 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc104)
    %1009 = "ttir.multiply"(%1007, %arg106, %1008) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc104)
    %1010 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc105)
    %1011 = "ttir.add"(%1009, %arg107, %1010) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc105)
    %1012 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc1106)
    %1013 = "ttir.sigmoid"(%1011, %1012) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc1106)
    %1014 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc1107)
    %1015 = "ttir.multiply"(%1011, %1013, %1014) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc1107)
    %1016 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1108)
    %1017 = "ttir.transpose"(%1015, %1016) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1108)
    %1018 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1109)
    %1019 = "ttir.transpose"(%1017, %1018) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1109)
    %1020 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1110)
    %1021 = "ttir.conv2d"(%1019, %arg370, %1020) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x256xbf16>, tensor<256x256x3x3xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1110)
    %1022 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1111)
    %1023 = "ttir.transpose"(%1021, %1022) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x256xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1111)
    %1024 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc1112)
    %1025 = "ttir.transpose"(%1023, %1024) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc1112)
    %1026 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc106)
    %1027 = "ttir.multiply"(%1025, %arg108, %1026) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc106)
    %1028 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc107)
    %1029 = "ttir.add"(%1027, %arg109, %1028) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc107)
    %1030 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc775)
    %1031 = "ttir.sigmoid"(%1029, %1030) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc775)
    %1032 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc776)
    %1033 = "ttir.multiply"(%1029, %1031, %1032) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc776)
    %1034 = ttir.empty() : tensor<1x1024x40x40xbf16> loc(#loc389)
    %1035 = "ttir.concat"(%775, %777, %905, %1033, %1034) <{dim = -3 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>, tensor<1x1024x40x40xbf16>) -> tensor<1x1024x40x40xbf16> loc(#loc389)
    %1036 = ttir.empty() : tensor<1x40x1024x40xbf16> loc(#loc777)
    %1037 = "ttir.transpose"(%1035, %1036) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x1024x40x40xbf16>, tensor<1x40x1024x40xbf16>) -> tensor<1x40x1024x40xbf16> loc(#loc777)
    %1038 = ttir.empty() : tensor<1x40x40x1024xbf16> loc(#loc778)
    %1039 = "ttir.transpose"(%1037, %1038) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x1024x40xbf16>, tensor<1x40x40x1024xbf16>) -> tensor<1x40x40x1024xbf16> loc(#loc778)
    %1040 = ttir.empty() : tensor<1x40x40x512xbf16> loc(#loc779)
    %1041 = "ttir.conv2d"(%1039, %arg371, %1040) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x1024xbf16>, tensor<512x1024x1x1xbf16>, tensor<1x40x40x512xbf16>) -> tensor<1x40x40x512xbf16> loc(#loc779)
    %1042 = ttir.empty() : tensor<1x40x512x40xbf16> loc(#loc780)
    %1043 = "ttir.transpose"(%1041, %1042) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x512xbf16>, tensor<1x40x512x40xbf16>) -> tensor<1x40x512x40xbf16> loc(#loc780)
    %1044 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc781)
    %1045 = "ttir.transpose"(%1043, %1044) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x512x40xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc781)
    %1046 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc108)
    %1047 = "ttir.multiply"(%1045, %arg110, %1046) : (tensor<1x512x40x40xbf16>, tensor<1x512x1x1xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc108)
    %1048 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc109)
    %1049 = "ttir.add"(%1047, %arg111, %1048) : (tensor<1x512x40x40xbf16>, tensor<1x512x1x1xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc109)
    %1050 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc570)
    %1051 = "ttir.sigmoid"(%1049, %1050) : (tensor<1x512x40x40xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc570)
    %1052 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc571)
    %1053 = "ttir.multiply"(%1049, %1051, %1052) : (tensor<1x512x40x40xbf16>, tensor<1x512x40x40xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc571)
    %1054 = ttir.empty() : tensor<1x40x512x40xbf16> loc(#loc391)
    %1055 = "ttir.transpose"(%1053, %1054) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x512x40x40xbf16>, tensor<1x40x512x40xbf16>) -> tensor<1x40x512x40xbf16> loc(#loc391)
    %1056 = ttir.empty() : tensor<1x40x40x512xbf16> loc(#loc392)
    %1057 = "ttir.transpose"(%1055, %1056) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x512x40xbf16>, tensor<1x40x40x512xbf16>) -> tensor<1x40x40x512xbf16> loc(#loc392)
    %1058 = ttir.empty() : tensor<1x39x39x512xbf16> loc(#loc393)
    %1059 = "ttir.conv2d"(%1057, %arg112, %1058) <{dilation = array<i32: 1, 1>, groups = 512 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x512xbf16>, tensor<512x1x2x2xbf16>, tensor<1x39x39x512xbf16>) -> tensor<1x39x39x512xbf16> loc(#loc393)
    %1060 = ttir.empty() : tensor<1x39x512x39xbf16> loc(#loc394)
    %1061 = "ttir.transpose"(%1059, %1060) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x39x39x512xbf16>, tensor<1x39x512x39xbf16>) -> tensor<1x39x512x39xbf16> loc(#loc394)
    %1062 = ttir.empty() : tensor<1x512x39x39xbf16> loc(#loc395)
    %1063 = "ttir.transpose"(%1061, %1062) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x39x512x39xbf16>, tensor<1x512x39x39xbf16>) -> tensor<1x512x39x39xbf16> loc(#loc395)
    %1064 = ttir.empty() : tensor<1x256x39x39xbf16> loc(#loc396)
    %1065 = "ttir.index"(%1063, %1064) <{begin = 0 : i32, dim = 1 : i32, end = 256 : i32, step = 1 : i32}> : (tensor<1x512x39x39xbf16>, tensor<1x256x39x39xbf16>) -> tensor<1x256x39x39xbf16> loc(#loc396)
    %1066 = ttir.empty() : tensor<1x39x256x39xbf16> loc(#loc782)
    %1067 = "ttir.transpose"(%1065, %1066) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x39x39xbf16>, tensor<1x39x256x39xbf16>) -> tensor<1x39x256x39xbf16> loc(#loc782)
    %1068 = ttir.empty() : tensor<1x39x39x256xbf16> loc(#loc783)
    %1069 = "ttir.transpose"(%1067, %1068) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x39x256x39xbf16>, tensor<1x39x39x256xbf16>) -> tensor<1x39x39x256xbf16> loc(#loc783)
    %1070 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc784)
    %1071 = "ttir.conv2d"(%1069, %arg372, %1070) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 2, 2>}> {channel_last = 1 : si32} : (tensor<1x39x39x256xbf16>, tensor<256x256x3x3xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc784)
    %1072 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc785)
    %1073 = "ttir.transpose"(%1071, %1072) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x256xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc785)
    %1074 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc786)
    %1075 = "ttir.transpose"(%1073, %1074) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc786)
    %1076 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc110)
    %1077 = "ttir.multiply"(%1075, %arg113, %1076) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc110)
    %1078 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc111)
    %1079 = "ttir.add"(%1077, %arg114, %1078) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc111)
    %1080 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc573)
    %1081 = "ttir.sigmoid"(%1079, %1080) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc573)
    %1082 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc574)
    %1083 = "ttir.multiply"(%1079, %1081, %1082) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc574)
    %1084 = ttir.empty() : tensor<1x256x39x39xbf16> loc(#loc398)
    %1085 = "ttir.index"(%1063, %1084) <{begin = 256 : i32, dim = 1 : i32, end = 512 : i32, step = 1 : i32}> : (tensor<1x512x39x39xbf16>, tensor<1x256x39x39xbf16>) -> tensor<1x256x39x39xbf16> loc(#loc398)
    %1086 = ttir.empty() : tensor<1x39x256x39xbf16> loc(#loc399)
    %1087 = "ttir.transpose"(%1085, %1086) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x39x39xbf16>, tensor<1x39x256x39xbf16>) -> tensor<1x39x256x39xbf16> loc(#loc399)
    %1088 = ttir.empty() : tensor<1x39x39x256xbf16> loc(#loc400)
    %1089 = "ttir.transpose"(%1087, %1088) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x39x256x39xbf16>, tensor<1x39x39x256xbf16>) -> tensor<1x39x39x256xbf16> loc(#loc400)
    %1090 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc401)
    %1091 = "ttir.max_pool2d"(%1089, %1090) <{ceil_mode = false, dilation_height = 1 : si32, dilation_width = 1 : si32, kernel_height = 3 : si32, kernel_width = 3 : si32, padding_bottom = 1 : si32, padding_left = 1 : si32, padding_right = 1 : si32, padding_top = 1 : si32, stride_height = 2 : si32, stride_width = 2 : si32}> {channel_last = true} : (tensor<1x39x39x256xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc401)
    %1092 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc402)
    %1093 = "ttir.transpose"(%1091, %1092) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x256xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc402)
    %1094 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc403)
    %1095 = "ttir.transpose"(%1093, %1094) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc403)
    %1096 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc787)
    %1097 = "ttir.transpose"(%1095, %1096) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x20x20xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc787)
    %1098 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc788)
    %1099 = "ttir.transpose"(%1097, %1098) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc788)
    %1100 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc789)
    %1101 = "ttir.conv2d"(%1099, %arg373, %1100) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x256xbf16>, tensor<256x256x1x1xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc789)
    %1102 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc790)
    %1103 = "ttir.transpose"(%1101, %1102) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x256xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc790)
    %1104 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc791)
    %1105 = "ttir.transpose"(%1103, %1104) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc791)
    %1106 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc112)
    %1107 = "ttir.multiply"(%1105, %arg115, %1106) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc112)
    %1108 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc113)
    %1109 = "ttir.add"(%1107, %arg116, %1108) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc113)
    %1110 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc576)
    %1111 = "ttir.sigmoid"(%1109, %1110) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc576)
    %1112 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc577)
    %1113 = "ttir.multiply"(%1109, %1111, %1112) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc577)
    %1114 = ttir.empty() : tensor<1x512x20x20xbf16> loc(#loc405)
    %1115 = "ttir.concat"(%1083, %1113, %1114) <{dim = -3 : si32}> : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>, tensor<1x512x20x20xbf16>) -> tensor<1x512x20x20xbf16> loc(#loc405)
    %1116 = ttir.empty() : tensor<1x20x512x20xbf16> loc(#loc792)
    %1117 = "ttir.transpose"(%1115, %1116) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x512x20x20xbf16>, tensor<1x20x512x20xbf16>) -> tensor<1x20x512x20xbf16> loc(#loc792)
    %1118 = ttir.empty() : tensor<1x20x20x512xbf16> loc(#loc793)
    %1119 = "ttir.transpose"(%1117, %1118) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x512x20xbf16>, tensor<1x20x20x512xbf16>) -> tensor<1x20x20x512xbf16> loc(#loc793)
    %1120 = ttir.empty() : tensor<1x20x20x512xbf16> loc(#loc794)
    %1121 = "ttir.conv2d"(%1119, %arg374, %1120) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x512xbf16>, tensor<512x512x1x1xbf16>, tensor<1x20x20x512xbf16>) -> tensor<1x20x20x512xbf16> loc(#loc794)
    %1122 = ttir.empty() : tensor<1x20x512x20xbf16> loc(#loc795)
    %1123 = "ttir.transpose"(%1121, %1122) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x512xbf16>, tensor<1x20x512x20xbf16>) -> tensor<1x20x512x20xbf16> loc(#loc795)
    %1124 = ttir.empty() : tensor<1x512x20x20xbf16> loc(#loc796)
    %1125 = "ttir.transpose"(%1123, %1124) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x512x20xbf16>, tensor<1x512x20x20xbf16>) -> tensor<1x512x20x20xbf16> loc(#loc796)
    %1126 = ttir.empty() : tensor<1x512x20x20xbf16> loc(#loc114)
    %1127 = "ttir.multiply"(%1125, %arg117, %1126) : (tensor<1x512x20x20xbf16>, tensor<1x512x1x1xbf16>, tensor<1x512x20x20xbf16>) -> tensor<1x512x20x20xbf16> loc(#loc114)
    %1128 = ttir.empty() : tensor<1x512x20x20xbf16> loc(#loc115)
    %1129 = "ttir.add"(%1127, %arg118, %1128) : (tensor<1x512x20x20xbf16>, tensor<1x512x1x1xbf16>, tensor<1x512x20x20xbf16>) -> tensor<1x512x20x20xbf16> loc(#loc115)
    %1130 = ttir.empty() : tensor<1x512x20x20xbf16> loc(#loc579)
    %1131 = "ttir.sigmoid"(%1129, %1130) : (tensor<1x512x20x20xbf16>, tensor<1x512x20x20xbf16>) -> tensor<1x512x20x20xbf16> loc(#loc579)
    %1132 = ttir.empty() : tensor<1x512x20x20xbf16> loc(#loc580)
    %1133 = "ttir.multiply"(%1129, %1131, %1132) : (tensor<1x512x20x20xbf16>, tensor<1x512x20x20xbf16>, tensor<1x512x20x20xbf16>) -> tensor<1x512x20x20xbf16> loc(#loc580)
    %1134 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc407)
    %1135 = "ttir.index"(%1133, %1134) <{begin = 0 : i32, dim = 1 : i32, end = 256 : i32, step = 1 : i32}> : (tensor<1x512x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc407)
    %1136 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc408)
    %1137 = "ttir.index"(%1133, %1136) <{begin = 256 : i32, dim = 1 : i32, end = 512 : i32, step = 1 : i32}> : (tensor<1x512x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc408)
    %1138 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc1431)
    %1139 = "ttir.transpose"(%1137, %1138) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x20x20xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc1431)
    %1140 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc1432)
    %1141 = "ttir.transpose"(%1139, %1140) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc1432)
    %1142 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc1433)
    %1143 = "ttir.conv2d"(%1141, %arg375, %1142) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x256xbf16>, tensor<128x256x1x1xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc1433)
    %1144 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc1434)
    %1145 = "ttir.transpose"(%1143, %1144) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x128xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc1434)
    %1146 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1435)
    %1147 = "ttir.transpose"(%1145, %1146) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1435)
    %1148 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc116)
    %1149 = "ttir.multiply"(%1147, %arg119, %1148) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc116)
    %1150 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc117)
    %1151 = "ttir.add"(%1149, %arg120, %1150) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc117)
    %1152 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1114)
    %1153 = "ttir.sigmoid"(%1151, %1152) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1114)
    %1154 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1115)
    %1155 = "ttir.multiply"(%1151, %1153, %1154) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1115)
    %1156 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc1912)
    %1157 = "ttir.transpose"(%1155, %1156) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x20x20xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc1912)
    %1158 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc1913)
    %1159 = "ttir.transpose"(%1157, %1158) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc1913)
    %1160 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc1914)
    %1161 = "ttir.conv2d"(%1159, %arg376, %1160) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x128xbf16>, tensor<128x128x3x3xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc1914)
    %1162 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc1915)
    %1163 = "ttir.transpose"(%1161, %1162) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x128xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc1915)
    %1164 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1916)
    %1165 = "ttir.transpose"(%1163, %1164) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1916)
    %1166 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc118)
    %1167 = "ttir.multiply"(%1165, %arg121, %1166) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc118)
    %1168 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc119)
    %1169 = "ttir.add"(%1167, %arg122, %1168) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc119)
    %1170 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc1917)
    %1171 = "ttir.transpose"(%1155, %1170) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x20x20xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc1917)
    %1172 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc1918)
    %1173 = "ttir.transpose"(%1171, %1172) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc1918)
    %1174 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc1919)
    %1175 = "ttir.conv2d"(%1173, %arg377, %1174) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x128xbf16>, tensor<128x128x1x1xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc1919)
    %1176 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc1920)
    %1177 = "ttir.transpose"(%1175, %1176) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x128xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc1920)
    %1178 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1921)
    %1179 = "ttir.transpose"(%1177, %1178) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1921)
    %1180 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc120)
    %1181 = "ttir.multiply"(%1179, %arg123, %1180) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc120)
    %1182 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc121)
    %1183 = "ttir.add"(%1181, %arg124, %1182) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc121)
    %1184 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1660)
    %1185 = "ttir.add"(%1169, %1183, %1184) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1660)
    %1186 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1661)
    %1187 = "ttir.sigmoid"(%1185, %1186) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1661)
    %1188 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1662)
    %1189 = "ttir.multiply"(%1185, %1187, %1188) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1662)
    %1190 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc1784)
    %1191 = "ttir.transpose"(%1189, %1190) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x20x20xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc1784)
    %1192 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc1785)
    %1193 = "ttir.transpose"(%1191, %1192) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc1785)
    %1194 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc1786)
    %1195 = "ttir.conv2d"(%1193, %arg378, %1194) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x128xbf16>, tensor<128x128x3x3xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc1786)
    %1196 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc1787)
    %1197 = "ttir.transpose"(%1195, %1196) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x128xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc1787)
    %1198 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1788)
    %1199 = "ttir.transpose"(%1197, %1198) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1788)
    %1200 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc122)
    %1201 = "ttir.multiply"(%1199, %arg125, %1200) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc122)
    %1202 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc123)
    %1203 = "ttir.add"(%1201, %arg126, %1202) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc123)
    %1204 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1664)
    %1205 = "ttir.sigmoid"(%1203, %1204) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1664)
    %1206 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1665)
    %1207 = "ttir.multiply"(%1203, %1205, %1206) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1665)
    %1208 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1438)
    %1209 = "ttir.add"(%1155, %1207, %1208) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1438)
    %1210 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc1439)
    %1211 = "ttir.transpose"(%1137, %1210) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x20x20xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc1439)
    %1212 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc1440)
    %1213 = "ttir.transpose"(%1211, %1212) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc1440)
    %1214 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc1441)
    %1215 = "ttir.conv2d"(%1213, %arg379, %1214) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x256xbf16>, tensor<128x256x1x1xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc1441)
    %1216 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc1442)
    %1217 = "ttir.transpose"(%1215, %1216) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x128xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc1442)
    %1218 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1443)
    %1219 = "ttir.transpose"(%1217, %1218) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1443)
    %1220 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc124)
    %1221 = "ttir.multiply"(%1219, %arg127, %1220) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc124)
    %1222 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc125)
    %1223 = "ttir.add"(%1221, %arg128, %1222) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc125)
    %1224 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1118)
    %1225 = "ttir.sigmoid"(%1223, %1224) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1118)
    %1226 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1119)
    %1227 = "ttir.multiply"(%1223, %1225, %1226) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1119)
    %1228 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc800)
    %1229 = "ttir.concat"(%1209, %1227, %1228) <{dim = -3 : si32}> : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc800)
    %1230 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc1444)
    %1231 = "ttir.transpose"(%1229, %1230) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x20x20xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc1444)
    %1232 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc1445)
    %1233 = "ttir.transpose"(%1231, %1232) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc1445)
    %1234 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc1446)
    %1235 = "ttir.conv2d"(%1233, %arg380, %1234) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x256xbf16>, tensor<256x256x1x1xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc1446)
    %1236 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc1447)
    %1237 = "ttir.transpose"(%1235, %1236) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x256xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc1447)
    %1238 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc1448)
    %1239 = "ttir.transpose"(%1237, %1238) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc1448)
    %1240 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc126)
    %1241 = "ttir.multiply"(%1239, %arg129, %1240) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc126)
    %1242 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc127)
    %1243 = "ttir.add"(%1241, %arg130, %1242) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc127)
    %1244 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc1121)
    %1245 = "ttir.sigmoid"(%1243, %1244) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc1121)
    %1246 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc1122)
    %1247 = "ttir.multiply"(%1243, %1245, %1246) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc1122)
    %1248 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc1123)
    %1249 = "ttir.transpose"(%1247, %1248) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x20x20xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc1123)
    %1250 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc1124)
    %1251 = "ttir.transpose"(%1249, %1250) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc1124)
    %1252 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc1125)
    %1253 = "ttir.conv2d"(%1251, %arg381, %1252) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x256xbf16>, tensor<256x256x3x3xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc1125)
    %1254 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc1126)
    %1255 = "ttir.transpose"(%1253, %1254) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x256xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc1126)
    %1256 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc1127)
    %1257 = "ttir.transpose"(%1255, %1256) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc1127)
    %1258 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc128)
    %1259 = "ttir.multiply"(%1257, %arg131, %1258) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc128)
    %1260 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc129)
    %1261 = "ttir.add"(%1259, %arg132, %1260) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc129)
    %1262 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc803)
    %1263 = "ttir.sigmoid"(%1261, %1262) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc803)
    %1264 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc804)
    %1265 = "ttir.multiply"(%1261, %1263, %1264) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc804)
    %1266 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc1449)
    %1267 = "ttir.transpose"(%1265, %1266) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x20x20xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc1449)
    %1268 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc1450)
    %1269 = "ttir.transpose"(%1267, %1268) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc1450)
    %1270 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc1451)
    %1271 = "ttir.conv2d"(%1269, %arg382, %1270) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x256xbf16>, tensor<128x256x1x1xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc1451)
    %1272 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc1452)
    %1273 = "ttir.transpose"(%1271, %1272) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x128xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc1452)
    %1274 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1453)
    %1275 = "ttir.transpose"(%1273, %1274) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1453)
    %1276 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc130)
    %1277 = "ttir.multiply"(%1275, %arg133, %1276) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc130)
    %1278 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc131)
    %1279 = "ttir.add"(%1277, %arg134, %1278) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc131)
    %1280 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1129)
    %1281 = "ttir.sigmoid"(%1279, %1280) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1129)
    %1282 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1130)
    %1283 = "ttir.multiply"(%1279, %1281, %1282) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1130)
    %1284 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc1922)
    %1285 = "ttir.transpose"(%1283, %1284) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x20x20xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc1922)
    %1286 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc1923)
    %1287 = "ttir.transpose"(%1285, %1286) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc1923)
    %1288 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc1924)
    %1289 = "ttir.conv2d"(%1287, %arg383, %1288) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x128xbf16>, tensor<128x128x3x3xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc1924)
    %1290 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc1925)
    %1291 = "ttir.transpose"(%1289, %1290) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x128xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc1925)
    %1292 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1926)
    %1293 = "ttir.transpose"(%1291, %1292) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1926)
    %1294 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc132)
    %1295 = "ttir.multiply"(%1293, %arg135, %1294) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc132)
    %1296 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc133)
    %1297 = "ttir.add"(%1295, %arg136, %1296) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc133)
    %1298 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc1927)
    %1299 = "ttir.transpose"(%1283, %1298) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x20x20xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc1927)
    %1300 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc1928)
    %1301 = "ttir.transpose"(%1299, %1300) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc1928)
    %1302 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc1929)
    %1303 = "ttir.conv2d"(%1301, %arg384, %1302) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x128xbf16>, tensor<128x128x1x1xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc1929)
    %1304 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc1930)
    %1305 = "ttir.transpose"(%1303, %1304) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x128xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc1930)
    %1306 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1931)
    %1307 = "ttir.transpose"(%1305, %1306) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1931)
    %1308 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc134)
    %1309 = "ttir.multiply"(%1307, %arg137, %1308) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc134)
    %1310 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc135)
    %1311 = "ttir.add"(%1309, %arg138, %1310) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc135)
    %1312 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1668)
    %1313 = "ttir.add"(%1297, %1311, %1312) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1668)
    %1314 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1669)
    %1315 = "ttir.sigmoid"(%1313, %1314) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1669)
    %1316 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1670)
    %1317 = "ttir.multiply"(%1313, %1315, %1316) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1670)
    %1318 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc1791)
    %1319 = "ttir.transpose"(%1317, %1318) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x20x20xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc1791)
    %1320 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc1792)
    %1321 = "ttir.transpose"(%1319, %1320) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc1792)
    %1322 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc1793)
    %1323 = "ttir.conv2d"(%1321, %arg385, %1322) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x128xbf16>, tensor<128x128x3x3xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc1793)
    %1324 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc1794)
    %1325 = "ttir.transpose"(%1323, %1324) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x128xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc1794)
    %1326 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1795)
    %1327 = "ttir.transpose"(%1325, %1326) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1795)
    %1328 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc136)
    %1329 = "ttir.multiply"(%1327, %arg139, %1328) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc136)
    %1330 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc137)
    %1331 = "ttir.add"(%1329, %arg140, %1330) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc137)
    %1332 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1672)
    %1333 = "ttir.sigmoid"(%1331, %1332) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1672)
    %1334 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1673)
    %1335 = "ttir.multiply"(%1331, %1333, %1334) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1673)
    %1336 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1456)
    %1337 = "ttir.add"(%1283, %1335, %1336) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1456)
    %1338 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc1457)
    %1339 = "ttir.transpose"(%1265, %1338) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x20x20xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc1457)
    %1340 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc1458)
    %1341 = "ttir.transpose"(%1339, %1340) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc1458)
    %1342 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc1459)
    %1343 = "ttir.conv2d"(%1341, %arg386, %1342) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x256xbf16>, tensor<128x256x1x1xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc1459)
    %1344 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc1460)
    %1345 = "ttir.transpose"(%1343, %1344) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x128xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc1460)
    %1346 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1461)
    %1347 = "ttir.transpose"(%1345, %1346) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1461)
    %1348 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc138)
    %1349 = "ttir.multiply"(%1347, %arg141, %1348) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc138)
    %1350 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc139)
    %1351 = "ttir.add"(%1349, %arg142, %1350) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc139)
    %1352 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1133)
    %1353 = "ttir.sigmoid"(%1351, %1352) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1133)
    %1354 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1134)
    %1355 = "ttir.multiply"(%1351, %1353, %1354) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1134)
    %1356 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc808)
    %1357 = "ttir.concat"(%1337, %1355, %1356) <{dim = -3 : si32}> : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc808)
    %1358 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc1462)
    %1359 = "ttir.transpose"(%1357, %1358) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x20x20xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc1462)
    %1360 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc1463)
    %1361 = "ttir.transpose"(%1359, %1360) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc1463)
    %1362 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc1464)
    %1363 = "ttir.conv2d"(%1361, %arg387, %1362) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x256xbf16>, tensor<256x256x1x1xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc1464)
    %1364 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc1465)
    %1365 = "ttir.transpose"(%1363, %1364) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x256xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc1465)
    %1366 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc1466)
    %1367 = "ttir.transpose"(%1365, %1366) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc1466)
    %1368 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc140)
    %1369 = "ttir.multiply"(%1367, %arg143, %1368) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc140)
    %1370 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc141)
    %1371 = "ttir.add"(%1369, %arg144, %1370) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc141)
    %1372 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc1136)
    %1373 = "ttir.sigmoid"(%1371, %1372) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc1136)
    %1374 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc1137)
    %1375 = "ttir.multiply"(%1371, %1373, %1374) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc1137)
    %1376 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc1138)
    %1377 = "ttir.transpose"(%1375, %1376) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x20x20xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc1138)
    %1378 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc1139)
    %1379 = "ttir.transpose"(%1377, %1378) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc1139)
    %1380 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc1140)
    %1381 = "ttir.conv2d"(%1379, %arg388, %1380) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x256xbf16>, tensor<256x256x3x3xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc1140)
    %1382 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc1141)
    %1383 = "ttir.transpose"(%1381, %1382) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x256xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc1141)
    %1384 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc1142)
    %1385 = "ttir.transpose"(%1383, %1384) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc1142)
    %1386 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc142)
    %1387 = "ttir.multiply"(%1385, %arg145, %1386) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc142)
    %1388 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc143)
    %1389 = "ttir.add"(%1387, %arg146, %1388) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc143)
    %1390 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc811)
    %1391 = "ttir.sigmoid"(%1389, %1390) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc811)
    %1392 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc812)
    %1393 = "ttir.multiply"(%1389, %1391, %1392) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc812)
    %1394 = ttir.empty() : tensor<1x1024x20x20xbf16> loc(#loc411)
    %1395 = "ttir.concat"(%1135, %1137, %1265, %1393, %1394) <{dim = -3 : si32}> : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>, tensor<1x1024x20x20xbf16>) -> tensor<1x1024x20x20xbf16> loc(#loc411)
    %1396 = ttir.empty() : tensor<1x20x1024x20xbf16> loc(#loc813)
    %1397 = "ttir.transpose"(%1395, %1396) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x1024x20x20xbf16>, tensor<1x20x1024x20xbf16>) -> tensor<1x20x1024x20xbf16> loc(#loc813)
    %1398 = ttir.empty() : tensor<1x20x20x1024xbf16> loc(#loc814)
    %1399 = "ttir.transpose"(%1397, %1398) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x1024x20xbf16>, tensor<1x20x20x1024xbf16>) -> tensor<1x20x20x1024xbf16> loc(#loc814)
    %1400 = ttir.empty() : tensor<1x20x20x512xbf16> loc(#loc815)
    %1401 = "ttir.conv2d"(%1399, %arg389, %1400) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x1024xbf16>, tensor<512x1024x1x1xbf16>, tensor<1x20x20x512xbf16>) -> tensor<1x20x20x512xbf16> loc(#loc815)
    %1402 = ttir.empty() : tensor<1x20x512x20xbf16> loc(#loc816)
    %1403 = "ttir.transpose"(%1401, %1402) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x512xbf16>, tensor<1x20x512x20xbf16>) -> tensor<1x20x512x20xbf16> loc(#loc816)
    %1404 = ttir.empty() : tensor<1x512x20x20xbf16> loc(#loc817)
    %1405 = "ttir.transpose"(%1403, %1404) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x512x20xbf16>, tensor<1x512x20x20xbf16>) -> tensor<1x512x20x20xbf16> loc(#loc817)
    %1406 = ttir.empty() : tensor<1x512x20x20xbf16> loc(#loc144)
    %1407 = "ttir.multiply"(%1405, %arg147, %1406) : (tensor<1x512x20x20xbf16>, tensor<1x512x1x1xbf16>, tensor<1x512x20x20xbf16>) -> tensor<1x512x20x20xbf16> loc(#loc144)
    %1408 = ttir.empty() : tensor<1x512x20x20xbf16> loc(#loc145)
    %1409 = "ttir.add"(%1407, %arg148, %1408) : (tensor<1x512x20x20xbf16>, tensor<1x512x1x1xbf16>, tensor<1x512x20x20xbf16>) -> tensor<1x512x20x20xbf16> loc(#loc145)
    %1410 = ttir.empty() : tensor<1x512x20x20xbf16> loc(#loc586)
    %1411 = "ttir.sigmoid"(%1409, %1410) : (tensor<1x512x20x20xbf16>, tensor<1x512x20x20xbf16>) -> tensor<1x512x20x20xbf16> loc(#loc586)
    %1412 = ttir.empty() : tensor<1x512x20x20xbf16> loc(#loc587)
    %1413 = "ttir.multiply"(%1409, %1411, %1412) : (tensor<1x512x20x20xbf16>, tensor<1x512x20x20xbf16>, tensor<1x512x20x20xbf16>) -> tensor<1x512x20x20xbf16> loc(#loc587)
    %1414 = ttir.empty() : tensor<1x20x512x20xbf16> loc(#loc818)
    %1415 = "ttir.transpose"(%1413, %1414) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x512x20x20xbf16>, tensor<1x20x512x20xbf16>) -> tensor<1x20x512x20xbf16> loc(#loc818)
    %1416 = ttir.empty() : tensor<1x20x20x512xbf16> loc(#loc819)
    %1417 = "ttir.transpose"(%1415, %1416) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x512x20xbf16>, tensor<1x20x20x512xbf16>) -> tensor<1x20x20x512xbf16> loc(#loc819)
    %1418 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc820)
    %1419 = "ttir.conv2d"(%1417, %arg390, %1418) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x512xbf16>, tensor<256x512x1x1xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc820)
    %1420 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc821)
    %1421 = "ttir.transpose"(%1419, %1420) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x256xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc821)
    %1422 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc822)
    %1423 = "ttir.transpose"(%1421, %1422) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc822)
    %1424 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc146)
    %1425 = "ttir.multiply"(%1423, %arg149, %1424) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc146)
    %1426 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc147)
    %1427 = "ttir.add"(%1425, %arg150, %1426) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc147)
    %1428 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc589)
    %1429 = "ttir.sigmoid"(%1427, %1428) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc589)
    %1430 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc590)
    %1431 = "ttir.multiply"(%1427, %1429, %1430) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc590)
    %1432 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc591)
    %1433 = "ttir.transpose"(%1431, %1432) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x20x20xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc591)
    %1434 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc592)
    %1435 = "ttir.transpose"(%1433, %1434) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc592)
    %1436 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc593)
    %1437 = "ttir.max_pool2d"(%1435, %1436) <{ceil_mode = false, dilation_height = 1 : si32, dilation_width = 1 : si32, kernel_height = 5 : si32, kernel_width = 5 : si32, padding_bottom = 2 : si32, padding_left = 2 : si32, padding_right = 2 : si32, padding_top = 2 : si32, stride_height = 1 : si32, stride_width = 1 : si32}> {channel_last = true} : (tensor<1x20x20x256xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc593)
    %1438 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc594)
    %1439 = "ttir.transpose"(%1437, %1438) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x256xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc594)
    %1440 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc595)
    %1441 = "ttir.transpose"(%1439, %1440) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc595)
    %1442 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc596)
    %1443 = "ttir.transpose"(%1441, %1442) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x20x20xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc596)
    %1444 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc597)
    %1445 = "ttir.transpose"(%1443, %1444) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc597)
    %1446 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc598)
    %1447 = "ttir.max_pool2d"(%1445, %1446) <{ceil_mode = false, dilation_height = 1 : si32, dilation_width = 1 : si32, kernel_height = 5 : si32, kernel_width = 5 : si32, padding_bottom = 2 : si32, padding_left = 2 : si32, padding_right = 2 : si32, padding_top = 2 : si32, stride_height = 1 : si32, stride_width = 1 : si32}> {channel_last = true} : (tensor<1x20x20x256xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc598)
    %1448 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc599)
    %1449 = "ttir.transpose"(%1447, %1448) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x256xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc599)
    %1450 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc600)
    %1451 = "ttir.transpose"(%1449, %1450) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc600)
    %1452 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc601)
    %1453 = "ttir.transpose"(%1451, %1452) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x20x20xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc601)
    %1454 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc602)
    %1455 = "ttir.transpose"(%1453, %1454) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc602)
    %1456 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc603)
    %1457 = "ttir.max_pool2d"(%1455, %1456) <{ceil_mode = false, dilation_height = 1 : si32, dilation_width = 1 : si32, kernel_height = 5 : si32, kernel_width = 5 : si32, padding_bottom = 2 : si32, padding_left = 2 : si32, padding_right = 2 : si32, padding_top = 2 : si32, stride_height = 1 : si32, stride_width = 1 : si32}> {channel_last = true} : (tensor<1x20x20x256xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc603)
    %1458 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc604)
    %1459 = "ttir.transpose"(%1457, %1458) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x256xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc604)
    %1460 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc605)
    %1461 = "ttir.transpose"(%1459, %1460) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc605)
    %1462 = ttir.empty() : tensor<1x1024x20x20xbf16> loc(#loc417)
    %1463 = "ttir.concat"(%1431, %1441, %1451, %1461, %1462) <{dim = -3 : si32}> : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>, tensor<1x1024x20x20xbf16>) -> tensor<1x1024x20x20xbf16> loc(#loc417)
    %1464 = ttir.empty() : tensor<1x20x1024x20xbf16> loc(#loc823)
    %1465 = "ttir.transpose"(%1463, %1464) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x1024x20x20xbf16>, tensor<1x20x1024x20xbf16>) -> tensor<1x20x1024x20xbf16> loc(#loc823)
    %1466 = ttir.empty() : tensor<1x20x20x1024xbf16> loc(#loc824)
    %1467 = "ttir.transpose"(%1465, %1466) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x1024x20xbf16>, tensor<1x20x20x1024xbf16>) -> tensor<1x20x20x1024xbf16> loc(#loc824)
    %1468 = ttir.empty() : tensor<1x20x20x512xbf16> loc(#loc825)
    %1469 = "ttir.conv2d"(%1467, %arg391, %1468) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x1024xbf16>, tensor<512x1024x1x1xbf16>, tensor<1x20x20x512xbf16>) -> tensor<1x20x20x512xbf16> loc(#loc825)
    %1470 = ttir.empty() : tensor<1x20x512x20xbf16> loc(#loc826)
    %1471 = "ttir.transpose"(%1469, %1470) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x512xbf16>, tensor<1x20x512x20xbf16>) -> tensor<1x20x512x20xbf16> loc(#loc826)
    %1472 = ttir.empty() : tensor<1x512x20x20xbf16> loc(#loc827)
    %1473 = "ttir.transpose"(%1471, %1472) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x512x20xbf16>, tensor<1x512x20x20xbf16>) -> tensor<1x512x20x20xbf16> loc(#loc827)
    %1474 = ttir.empty() : tensor<1x512x20x20xbf16> loc(#loc148)
    %1475 = "ttir.multiply"(%1473, %arg151, %1474) : (tensor<1x512x20x20xbf16>, tensor<1x512x1x1xbf16>, tensor<1x512x20x20xbf16>) -> tensor<1x512x20x20xbf16> loc(#loc148)
    %1476 = ttir.empty() : tensor<1x512x20x20xbf16> loc(#loc149)
    %1477 = "ttir.add"(%1475, %arg152, %1476) : (tensor<1x512x20x20xbf16>, tensor<1x512x1x1xbf16>, tensor<1x512x20x20xbf16>) -> tensor<1x512x20x20xbf16> loc(#loc149)
    %1478 = ttir.empty() : tensor<1x512x20x20xbf16> loc(#loc607)
    %1479 = "ttir.sigmoid"(%1477, %1478) : (tensor<1x512x20x20xbf16>, tensor<1x512x20x20xbf16>) -> tensor<1x512x20x20xbf16> loc(#loc607)
    %1480 = ttir.empty() : tensor<1x512x20x20xbf16> loc(#loc608)
    %1481 = "ttir.multiply"(%1477, %1479, %1480) : (tensor<1x512x20x20xbf16>, tensor<1x512x20x20xbf16>, tensor<1x512x20x20xbf16>) -> tensor<1x512x20x20xbf16> loc(#loc608)
    %1482 = ttir.empty() : tensor<1x20x512x20xbf16> loc(#loc419)
    %1483 = "ttir.transpose"(%1481, %1482) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x512x20x20xbf16>, tensor<1x20x512x20xbf16>) -> tensor<1x20x512x20xbf16> loc(#loc419)
    %1484 = ttir.empty() : tensor<1x20x20x512xbf16> loc(#loc420)
    %1485 = "ttir.transpose"(%1483, %1484) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x512x20xbf16>, tensor<1x20x20x512xbf16>) -> tensor<1x20x20x512xbf16> loc(#loc420)
    %1486 = ttir.empty() : tensor<1x40x40x512xbf16> loc(#loc421)
    %1487 = "ttir.upsample2d"(%1485, %1486) <{mode = "nearest", scale_factor = 2 : si32}> {channel_last = true} : (tensor<1x20x20x512xbf16>, tensor<1x40x40x512xbf16>) -> tensor<1x40x40x512xbf16> loc(#loc421)
    %1488 = ttir.empty() : tensor<1x40x512x40xbf16> loc(#loc422)
    %1489 = "ttir.transpose"(%1487, %1488) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x512xbf16>, tensor<1x40x512x40xbf16>) -> tensor<1x40x512x40xbf16> loc(#loc422)
    %1490 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc423)
    %1491 = "ttir.transpose"(%1489, %1490) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x512x40xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc423)
    %1492 = ttir.empty() : tensor<1x1024x40x40xbf16> loc(#loc424)
    %1493 = "ttir.concat"(%1491, %1053, %1492) <{dim = -3 : si32}> : (tensor<1x512x40x40xbf16>, tensor<1x512x40x40xbf16>, tensor<1x1024x40x40xbf16>) -> tensor<1x1024x40x40xbf16> loc(#loc424)
    %1494 = ttir.empty() : tensor<1x40x1024x40xbf16> loc(#loc828)
    %1495 = "ttir.transpose"(%1493, %1494) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x1024x40x40xbf16>, tensor<1x40x1024x40xbf16>) -> tensor<1x40x1024x40xbf16> loc(#loc828)
    %1496 = ttir.empty() : tensor<1x40x40x1024xbf16> loc(#loc829)
    %1497 = "ttir.transpose"(%1495, %1496) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x1024x40xbf16>, tensor<1x40x40x1024xbf16>) -> tensor<1x40x40x1024xbf16> loc(#loc829)
    %1498 = ttir.empty() : tensor<1x40x40x512xbf16> loc(#loc830)
    %1499 = "ttir.conv2d"(%1497, %arg392, %1498) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x1024xbf16>, tensor<512x1024x1x1xbf16>, tensor<1x40x40x512xbf16>) -> tensor<1x40x40x512xbf16> loc(#loc830)
    %1500 = ttir.empty() : tensor<1x40x512x40xbf16> loc(#loc831)
    %1501 = "ttir.transpose"(%1499, %1500) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x512xbf16>, tensor<1x40x512x40xbf16>) -> tensor<1x40x512x40xbf16> loc(#loc831)
    %1502 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc832)
    %1503 = "ttir.transpose"(%1501, %1502) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x512x40xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc832)
    %1504 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc150)
    %1505 = "ttir.multiply"(%1503, %arg153, %1504) : (tensor<1x512x40x40xbf16>, tensor<1x512x1x1xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc150)
    %1506 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc151)
    %1507 = "ttir.add"(%1505, %arg154, %1506) : (tensor<1x512x40x40xbf16>, tensor<1x512x1x1xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc151)
    %1508 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc610)
    %1509 = "ttir.sigmoid"(%1507, %1508) : (tensor<1x512x40x40xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc610)
    %1510 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc611)
    %1511 = "ttir.multiply"(%1507, %1509, %1510) : (tensor<1x512x40x40xbf16>, tensor<1x512x40x40xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc611)
    %1512 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc426)
    %1513 = "ttir.index"(%1511, %1512) <{begin = 0 : i32, dim = 1 : i32, end = 256 : i32, step = 1 : i32}> : (tensor<1x512x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc426)
    %1514 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc427)
    %1515 = "ttir.index"(%1511, %1514) <{begin = 256 : i32, dim = 1 : i32, end = 512 : i32, step = 1 : i32}> : (tensor<1x512x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc427)
    %1516 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1467)
    %1517 = "ttir.transpose"(%1515, %1516) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1467)
    %1518 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1468)
    %1519 = "ttir.transpose"(%1517, %1518) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1468)
    %1520 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1469)
    %1521 = "ttir.conv2d"(%1519, %arg393, %1520) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x256xbf16>, tensor<128x256x1x1xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1469)
    %1522 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1470)
    %1523 = "ttir.transpose"(%1521, %1522) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1470)
    %1524 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1471)
    %1525 = "ttir.transpose"(%1523, %1524) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1471)
    %1526 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc152)
    %1527 = "ttir.multiply"(%1525, %arg155, %1526) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc152)
    %1528 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc153)
    %1529 = "ttir.add"(%1527, %arg156, %1528) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc153)
    %1530 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1144)
    %1531 = "ttir.sigmoid"(%1529, %1530) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1144)
    %1532 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1145)
    %1533 = "ttir.multiply"(%1529, %1531, %1532) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1145)
    %1534 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1932)
    %1535 = "ttir.transpose"(%1533, %1534) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x40x40xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1932)
    %1536 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1933)
    %1537 = "ttir.transpose"(%1535, %1536) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1933)
    %1538 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1934)
    %1539 = "ttir.conv2d"(%1537, %arg394, %1538) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x128xbf16>, tensor<128x128x3x3xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1934)
    %1540 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1935)
    %1541 = "ttir.transpose"(%1539, %1540) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1935)
    %1542 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1936)
    %1543 = "ttir.transpose"(%1541, %1542) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1936)
    %1544 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc154)
    %1545 = "ttir.multiply"(%1543, %arg157, %1544) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc154)
    %1546 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc155)
    %1547 = "ttir.add"(%1545, %arg158, %1546) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc155)
    %1548 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1937)
    %1549 = "ttir.transpose"(%1533, %1548) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x40x40xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1937)
    %1550 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1938)
    %1551 = "ttir.transpose"(%1549, %1550) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1938)
    %1552 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1939)
    %1553 = "ttir.conv2d"(%1551, %arg395, %1552) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x128xbf16>, tensor<128x128x1x1xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1939)
    %1554 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1940)
    %1555 = "ttir.transpose"(%1553, %1554) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1940)
    %1556 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1941)
    %1557 = "ttir.transpose"(%1555, %1556) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1941)
    %1558 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc156)
    %1559 = "ttir.multiply"(%1557, %arg159, %1558) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc156)
    %1560 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc157)
    %1561 = "ttir.add"(%1559, %arg160, %1560) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc157)
    %1562 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1676)
    %1563 = "ttir.add"(%1547, %1561, %1562) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1676)
    %1564 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1677)
    %1565 = "ttir.sigmoid"(%1563, %1564) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1677)
    %1566 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1678)
    %1567 = "ttir.multiply"(%1563, %1565, %1566) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1678)
    %1568 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1798)
    %1569 = "ttir.transpose"(%1567, %1568) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x40x40xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1798)
    %1570 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1799)
    %1571 = "ttir.transpose"(%1569, %1570) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1799)
    %1572 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1800)
    %1573 = "ttir.conv2d"(%1571, %arg396, %1572) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x128xbf16>, tensor<128x128x3x3xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1800)
    %1574 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1801)
    %1575 = "ttir.transpose"(%1573, %1574) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1801)
    %1576 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1802)
    %1577 = "ttir.transpose"(%1575, %1576) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1802)
    %1578 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc158)
    %1579 = "ttir.multiply"(%1577, %arg161, %1578) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc158)
    %1580 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc159)
    %1581 = "ttir.add"(%1579, %arg162, %1580) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc159)
    %1582 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1680)
    %1583 = "ttir.sigmoid"(%1581, %1582) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1680)
    %1584 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1681)
    %1585 = "ttir.multiply"(%1581, %1583, %1584) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1681)
    %1586 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1474)
    %1587 = "ttir.add"(%1533, %1585, %1586) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1474)
    %1588 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1475)
    %1589 = "ttir.transpose"(%1515, %1588) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1475)
    %1590 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1476)
    %1591 = "ttir.transpose"(%1589, %1590) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1476)
    %1592 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1477)
    %1593 = "ttir.conv2d"(%1591, %arg397, %1592) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x256xbf16>, tensor<128x256x1x1xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1477)
    %1594 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1478)
    %1595 = "ttir.transpose"(%1593, %1594) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1478)
    %1596 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1479)
    %1597 = "ttir.transpose"(%1595, %1596) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1479)
    %1598 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc160)
    %1599 = "ttir.multiply"(%1597, %arg163, %1598) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc160)
    %1600 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc161)
    %1601 = "ttir.add"(%1599, %arg164, %1600) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc161)
    %1602 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1148)
    %1603 = "ttir.sigmoid"(%1601, %1602) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1148)
    %1604 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1149)
    %1605 = "ttir.multiply"(%1601, %1603, %1604) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1149)
    %1606 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc836)
    %1607 = "ttir.concat"(%1587, %1605, %1606) <{dim = -3 : si32}> : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc836)
    %1608 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1480)
    %1609 = "ttir.transpose"(%1607, %1608) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1480)
    %1610 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1481)
    %1611 = "ttir.transpose"(%1609, %1610) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1481)
    %1612 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1482)
    %1613 = "ttir.conv2d"(%1611, %arg398, %1612) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x256xbf16>, tensor<256x256x1x1xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1482)
    %1614 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1483)
    %1615 = "ttir.transpose"(%1613, %1614) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x256xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1483)
    %1616 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc1484)
    %1617 = "ttir.transpose"(%1615, %1616) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc1484)
    %1618 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc162)
    %1619 = "ttir.multiply"(%1617, %arg165, %1618) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc162)
    %1620 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc163)
    %1621 = "ttir.add"(%1619, %arg166, %1620) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc163)
    %1622 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc1151)
    %1623 = "ttir.sigmoid"(%1621, %1622) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc1151)
    %1624 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc1152)
    %1625 = "ttir.multiply"(%1621, %1623, %1624) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc1152)
    %1626 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1153)
    %1627 = "ttir.transpose"(%1625, %1626) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1153)
    %1628 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1154)
    %1629 = "ttir.transpose"(%1627, %1628) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1154)
    %1630 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1155)
    %1631 = "ttir.conv2d"(%1629, %arg399, %1630) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x256xbf16>, tensor<256x256x3x3xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1155)
    %1632 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1156)
    %1633 = "ttir.transpose"(%1631, %1632) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x256xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1156)
    %1634 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc1157)
    %1635 = "ttir.transpose"(%1633, %1634) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc1157)
    %1636 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc164)
    %1637 = "ttir.multiply"(%1635, %arg167, %1636) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc164)
    %1638 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc165)
    %1639 = "ttir.add"(%1637, %arg168, %1638) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc165)
    %1640 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc839)
    %1641 = "ttir.sigmoid"(%1639, %1640) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc839)
    %1642 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc840)
    %1643 = "ttir.multiply"(%1639, %1641, %1642) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc840)
    %1644 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1485)
    %1645 = "ttir.transpose"(%1643, %1644) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1485)
    %1646 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1486)
    %1647 = "ttir.transpose"(%1645, %1646) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1486)
    %1648 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1487)
    %1649 = "ttir.conv2d"(%1647, %arg400, %1648) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x256xbf16>, tensor<128x256x1x1xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1487)
    %1650 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1488)
    %1651 = "ttir.transpose"(%1649, %1650) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1488)
    %1652 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1489)
    %1653 = "ttir.transpose"(%1651, %1652) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1489)
    %1654 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc166)
    %1655 = "ttir.multiply"(%1653, %arg169, %1654) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc166)
    %1656 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc167)
    %1657 = "ttir.add"(%1655, %arg170, %1656) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc167)
    %1658 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1159)
    %1659 = "ttir.sigmoid"(%1657, %1658) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1159)
    %1660 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1160)
    %1661 = "ttir.multiply"(%1657, %1659, %1660) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1160)
    %1662 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1942)
    %1663 = "ttir.transpose"(%1661, %1662) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x40x40xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1942)
    %1664 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1943)
    %1665 = "ttir.transpose"(%1663, %1664) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1943)
    %1666 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1944)
    %1667 = "ttir.conv2d"(%1665, %arg401, %1666) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x128xbf16>, tensor<128x128x3x3xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1944)
    %1668 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1945)
    %1669 = "ttir.transpose"(%1667, %1668) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1945)
    %1670 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1946)
    %1671 = "ttir.transpose"(%1669, %1670) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1946)
    %1672 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc168)
    %1673 = "ttir.multiply"(%1671, %arg171, %1672) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc168)
    %1674 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc169)
    %1675 = "ttir.add"(%1673, %arg172, %1674) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc169)
    %1676 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1947)
    %1677 = "ttir.transpose"(%1661, %1676) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x40x40xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1947)
    %1678 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1948)
    %1679 = "ttir.transpose"(%1677, %1678) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1948)
    %1680 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1949)
    %1681 = "ttir.conv2d"(%1679, %arg402, %1680) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x128xbf16>, tensor<128x128x1x1xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1949)
    %1682 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1950)
    %1683 = "ttir.transpose"(%1681, %1682) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1950)
    %1684 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1951)
    %1685 = "ttir.transpose"(%1683, %1684) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1951)
    %1686 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc170)
    %1687 = "ttir.multiply"(%1685, %arg173, %1686) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc170)
    %1688 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc171)
    %1689 = "ttir.add"(%1687, %arg174, %1688) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc171)
    %1690 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1684)
    %1691 = "ttir.add"(%1675, %1689, %1690) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1684)
    %1692 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1685)
    %1693 = "ttir.sigmoid"(%1691, %1692) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1685)
    %1694 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1686)
    %1695 = "ttir.multiply"(%1691, %1693, %1694) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1686)
    %1696 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1805)
    %1697 = "ttir.transpose"(%1695, %1696) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x40x40xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1805)
    %1698 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1806)
    %1699 = "ttir.transpose"(%1697, %1698) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1806)
    %1700 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1807)
    %1701 = "ttir.conv2d"(%1699, %arg403, %1700) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x128xbf16>, tensor<128x128x3x3xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1807)
    %1702 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1808)
    %1703 = "ttir.transpose"(%1701, %1702) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1808)
    %1704 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1809)
    %1705 = "ttir.transpose"(%1703, %1704) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1809)
    %1706 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc172)
    %1707 = "ttir.multiply"(%1705, %arg175, %1706) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc172)
    %1708 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc173)
    %1709 = "ttir.add"(%1707, %arg176, %1708) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc173)
    %1710 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1688)
    %1711 = "ttir.sigmoid"(%1709, %1710) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1688)
    %1712 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1689)
    %1713 = "ttir.multiply"(%1709, %1711, %1712) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1689)
    %1714 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1492)
    %1715 = "ttir.add"(%1661, %1713, %1714) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1492)
    %1716 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1493)
    %1717 = "ttir.transpose"(%1643, %1716) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1493)
    %1718 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1494)
    %1719 = "ttir.transpose"(%1717, %1718) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1494)
    %1720 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1495)
    %1721 = "ttir.conv2d"(%1719, %arg404, %1720) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x256xbf16>, tensor<128x256x1x1xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1495)
    %1722 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1496)
    %1723 = "ttir.transpose"(%1721, %1722) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1496)
    %1724 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1497)
    %1725 = "ttir.transpose"(%1723, %1724) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1497)
    %1726 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc174)
    %1727 = "ttir.multiply"(%1725, %arg177, %1726) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc174)
    %1728 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc175)
    %1729 = "ttir.add"(%1727, %arg178, %1728) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc175)
    %1730 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1163)
    %1731 = "ttir.sigmoid"(%1729, %1730) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1163)
    %1732 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1164)
    %1733 = "ttir.multiply"(%1729, %1731, %1732) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1164)
    %1734 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc844)
    %1735 = "ttir.concat"(%1715, %1733, %1734) <{dim = -3 : si32}> : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc844)
    %1736 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1498)
    %1737 = "ttir.transpose"(%1735, %1736) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1498)
    %1738 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1499)
    %1739 = "ttir.transpose"(%1737, %1738) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1499)
    %1740 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1500)
    %1741 = "ttir.conv2d"(%1739, %arg405, %1740) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x256xbf16>, tensor<256x256x1x1xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1500)
    %1742 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1501)
    %1743 = "ttir.transpose"(%1741, %1742) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x256xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1501)
    %1744 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc1502)
    %1745 = "ttir.transpose"(%1743, %1744) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc1502)
    %1746 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc176)
    %1747 = "ttir.multiply"(%1745, %arg179, %1746) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc176)
    %1748 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc177)
    %1749 = "ttir.add"(%1747, %arg180, %1748) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc177)
    %1750 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc1166)
    %1751 = "ttir.sigmoid"(%1749, %1750) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc1166)
    %1752 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc1167)
    %1753 = "ttir.multiply"(%1749, %1751, %1752) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc1167)
    %1754 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1168)
    %1755 = "ttir.transpose"(%1753, %1754) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1168)
    %1756 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1169)
    %1757 = "ttir.transpose"(%1755, %1756) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1169)
    %1758 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1170)
    %1759 = "ttir.conv2d"(%1757, %arg406, %1758) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x256xbf16>, tensor<256x256x3x3xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1170)
    %1760 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1171)
    %1761 = "ttir.transpose"(%1759, %1760) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x256xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1171)
    %1762 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc1172)
    %1763 = "ttir.transpose"(%1761, %1762) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc1172)
    %1764 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc178)
    %1765 = "ttir.multiply"(%1763, %arg181, %1764) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc178)
    %1766 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc179)
    %1767 = "ttir.add"(%1765, %arg182, %1766) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc179)
    %1768 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc847)
    %1769 = "ttir.sigmoid"(%1767, %1768) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc847)
    %1770 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc848)
    %1771 = "ttir.multiply"(%1767, %1769, %1770) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc848)
    %1772 = ttir.empty() : tensor<1x1024x40x40xbf16> loc(#loc430)
    %1773 = "ttir.concat"(%1513, %1515, %1643, %1771, %1772) <{dim = -3 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>, tensor<1x1024x40x40xbf16>) -> tensor<1x1024x40x40xbf16> loc(#loc430)
    %1774 = ttir.empty() : tensor<1x40x1024x40xbf16> loc(#loc849)
    %1775 = "ttir.transpose"(%1773, %1774) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x1024x40x40xbf16>, tensor<1x40x1024x40xbf16>) -> tensor<1x40x1024x40xbf16> loc(#loc849)
    %1776 = ttir.empty() : tensor<1x40x40x1024xbf16> loc(#loc850)
    %1777 = "ttir.transpose"(%1775, %1776) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x1024x40xbf16>, tensor<1x40x40x1024xbf16>) -> tensor<1x40x40x1024xbf16> loc(#loc850)
    %1778 = ttir.empty() : tensor<1x40x40x512xbf16> loc(#loc851)
    %1779 = "ttir.conv2d"(%1777, %arg407, %1778) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x1024xbf16>, tensor<512x1024x1x1xbf16>, tensor<1x40x40x512xbf16>) -> tensor<1x40x40x512xbf16> loc(#loc851)
    %1780 = ttir.empty() : tensor<1x40x512x40xbf16> loc(#loc852)
    %1781 = "ttir.transpose"(%1779, %1780) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x512xbf16>, tensor<1x40x512x40xbf16>) -> tensor<1x40x512x40xbf16> loc(#loc852)
    %1782 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc853)
    %1783 = "ttir.transpose"(%1781, %1782) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x512x40xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc853)
    %1784 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc180)
    %1785 = "ttir.multiply"(%1783, %arg183, %1784) : (tensor<1x512x40x40xbf16>, tensor<1x512x1x1xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc180)
    %1786 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc181)
    %1787 = "ttir.add"(%1785, %arg184, %1786) : (tensor<1x512x40x40xbf16>, tensor<1x512x1x1xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc181)
    %1788 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc617)
    %1789 = "ttir.sigmoid"(%1787, %1788) : (tensor<1x512x40x40xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc617)
    %1790 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc618)
    %1791 = "ttir.multiply"(%1787, %1789, %1790) : (tensor<1x512x40x40xbf16>, tensor<1x512x40x40xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc618)
    %1792 = ttir.empty() : tensor<1x40x512x40xbf16> loc(#loc432)
    %1793 = "ttir.transpose"(%1791, %1792) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x512x40x40xbf16>, tensor<1x40x512x40xbf16>) -> tensor<1x40x512x40xbf16> loc(#loc432)
    %1794 = ttir.empty() : tensor<1x40x40x512xbf16> loc(#loc433)
    %1795 = "ttir.transpose"(%1793, %1794) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x512x40xbf16>, tensor<1x40x40x512xbf16>) -> tensor<1x40x40x512xbf16> loc(#loc433)
    %1796 = ttir.empty() : tensor<1x80x80x512xbf16> loc(#loc434)
    %1797 = "ttir.upsample2d"(%1795, %1796) <{mode = "nearest", scale_factor = 2 : si32}> {channel_last = true} : (tensor<1x40x40x512xbf16>, tensor<1x80x80x512xbf16>) -> tensor<1x80x80x512xbf16> loc(#loc434)
    %1798 = ttir.empty() : tensor<1x80x512x80xbf16> loc(#loc435)
    %1799 = "ttir.transpose"(%1797, %1798) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x512xbf16>, tensor<1x80x512x80xbf16>) -> tensor<1x80x512x80xbf16> loc(#loc435)
    %1800 = ttir.empty() : tensor<1x512x80x80xbf16> loc(#loc436)
    %1801 = "ttir.transpose"(%1799, %1800) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x512x80xbf16>, tensor<1x512x80x80xbf16>) -> tensor<1x512x80x80xbf16> loc(#loc436)
    %1802 = ttir.empty() : tensor<1x1024x80x80xbf16> loc(#loc437)
    %1803 = "ttir.concat"(%1801, %693, %1802) <{dim = -3 : si32}> : (tensor<1x512x80x80xbf16>, tensor<1x512x80x80xbf16>, tensor<1x1024x80x80xbf16>) -> tensor<1x1024x80x80xbf16> loc(#loc437)
    %1804 = ttir.empty() : tensor<1x80x1024x80xbf16> loc(#loc854)
    %1805 = "ttir.transpose"(%1803, %1804) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x1024x80x80xbf16>, tensor<1x80x1024x80xbf16>) -> tensor<1x80x1024x80xbf16> loc(#loc854)
    %1806 = ttir.empty() : tensor<1x80x80x1024xbf16> loc(#loc855)
    %1807 = "ttir.transpose"(%1805, %1806) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x1024x80xbf16>, tensor<1x80x80x1024xbf16>) -> tensor<1x80x80x1024xbf16> loc(#loc855)
    %1808 = ttir.empty() : tensor<1x80x80x256xbf16> loc(#loc856)
    %1809 = "ttir.conv2d"(%1807, %arg408, %1808) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x1024xbf16>, tensor<256x1024x1x1xbf16>, tensor<1x80x80x256xbf16>) -> tensor<1x80x80x256xbf16> loc(#loc856)
    %1810 = ttir.empty() : tensor<1x80x256x80xbf16> loc(#loc857)
    %1811 = "ttir.transpose"(%1809, %1810) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x256xbf16>, tensor<1x80x256x80xbf16>) -> tensor<1x80x256x80xbf16> loc(#loc857)
    %1812 = ttir.empty() : tensor<1x256x80x80xbf16> loc(#loc858)
    %1813 = "ttir.transpose"(%1811, %1812) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x256x80xbf16>, tensor<1x256x80x80xbf16>) -> tensor<1x256x80x80xbf16> loc(#loc858)
    %1814 = ttir.empty() : tensor<1x256x80x80xbf16> loc(#loc182)
    %1815 = "ttir.multiply"(%1813, %arg185, %1814) : (tensor<1x256x80x80xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x80x80xbf16>) -> tensor<1x256x80x80xbf16> loc(#loc182)
    %1816 = ttir.empty() : tensor<1x256x80x80xbf16> loc(#loc183)
    %1817 = "ttir.add"(%1815, %arg186, %1816) : (tensor<1x256x80x80xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x80x80xbf16>) -> tensor<1x256x80x80xbf16> loc(#loc183)
    %1818 = ttir.empty() : tensor<1x256x80x80xbf16> loc(#loc620)
    %1819 = "ttir.sigmoid"(%1817, %1818) : (tensor<1x256x80x80xbf16>, tensor<1x256x80x80xbf16>) -> tensor<1x256x80x80xbf16> loc(#loc620)
    %1820 = ttir.empty() : tensor<1x256x80x80xbf16> loc(#loc621)
    %1821 = "ttir.multiply"(%1817, %1819, %1820) : (tensor<1x256x80x80xbf16>, tensor<1x256x80x80xbf16>, tensor<1x256x80x80xbf16>) -> tensor<1x256x80x80xbf16> loc(#loc621)
    %1822 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc439)
    %1823 = "ttir.index"(%1821, %1822) <{begin = 0 : i32, dim = 1 : i32, end = 128 : i32, step = 1 : i32}> : (tensor<1x256x80x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc439)
    %1824 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc440)
    %1825 = "ttir.index"(%1821, %1824) <{begin = 128 : i32, dim = 1 : i32, end = 256 : i32, step = 1 : i32}> : (tensor<1x256x80x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc440)
    %1826 = ttir.empty() : tensor<1x80x128x80xbf16> loc(#loc1503)
    %1827 = "ttir.transpose"(%1825, %1826) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x80x80xbf16>, tensor<1x80x128x80xbf16>) -> tensor<1x80x128x80xbf16> loc(#loc1503)
    %1828 = ttir.empty() : tensor<1x80x80x128xbf16> loc(#loc1504)
    %1829 = "ttir.transpose"(%1827, %1828) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x128x80xbf16>, tensor<1x80x80x128xbf16>) -> tensor<1x80x80x128xbf16> loc(#loc1504)
    %1830 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1505)
    %1831 = "ttir.conv2d"(%1829, %arg409, %1830) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x128xbf16>, tensor<64x128x1x1xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1505)
    %1832 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1506)
    %1833 = "ttir.transpose"(%1831, %1832) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x64xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1506)
    %1834 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1507)
    %1835 = "ttir.transpose"(%1833, %1834) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1507)
    %1836 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc184)
    %1837 = "ttir.multiply"(%1835, %arg187, %1836) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc184)
    %1838 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc185)
    %1839 = "ttir.add"(%1837, %arg188, %1838) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc185)
    %1840 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1174)
    %1841 = "ttir.sigmoid"(%1839, %1840) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1174)
    %1842 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1175)
    %1843 = "ttir.multiply"(%1839, %1841, %1842) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1175)
    %1844 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1952)
    %1845 = "ttir.transpose"(%1843, %1844) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x64x80x80xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1952)
    %1846 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1953)
    %1847 = "ttir.transpose"(%1845, %1846) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1953)
    %1848 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1954)
    %1849 = "ttir.conv2d"(%1847, %arg410, %1848) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x64xbf16>, tensor<64x64x3x3xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1954)
    %1850 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1955)
    %1851 = "ttir.transpose"(%1849, %1850) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x64xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1955)
    %1852 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1956)
    %1853 = "ttir.transpose"(%1851, %1852) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1956)
    %1854 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc186)
    %1855 = "ttir.multiply"(%1853, %arg189, %1854) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc186)
    %1856 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc187)
    %1857 = "ttir.add"(%1855, %arg190, %1856) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc187)
    %1858 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1957)
    %1859 = "ttir.transpose"(%1843, %1858) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x64x80x80xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1957)
    %1860 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1958)
    %1861 = "ttir.transpose"(%1859, %1860) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1958)
    %1862 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1959)
    %1863 = "ttir.conv2d"(%1861, %arg411, %1862) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x64xbf16>, tensor<64x64x1x1xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1959)
    %1864 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1960)
    %1865 = "ttir.transpose"(%1863, %1864) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x64xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1960)
    %1866 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1961)
    %1867 = "ttir.transpose"(%1865, %1866) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1961)
    %1868 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc188)
    %1869 = "ttir.multiply"(%1867, %arg191, %1868) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc188)
    %1870 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc189)
    %1871 = "ttir.add"(%1869, %arg192, %1870) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc189)
    %1872 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1692)
    %1873 = "ttir.add"(%1857, %1871, %1872) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1692)
    %1874 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1693)
    %1875 = "ttir.sigmoid"(%1873, %1874) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1693)
    %1876 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1694)
    %1877 = "ttir.multiply"(%1873, %1875, %1876) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1694)
    %1878 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1812)
    %1879 = "ttir.transpose"(%1877, %1878) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x64x80x80xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1812)
    %1880 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1813)
    %1881 = "ttir.transpose"(%1879, %1880) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1813)
    %1882 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1814)
    %1883 = "ttir.conv2d"(%1881, %arg412, %1882) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x64xbf16>, tensor<64x64x3x3xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1814)
    %1884 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1815)
    %1885 = "ttir.transpose"(%1883, %1884) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x64xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1815)
    %1886 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1816)
    %1887 = "ttir.transpose"(%1885, %1886) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1816)
    %1888 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc190)
    %1889 = "ttir.multiply"(%1887, %arg193, %1888) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc190)
    %1890 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc191)
    %1891 = "ttir.add"(%1889, %arg194, %1890) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc191)
    %1892 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1696)
    %1893 = "ttir.sigmoid"(%1891, %1892) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1696)
    %1894 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1697)
    %1895 = "ttir.multiply"(%1891, %1893, %1894) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1697)
    %1896 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1510)
    %1897 = "ttir.add"(%1843, %1895, %1896) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1510)
    %1898 = ttir.empty() : tensor<1x80x128x80xbf16> loc(#loc1511)
    %1899 = "ttir.transpose"(%1825, %1898) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x80x80xbf16>, tensor<1x80x128x80xbf16>) -> tensor<1x80x128x80xbf16> loc(#loc1511)
    %1900 = ttir.empty() : tensor<1x80x80x128xbf16> loc(#loc1512)
    %1901 = "ttir.transpose"(%1899, %1900) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x128x80xbf16>, tensor<1x80x80x128xbf16>) -> tensor<1x80x80x128xbf16> loc(#loc1512)
    %1902 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1513)
    %1903 = "ttir.conv2d"(%1901, %arg413, %1902) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x128xbf16>, tensor<64x128x1x1xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1513)
    %1904 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1514)
    %1905 = "ttir.transpose"(%1903, %1904) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x64xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1514)
    %1906 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1515)
    %1907 = "ttir.transpose"(%1905, %1906) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1515)
    %1908 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc192)
    %1909 = "ttir.multiply"(%1907, %arg195, %1908) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc192)
    %1910 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc193)
    %1911 = "ttir.add"(%1909, %arg196, %1910) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc193)
    %1912 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1178)
    %1913 = "ttir.sigmoid"(%1911, %1912) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1178)
    %1914 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1179)
    %1915 = "ttir.multiply"(%1911, %1913, %1914) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1179)
    %1916 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc862)
    %1917 = "ttir.concat"(%1897, %1915, %1916) <{dim = -3 : si32}> : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc862)
    %1918 = ttir.empty() : tensor<1x80x128x80xbf16> loc(#loc1516)
    %1919 = "ttir.transpose"(%1917, %1918) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x80x80xbf16>, tensor<1x80x128x80xbf16>) -> tensor<1x80x128x80xbf16> loc(#loc1516)
    %1920 = ttir.empty() : tensor<1x80x80x128xbf16> loc(#loc1517)
    %1921 = "ttir.transpose"(%1919, %1920) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x128x80xbf16>, tensor<1x80x80x128xbf16>) -> tensor<1x80x80x128xbf16> loc(#loc1517)
    %1922 = ttir.empty() : tensor<1x80x80x128xbf16> loc(#loc1518)
    %1923 = "ttir.conv2d"(%1921, %arg414, %1922) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x128xbf16>, tensor<128x128x1x1xbf16>, tensor<1x80x80x128xbf16>) -> tensor<1x80x80x128xbf16> loc(#loc1518)
    %1924 = ttir.empty() : tensor<1x80x128x80xbf16> loc(#loc1519)
    %1925 = "ttir.transpose"(%1923, %1924) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x128xbf16>, tensor<1x80x128x80xbf16>) -> tensor<1x80x128x80xbf16> loc(#loc1519)
    %1926 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc1520)
    %1927 = "ttir.transpose"(%1925, %1926) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x128x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc1520)
    %1928 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc194)
    %1929 = "ttir.multiply"(%1927, %arg197, %1928) : (tensor<1x128x80x80xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc194)
    %1930 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc195)
    %1931 = "ttir.add"(%1929, %arg198, %1930) : (tensor<1x128x80x80xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc195)
    %1932 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc1181)
    %1933 = "ttir.sigmoid"(%1931, %1932) : (tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc1181)
    %1934 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc1182)
    %1935 = "ttir.multiply"(%1931, %1933, %1934) : (tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc1182)
    %1936 = ttir.empty() : tensor<1x80x128x80xbf16> loc(#loc1183)
    %1937 = "ttir.transpose"(%1935, %1936) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x80x80xbf16>, tensor<1x80x128x80xbf16>) -> tensor<1x80x128x80xbf16> loc(#loc1183)
    %1938 = ttir.empty() : tensor<1x80x80x128xbf16> loc(#loc1184)
    %1939 = "ttir.transpose"(%1937, %1938) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x128x80xbf16>, tensor<1x80x80x128xbf16>) -> tensor<1x80x80x128xbf16> loc(#loc1184)
    %1940 = ttir.empty() : tensor<1x80x80x128xbf16> loc(#loc1185)
    %1941 = "ttir.conv2d"(%1939, %arg415, %1940) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x128xbf16>, tensor<128x128x3x3xbf16>, tensor<1x80x80x128xbf16>) -> tensor<1x80x80x128xbf16> loc(#loc1185)
    %1942 = ttir.empty() : tensor<1x80x128x80xbf16> loc(#loc1186)
    %1943 = "ttir.transpose"(%1941, %1942) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x128xbf16>, tensor<1x80x128x80xbf16>) -> tensor<1x80x128x80xbf16> loc(#loc1186)
    %1944 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc1187)
    %1945 = "ttir.transpose"(%1943, %1944) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x128x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc1187)
    %1946 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc196)
    %1947 = "ttir.multiply"(%1945, %arg199, %1946) : (tensor<1x128x80x80xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc196)
    %1948 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc197)
    %1949 = "ttir.add"(%1947, %arg200, %1948) : (tensor<1x128x80x80xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc197)
    %1950 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc865)
    %1951 = "ttir.sigmoid"(%1949, %1950) : (tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc865)
    %1952 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc866)
    %1953 = "ttir.multiply"(%1949, %1951, %1952) : (tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc866)
    %1954 = ttir.empty() : tensor<1x80x128x80xbf16> loc(#loc1521)
    %1955 = "ttir.transpose"(%1953, %1954) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x80x80xbf16>, tensor<1x80x128x80xbf16>) -> tensor<1x80x128x80xbf16> loc(#loc1521)
    %1956 = ttir.empty() : tensor<1x80x80x128xbf16> loc(#loc1522)
    %1957 = "ttir.transpose"(%1955, %1956) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x128x80xbf16>, tensor<1x80x80x128xbf16>) -> tensor<1x80x80x128xbf16> loc(#loc1522)
    %1958 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1523)
    %1959 = "ttir.conv2d"(%1957, %arg416, %1958) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x128xbf16>, tensor<64x128x1x1xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1523)
    %1960 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1524)
    %1961 = "ttir.transpose"(%1959, %1960) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x64xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1524)
    %1962 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1525)
    %1963 = "ttir.transpose"(%1961, %1962) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1525)
    %1964 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc198)
    %1965 = "ttir.multiply"(%1963, %arg201, %1964) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc198)
    %1966 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc199)
    %1967 = "ttir.add"(%1965, %arg202, %1966) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc199)
    %1968 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1189)
    %1969 = "ttir.sigmoid"(%1967, %1968) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1189)
    %1970 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1190)
    %1971 = "ttir.multiply"(%1967, %1969, %1970) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1190)
    %1972 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1962)
    %1973 = "ttir.transpose"(%1971, %1972) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x64x80x80xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1962)
    %1974 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1963)
    %1975 = "ttir.transpose"(%1973, %1974) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1963)
    %1976 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1964)
    %1977 = "ttir.conv2d"(%1975, %arg417, %1976) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x64xbf16>, tensor<64x64x3x3xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1964)
    %1978 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1965)
    %1979 = "ttir.transpose"(%1977, %1978) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x64xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1965)
    %1980 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1966)
    %1981 = "ttir.transpose"(%1979, %1980) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1966)
    %1982 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc200)
    %1983 = "ttir.multiply"(%1981, %arg203, %1982) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc200)
    %1984 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc201)
    %1985 = "ttir.add"(%1983, %arg204, %1984) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc201)
    %1986 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1967)
    %1987 = "ttir.transpose"(%1971, %1986) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x64x80x80xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1967)
    %1988 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1968)
    %1989 = "ttir.transpose"(%1987, %1988) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1968)
    %1990 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1969)
    %1991 = "ttir.conv2d"(%1989, %arg418, %1990) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x64xbf16>, tensor<64x64x1x1xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1969)
    %1992 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1970)
    %1993 = "ttir.transpose"(%1991, %1992) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x64xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1970)
    %1994 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1971)
    %1995 = "ttir.transpose"(%1993, %1994) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1971)
    %1996 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc202)
    %1997 = "ttir.multiply"(%1995, %arg205, %1996) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc202)
    %1998 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc203)
    %1999 = "ttir.add"(%1997, %arg206, %1998) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc203)
    %2000 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1700)
    %2001 = "ttir.add"(%1985, %1999, %2000) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1700)
    %2002 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1701)
    %2003 = "ttir.sigmoid"(%2001, %2002) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1701)
    %2004 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1702)
    %2005 = "ttir.multiply"(%2001, %2003, %2004) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1702)
    %2006 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1819)
    %2007 = "ttir.transpose"(%2005, %2006) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x64x80x80xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1819)
    %2008 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1820)
    %2009 = "ttir.transpose"(%2007, %2008) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1820)
    %2010 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1821)
    %2011 = "ttir.conv2d"(%2009, %arg419, %2010) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x64xbf16>, tensor<64x64x3x3xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1821)
    %2012 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1822)
    %2013 = "ttir.transpose"(%2011, %2012) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x64xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1822)
    %2014 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1823)
    %2015 = "ttir.transpose"(%2013, %2014) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1823)
    %2016 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc204)
    %2017 = "ttir.multiply"(%2015, %arg207, %2016) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc204)
    %2018 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc205)
    %2019 = "ttir.add"(%2017, %arg208, %2018) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc205)
    %2020 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1704)
    %2021 = "ttir.sigmoid"(%2019, %2020) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1704)
    %2022 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1705)
    %2023 = "ttir.multiply"(%2019, %2021, %2022) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1705)
    %2024 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1528)
    %2025 = "ttir.add"(%1971, %2023, %2024) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1528)
    %2026 = ttir.empty() : tensor<1x80x128x80xbf16> loc(#loc1529)
    %2027 = "ttir.transpose"(%1953, %2026) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x80x80xbf16>, tensor<1x80x128x80xbf16>) -> tensor<1x80x128x80xbf16> loc(#loc1529)
    %2028 = ttir.empty() : tensor<1x80x80x128xbf16> loc(#loc1530)
    %2029 = "ttir.transpose"(%2027, %2028) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x128x80xbf16>, tensor<1x80x80x128xbf16>) -> tensor<1x80x80x128xbf16> loc(#loc1530)
    %2030 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1531)
    %2031 = "ttir.conv2d"(%2029, %arg420, %2030) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x128xbf16>, tensor<64x128x1x1xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1531)
    %2032 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1532)
    %2033 = "ttir.transpose"(%2031, %2032) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x64xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1532)
    %2034 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1533)
    %2035 = "ttir.transpose"(%2033, %2034) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1533)
    %2036 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc206)
    %2037 = "ttir.multiply"(%2035, %arg209, %2036) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc206)
    %2038 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc207)
    %2039 = "ttir.add"(%2037, %arg210, %2038) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc207)
    %2040 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1193)
    %2041 = "ttir.sigmoid"(%2039, %2040) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1193)
    %2042 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1194)
    %2043 = "ttir.multiply"(%2039, %2041, %2042) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1194)
    %2044 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc870)
    %2045 = "ttir.concat"(%2025, %2043, %2044) <{dim = -3 : si32}> : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc870)
    %2046 = ttir.empty() : tensor<1x80x128x80xbf16> loc(#loc1534)
    %2047 = "ttir.transpose"(%2045, %2046) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x80x80xbf16>, tensor<1x80x128x80xbf16>) -> tensor<1x80x128x80xbf16> loc(#loc1534)
    %2048 = ttir.empty() : tensor<1x80x80x128xbf16> loc(#loc1535)
    %2049 = "ttir.transpose"(%2047, %2048) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x128x80xbf16>, tensor<1x80x80x128xbf16>) -> tensor<1x80x80x128xbf16> loc(#loc1535)
    %2050 = ttir.empty() : tensor<1x80x80x128xbf16> loc(#loc1536)
    %2051 = "ttir.conv2d"(%2049, %arg421, %2050) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x128xbf16>, tensor<128x128x1x1xbf16>, tensor<1x80x80x128xbf16>) -> tensor<1x80x80x128xbf16> loc(#loc1536)
    %2052 = ttir.empty() : tensor<1x80x128x80xbf16> loc(#loc1537)
    %2053 = "ttir.transpose"(%2051, %2052) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x128xbf16>, tensor<1x80x128x80xbf16>) -> tensor<1x80x128x80xbf16> loc(#loc1537)
    %2054 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc1538)
    %2055 = "ttir.transpose"(%2053, %2054) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x128x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc1538)
    %2056 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc208)
    %2057 = "ttir.multiply"(%2055, %arg211, %2056) : (tensor<1x128x80x80xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc208)
    %2058 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc209)
    %2059 = "ttir.add"(%2057, %arg212, %2058) : (tensor<1x128x80x80xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc209)
    %2060 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc1196)
    %2061 = "ttir.sigmoid"(%2059, %2060) : (tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc1196)
    %2062 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc1197)
    %2063 = "ttir.multiply"(%2059, %2061, %2062) : (tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc1197)
    %2064 = ttir.empty() : tensor<1x80x128x80xbf16> loc(#loc1198)
    %2065 = "ttir.transpose"(%2063, %2064) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x80x80xbf16>, tensor<1x80x128x80xbf16>) -> tensor<1x80x128x80xbf16> loc(#loc1198)
    %2066 = ttir.empty() : tensor<1x80x80x128xbf16> loc(#loc1199)
    %2067 = "ttir.transpose"(%2065, %2066) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x128x80xbf16>, tensor<1x80x80x128xbf16>) -> tensor<1x80x80x128xbf16> loc(#loc1199)
    %2068 = ttir.empty() : tensor<1x80x80x128xbf16> loc(#loc1200)
    %2069 = "ttir.conv2d"(%2067, %arg422, %2068) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x128xbf16>, tensor<128x128x3x3xbf16>, tensor<1x80x80x128xbf16>) -> tensor<1x80x80x128xbf16> loc(#loc1200)
    %2070 = ttir.empty() : tensor<1x80x128x80xbf16> loc(#loc1201)
    %2071 = "ttir.transpose"(%2069, %2070) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x128xbf16>, tensor<1x80x128x80xbf16>) -> tensor<1x80x128x80xbf16> loc(#loc1201)
    %2072 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc1202)
    %2073 = "ttir.transpose"(%2071, %2072) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x128x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc1202)
    %2074 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc210)
    %2075 = "ttir.multiply"(%2073, %arg213, %2074) : (tensor<1x128x80x80xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc210)
    %2076 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc211)
    %2077 = "ttir.add"(%2075, %arg214, %2076) : (tensor<1x128x80x80xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc211)
    %2078 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc873)
    %2079 = "ttir.sigmoid"(%2077, %2078) : (tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc873)
    %2080 = ttir.empty() : tensor<1x128x80x80xbf16> loc(#loc874)
    %2081 = "ttir.multiply"(%2077, %2079, %2080) : (tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>) -> tensor<1x128x80x80xbf16> loc(#loc874)
    %2082 = ttir.empty() : tensor<1x512x80x80xbf16> loc(#loc443)
    %2083 = "ttir.concat"(%1823, %1825, %1953, %2081, %2082) <{dim = -3 : si32}> : (tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>, tensor<1x128x80x80xbf16>, tensor<1x512x80x80xbf16>) -> tensor<1x512x80x80xbf16> loc(#loc443)
    %2084 = ttir.empty() : tensor<1x80x512x80xbf16> loc(#loc875)
    %2085 = "ttir.transpose"(%2083, %2084) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x512x80x80xbf16>, tensor<1x80x512x80xbf16>) -> tensor<1x80x512x80xbf16> loc(#loc875)
    %2086 = ttir.empty() : tensor<1x80x80x512xbf16> loc(#loc876)
    %2087 = "ttir.transpose"(%2085, %2086) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x512x80xbf16>, tensor<1x80x80x512xbf16>) -> tensor<1x80x80x512xbf16> loc(#loc876)
    %2088 = ttir.empty() : tensor<1x80x80x256xbf16> loc(#loc877)
    %2089 = "ttir.conv2d"(%2087, %arg423, %2088) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x512xbf16>, tensor<256x512x1x1xbf16>, tensor<1x80x80x256xbf16>) -> tensor<1x80x80x256xbf16> loc(#loc877)
    %2090 = ttir.empty() : tensor<1x80x256x80xbf16> loc(#loc878)
    %2091 = "ttir.transpose"(%2089, %2090) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x256xbf16>, tensor<1x80x256x80xbf16>) -> tensor<1x80x256x80xbf16> loc(#loc878)
    %2092 = ttir.empty() : tensor<1x256x80x80xbf16> loc(#loc879)
    %2093 = "ttir.transpose"(%2091, %2092) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x256x80xbf16>, tensor<1x256x80x80xbf16>) -> tensor<1x256x80x80xbf16> loc(#loc879)
    %2094 = ttir.empty() : tensor<1x256x80x80xbf16> loc(#loc212)
    %2095 = "ttir.multiply"(%2093, %arg215, %2094) : (tensor<1x256x80x80xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x80x80xbf16>) -> tensor<1x256x80x80xbf16> loc(#loc212)
    %2096 = ttir.empty() : tensor<1x256x80x80xbf16> loc(#loc213)
    %2097 = "ttir.add"(%2095, %arg216, %2096) : (tensor<1x256x80x80xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x80x80xbf16>) -> tensor<1x256x80x80xbf16> loc(#loc213)
    %2098 = ttir.empty() : tensor<1x256x80x80xbf16> loc(#loc627)
    %2099 = "ttir.sigmoid"(%2097, %2098) : (tensor<1x256x80x80xbf16>, tensor<1x256x80x80xbf16>) -> tensor<1x256x80x80xbf16> loc(#loc627)
    %2100 = ttir.empty() : tensor<1x256x80x80xbf16> loc(#loc628)
    %2101 = "ttir.multiply"(%2097, %2099, %2100) : (tensor<1x256x80x80xbf16>, tensor<1x256x80x80xbf16>, tensor<1x256x80x80xbf16>) -> tensor<1x256x80x80xbf16> loc(#loc628)
    %2102 = ttir.empty() : tensor<1x80x256x80xbf16> loc(#loc1203)
    %2103 = "ttir.transpose"(%2101, %2102) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x80x80xbf16>, tensor<1x80x256x80xbf16>) -> tensor<1x80x256x80xbf16> loc(#loc1203)
    %2104 = ttir.empty() : tensor<1x80x80x256xbf16> loc(#loc1204)
    %2105 = "ttir.transpose"(%2103, %2104) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x256x80xbf16>, tensor<1x80x80x256xbf16>) -> tensor<1x80x80x256xbf16> loc(#loc1204)
    %2106 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1205)
    %2107 = "ttir.conv2d"(%2105, %arg424, %2106) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x256xbf16>, tensor<64x256x3x3xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1205)
    %2108 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1206)
    %2109 = "ttir.transpose"(%2107, %2108) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x64xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1206)
    %2110 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1207)
    %2111 = "ttir.transpose"(%2109, %2110) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1207)
    %2112 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc214)
    %2113 = "ttir.multiply"(%2111, %arg217, %2112) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc214)
    %2114 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc215)
    %2115 = "ttir.add"(%2113, %arg218, %2114) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc215)
    %2116 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc881)
    %2117 = "ttir.sigmoid"(%2115, %2116) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc881)
    %2118 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc882)
    %2119 = "ttir.multiply"(%2115, %2117, %2118) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc882)
    %2120 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1208)
    %2121 = "ttir.transpose"(%2119, %2120) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x64x80x80xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1208)
    %2122 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1209)
    %2123 = "ttir.transpose"(%2121, %2122) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1209)
    %2124 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc1210)
    %2125 = "ttir.conv2d"(%2123, %arg425, %2124) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x64xbf16>, tensor<64x64x3x3xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc1210)
    %2126 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc1211)
    %2127 = "ttir.transpose"(%2125, %2126) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x64xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc1211)
    %2128 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc1212)
    %2129 = "ttir.transpose"(%2127, %2128) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc1212)
    %2130 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc216)
    %2131 = "ttir.multiply"(%2129, %arg219, %2130) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc216)
    %2132 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc217)
    %2133 = "ttir.add"(%2131, %arg220, %2132) : (tensor<1x64x80x80xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc217)
    %2134 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc884)
    %2135 = "ttir.sigmoid"(%2133, %2134) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc884)
    %2136 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc885)
    %2137 = "ttir.multiply"(%2133, %2135, %2136) : (tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc885)
    %2138 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc886)
    %2139 = "ttir.transpose"(%2137, %2138) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x64x80x80xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc886)
    %2140 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc887)
    %2141 = "ttir.transpose"(%2139, %2140) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc887)
    %2142 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc888)
    %2143 = "ttir.conv2d"(%2141, %arg426, %arg427, %2142) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x64xbf16>, tensor<64x64x1x1xbf16>, tensor<1x1x1x64xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc888)
    %2144 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc889)
    %2145 = "ttir.transpose"(%2143, %2144) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x64xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc889)
    %2146 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc890)
    %2147 = "ttir.transpose"(%2145, %2146) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc890)
    %2148 = ttir.empty() : tensor<1x80x256x80xbf16> loc(#loc1213)
    %2149 = "ttir.transpose"(%2101, %2148) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x80x80xbf16>, tensor<1x80x256x80xbf16>) -> tensor<1x80x256x80xbf16> loc(#loc1213)
    %2150 = ttir.empty() : tensor<1x80x80x256xbf16> loc(#loc1214)
    %2151 = "ttir.transpose"(%2149, %2150) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x256x80xbf16>, tensor<1x80x80x256xbf16>) -> tensor<1x80x80x256xbf16> loc(#loc1214)
    %2152 = ttir.empty() : tensor<1x80x80x256xbf16> loc(#loc1215)
    %2153 = "ttir.conv2d"(%2151, %arg428, %2152) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x256xbf16>, tensor<256x256x3x3xbf16>, tensor<1x80x80x256xbf16>) -> tensor<1x80x80x256xbf16> loc(#loc1215)
    %2154 = ttir.empty() : tensor<1x80x256x80xbf16> loc(#loc1216)
    %2155 = "ttir.transpose"(%2153, %2154) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x256xbf16>, tensor<1x80x256x80xbf16>) -> tensor<1x80x256x80xbf16> loc(#loc1216)
    %2156 = ttir.empty() : tensor<1x256x80x80xbf16> loc(#loc1217)
    %2157 = "ttir.transpose"(%2155, %2156) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x256x80xbf16>, tensor<1x256x80x80xbf16>) -> tensor<1x256x80x80xbf16> loc(#loc1217)
    %2158 = ttir.empty() : tensor<1x256x80x80xbf16> loc(#loc218)
    %2159 = "ttir.multiply"(%2157, %arg221, %2158) : (tensor<1x256x80x80xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x80x80xbf16>) -> tensor<1x256x80x80xbf16> loc(#loc218)
    %2160 = ttir.empty() : tensor<1x256x80x80xbf16> loc(#loc219)
    %2161 = "ttir.add"(%2159, %arg222, %2160) : (tensor<1x256x80x80xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x80x80xbf16>) -> tensor<1x256x80x80xbf16> loc(#loc219)
    %2162 = ttir.empty() : tensor<1x256x80x80xbf16> loc(#loc892)
    %2163 = "ttir.sigmoid"(%2161, %2162) : (tensor<1x256x80x80xbf16>, tensor<1x256x80x80xbf16>) -> tensor<1x256x80x80xbf16> loc(#loc892)
    %2164 = ttir.empty() : tensor<1x256x80x80xbf16> loc(#loc893)
    %2165 = "ttir.multiply"(%2161, %2163, %2164) : (tensor<1x256x80x80xbf16>, tensor<1x256x80x80xbf16>, tensor<1x256x80x80xbf16>) -> tensor<1x256x80x80xbf16> loc(#loc893)
    %2166 = ttir.empty() : tensor<1x80x256x80xbf16> loc(#loc1218)
    %2167 = "ttir.transpose"(%2165, %2166) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x80x80xbf16>, tensor<1x80x256x80xbf16>) -> tensor<1x80x256x80xbf16> loc(#loc1218)
    %2168 = ttir.empty() : tensor<1x80x80x256xbf16> loc(#loc1219)
    %2169 = "ttir.transpose"(%2167, %2168) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x256x80xbf16>, tensor<1x80x80x256xbf16>) -> tensor<1x80x80x256xbf16> loc(#loc1219)
    %2170 = ttir.empty() : tensor<1x80x80x256xbf16> loc(#loc1220)
    %2171 = "ttir.conv2d"(%2169, %arg429, %2170) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x256xbf16>, tensor<256x256x3x3xbf16>, tensor<1x80x80x256xbf16>) -> tensor<1x80x80x256xbf16> loc(#loc1220)
    %2172 = ttir.empty() : tensor<1x80x256x80xbf16> loc(#loc1221)
    %2173 = "ttir.transpose"(%2171, %2172) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x256xbf16>, tensor<1x80x256x80xbf16>) -> tensor<1x80x256x80xbf16> loc(#loc1221)
    %2174 = ttir.empty() : tensor<1x256x80x80xbf16> loc(#loc1222)
    %2175 = "ttir.transpose"(%2173, %2174) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x256x80xbf16>, tensor<1x256x80x80xbf16>) -> tensor<1x256x80x80xbf16> loc(#loc1222)
    %2176 = ttir.empty() : tensor<1x256x80x80xbf16> loc(#loc220)
    %2177 = "ttir.multiply"(%2175, %arg223, %2176) : (tensor<1x256x80x80xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x80x80xbf16>) -> tensor<1x256x80x80xbf16> loc(#loc220)
    %2178 = ttir.empty() : tensor<1x256x80x80xbf16> loc(#loc221)
    %2179 = "ttir.add"(%2177, %arg224, %2178) : (tensor<1x256x80x80xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x80x80xbf16>) -> tensor<1x256x80x80xbf16> loc(#loc221)
    %2180 = ttir.empty() : tensor<1x256x80x80xbf16> loc(#loc895)
    %2181 = "ttir.sigmoid"(%2179, %2180) : (tensor<1x256x80x80xbf16>, tensor<1x256x80x80xbf16>) -> tensor<1x256x80x80xbf16> loc(#loc895)
    %2182 = ttir.empty() : tensor<1x256x80x80xbf16> loc(#loc896)
    %2183 = "ttir.multiply"(%2179, %2181, %2182) : (tensor<1x256x80x80xbf16>, tensor<1x256x80x80xbf16>, tensor<1x256x80x80xbf16>) -> tensor<1x256x80x80xbf16> loc(#loc896)
    %2184 = ttir.empty() : tensor<1x80x256x80xbf16> loc(#loc897)
    %2185 = "ttir.transpose"(%2183, %2184) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x80x80xbf16>, tensor<1x80x256x80xbf16>) -> tensor<1x80x256x80xbf16> loc(#loc897)
    %2186 = ttir.empty() : tensor<1x80x80x256xbf16> loc(#loc898)
    %2187 = "ttir.transpose"(%2185, %2186) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x256x80xbf16>, tensor<1x80x80x256xbf16>) -> tensor<1x80x80x256xbf16> loc(#loc898)
    %2188 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc899)
    %2189 = "ttir.conv2d"(%2187, %arg430, %arg431, %2188) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x256xbf16>, tensor<80x256x1x1xbf16>, tensor<1x1x1x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc899)
    %2190 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc900)
    %2191 = "ttir.transpose"(%2189, %2190) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc900)
    %2192 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc901)
    %2193 = "ttir.transpose"(%2191, %2192) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc901)
    %2194 = ttir.empty() : tensor<1x144x80x80xbf16> loc(#loc447)
    %2195 = "ttir.concat"(%2147, %2193, %2194) <{dim = -3 : si32}> : (tensor<1x64x80x80xbf16>, tensor<1x80x80x80xbf16>, tensor<1x144x80x80xbf16>) -> tensor<1x144x80x80xbf16> loc(#loc447)
    %2196 = ttir.empty() : tensor<1x144x6400xbf16> loc(#loc448)
    %2197 = "ttir.reshape"(%2195, %2196) <{shape = [1 : i32, 144 : i32, 6400 : i32]}> : (tensor<1x144x80x80xbf16>, tensor<1x144x6400xbf16>) -> tensor<1x144x6400xbf16> loc(#loc448)
    %2198 = ttir.empty() : tensor<1x80x256x80xbf16> loc(#loc449)
    %2199 = "ttir.transpose"(%2101, %2198) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x80x80xbf16>, tensor<1x80x256x80xbf16>) -> tensor<1x80x256x80xbf16> loc(#loc449)
    %2200 = ttir.empty() : tensor<1x80x80x256xbf16> loc(#loc450)
    %2201 = "ttir.transpose"(%2199, %2200) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x256x80xbf16>, tensor<1x80x80x256xbf16>) -> tensor<1x80x80x256xbf16> loc(#loc450)
    %2202 = ttir.empty() : tensor<1x79x79x256xbf16> loc(#loc451)
    %2203 = "ttir.conv2d"(%2201, %arg225, %2202) <{dilation = array<i32: 1, 1>, groups = 256 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x256xbf16>, tensor<256x1x2x2xbf16>, tensor<1x79x79x256xbf16>) -> tensor<1x79x79x256xbf16> loc(#loc451)
    %2204 = ttir.empty() : tensor<1x79x256x79xbf16> loc(#loc452)
    %2205 = "ttir.transpose"(%2203, %2204) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x79x79x256xbf16>, tensor<1x79x256x79xbf16>) -> tensor<1x79x256x79xbf16> loc(#loc452)
    %2206 = ttir.empty() : tensor<1x256x79x79xbf16> loc(#loc453)
    %2207 = "ttir.transpose"(%2205, %2206) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x79x256x79xbf16>, tensor<1x256x79x79xbf16>) -> tensor<1x256x79x79xbf16> loc(#loc453)
    %2208 = ttir.empty() : tensor<1x128x79x79xbf16> loc(#loc454)
    %2209 = "ttir.index"(%2207, %2208) <{begin = 0 : i32, dim = 1 : i32, end = 128 : i32, step = 1 : i32}> : (tensor<1x256x79x79xbf16>, tensor<1x128x79x79xbf16>) -> tensor<1x128x79x79xbf16> loc(#loc454)
    %2210 = ttir.empty() : tensor<1x79x128x79xbf16> loc(#loc902)
    %2211 = "ttir.transpose"(%2209, %2210) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x79x79xbf16>, tensor<1x79x128x79xbf16>) -> tensor<1x79x128x79xbf16> loc(#loc902)
    %2212 = ttir.empty() : tensor<1x79x79x128xbf16> loc(#loc903)
    %2213 = "ttir.transpose"(%2211, %2212) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x79x128x79xbf16>, tensor<1x79x79x128xbf16>) -> tensor<1x79x79x128xbf16> loc(#loc903)
    %2214 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc904)
    %2215 = "ttir.conv2d"(%2213, %arg432, %2214) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 2, 2>}> {channel_last = 1 : si32} : (tensor<1x79x79x128xbf16>, tensor<128x128x3x3xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc904)
    %2216 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc905)
    %2217 = "ttir.transpose"(%2215, %2216) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc905)
    %2218 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc906)
    %2219 = "ttir.transpose"(%2217, %2218) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc906)
    %2220 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc222)
    %2221 = "ttir.multiply"(%2219, %arg226, %2220) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc222)
    %2222 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc223)
    %2223 = "ttir.add"(%2221, %arg227, %2222) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc223)
    %2224 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc636)
    %2225 = "ttir.sigmoid"(%2223, %2224) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc636)
    %2226 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc637)
    %2227 = "ttir.multiply"(%2223, %2225, %2226) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc637)
    %2228 = ttir.empty() : tensor<1x128x79x79xbf16> loc(#loc456)
    %2229 = "ttir.index"(%2207, %2228) <{begin = 128 : i32, dim = 1 : i32, end = 256 : i32, step = 1 : i32}> : (tensor<1x256x79x79xbf16>, tensor<1x128x79x79xbf16>) -> tensor<1x128x79x79xbf16> loc(#loc456)
    %2230 = ttir.empty() : tensor<1x79x128x79xbf16> loc(#loc457)
    %2231 = "ttir.transpose"(%2229, %2230) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x79x79xbf16>, tensor<1x79x128x79xbf16>) -> tensor<1x79x128x79xbf16> loc(#loc457)
    %2232 = ttir.empty() : tensor<1x79x79x128xbf16> loc(#loc458)
    %2233 = "ttir.transpose"(%2231, %2232) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x79x128x79xbf16>, tensor<1x79x79x128xbf16>) -> tensor<1x79x79x128xbf16> loc(#loc458)
    %2234 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc459)
    %2235 = "ttir.max_pool2d"(%2233, %2234) <{ceil_mode = false, dilation_height = 1 : si32, dilation_width = 1 : si32, kernel_height = 3 : si32, kernel_width = 3 : si32, padding_bottom = 1 : si32, padding_left = 1 : si32, padding_right = 1 : si32, padding_top = 1 : si32, stride_height = 2 : si32, stride_width = 2 : si32}> {channel_last = true} : (tensor<1x79x79x128xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc459)
    %2236 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc460)
    %2237 = "ttir.transpose"(%2235, %2236) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc460)
    %2238 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc461)
    %2239 = "ttir.transpose"(%2237, %2238) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc461)
    %2240 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc907)
    %2241 = "ttir.transpose"(%2239, %2240) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x40x40xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc907)
    %2242 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc908)
    %2243 = "ttir.transpose"(%2241, %2242) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc908)
    %2244 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc909)
    %2245 = "ttir.conv2d"(%2243, %arg433, %2244) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x128xbf16>, tensor<128x128x1x1xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc909)
    %2246 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc910)
    %2247 = "ttir.transpose"(%2245, %2246) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc910)
    %2248 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc911)
    %2249 = "ttir.transpose"(%2247, %2248) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc911)
    %2250 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc224)
    %2251 = "ttir.multiply"(%2249, %arg228, %2250) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc224)
    %2252 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc225)
    %2253 = "ttir.add"(%2251, %arg229, %2252) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc225)
    %2254 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc639)
    %2255 = "ttir.sigmoid"(%2253, %2254) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc639)
    %2256 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc640)
    %2257 = "ttir.multiply"(%2253, %2255, %2256) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc640)
    %2258 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc463)
    %2259 = "ttir.concat"(%2227, %2257, %2258) <{dim = -3 : si32}> : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc463)
    %2260 = ttir.empty() : tensor<1x768x40x40xbf16> loc(#loc464)
    %2261 = "ttir.concat"(%2259, %1791, %2260) <{dim = -3 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x512x40x40xbf16>, tensor<1x768x40x40xbf16>) -> tensor<1x768x40x40xbf16> loc(#loc464)
    %2262 = ttir.empty() : tensor<1x40x768x40xbf16> loc(#loc912)
    %2263 = "ttir.transpose"(%2261, %2262) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x768x40x40xbf16>, tensor<1x40x768x40xbf16>) -> tensor<1x40x768x40xbf16> loc(#loc912)
    %2264 = ttir.empty() : tensor<1x40x40x768xbf16> loc(#loc913)
    %2265 = "ttir.transpose"(%2263, %2264) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x768x40xbf16>, tensor<1x40x40x768xbf16>) -> tensor<1x40x40x768xbf16> loc(#loc913)
    %2266 = ttir.empty() : tensor<1x40x40x512xbf16> loc(#loc914)
    %2267 = "ttir.conv2d"(%2265, %arg434, %2266) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x768xbf16>, tensor<512x768x1x1xbf16>, tensor<1x40x40x512xbf16>) -> tensor<1x40x40x512xbf16> loc(#loc914)
    %2268 = ttir.empty() : tensor<1x40x512x40xbf16> loc(#loc915)
    %2269 = "ttir.transpose"(%2267, %2268) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x512xbf16>, tensor<1x40x512x40xbf16>) -> tensor<1x40x512x40xbf16> loc(#loc915)
    %2270 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc916)
    %2271 = "ttir.transpose"(%2269, %2270) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x512x40xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc916)
    %2272 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc226)
    %2273 = "ttir.multiply"(%2271, %arg230, %2272) : (tensor<1x512x40x40xbf16>, tensor<1x512x1x1xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc226)
    %2274 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc227)
    %2275 = "ttir.add"(%2273, %arg231, %2274) : (tensor<1x512x40x40xbf16>, tensor<1x512x1x1xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc227)
    %2276 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc642)
    %2277 = "ttir.sigmoid"(%2275, %2276) : (tensor<1x512x40x40xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc642)
    %2278 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc643)
    %2279 = "ttir.multiply"(%2275, %2277, %2278) : (tensor<1x512x40x40xbf16>, tensor<1x512x40x40xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc643)
    %2280 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc466)
    %2281 = "ttir.index"(%2279, %2280) <{begin = 0 : i32, dim = 1 : i32, end = 256 : i32, step = 1 : i32}> : (tensor<1x512x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc466)
    %2282 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc467)
    %2283 = "ttir.index"(%2279, %2282) <{begin = 256 : i32, dim = 1 : i32, end = 512 : i32, step = 1 : i32}> : (tensor<1x512x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc467)
    %2284 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1539)
    %2285 = "ttir.transpose"(%2283, %2284) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1539)
    %2286 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1540)
    %2287 = "ttir.transpose"(%2285, %2286) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1540)
    %2288 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1541)
    %2289 = "ttir.conv2d"(%2287, %arg435, %2288) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x256xbf16>, tensor<128x256x1x1xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1541)
    %2290 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1542)
    %2291 = "ttir.transpose"(%2289, %2290) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1542)
    %2292 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1543)
    %2293 = "ttir.transpose"(%2291, %2292) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1543)
    %2294 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc228)
    %2295 = "ttir.multiply"(%2293, %arg232, %2294) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc228)
    %2296 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc229)
    %2297 = "ttir.add"(%2295, %arg233, %2296) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc229)
    %2298 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1224)
    %2299 = "ttir.sigmoid"(%2297, %2298) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1224)
    %2300 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1225)
    %2301 = "ttir.multiply"(%2297, %2299, %2300) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1225)
    %2302 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1972)
    %2303 = "ttir.transpose"(%2301, %2302) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x40x40xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1972)
    %2304 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1973)
    %2305 = "ttir.transpose"(%2303, %2304) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1973)
    %2306 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1974)
    %2307 = "ttir.conv2d"(%2305, %arg436, %2306) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x128xbf16>, tensor<128x128x3x3xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1974)
    %2308 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1975)
    %2309 = "ttir.transpose"(%2307, %2308) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1975)
    %2310 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1976)
    %2311 = "ttir.transpose"(%2309, %2310) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1976)
    %2312 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc230)
    %2313 = "ttir.multiply"(%2311, %arg234, %2312) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc230)
    %2314 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc231)
    %2315 = "ttir.add"(%2313, %arg235, %2314) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc231)
    %2316 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1977)
    %2317 = "ttir.transpose"(%2301, %2316) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x40x40xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1977)
    %2318 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1978)
    %2319 = "ttir.transpose"(%2317, %2318) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1978)
    %2320 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1979)
    %2321 = "ttir.conv2d"(%2319, %arg437, %2320) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x128xbf16>, tensor<128x128x1x1xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1979)
    %2322 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1980)
    %2323 = "ttir.transpose"(%2321, %2322) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1980)
    %2324 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1981)
    %2325 = "ttir.transpose"(%2323, %2324) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1981)
    %2326 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc232)
    %2327 = "ttir.multiply"(%2325, %arg236, %2326) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc232)
    %2328 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc233)
    %2329 = "ttir.add"(%2327, %arg237, %2328) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc233)
    %2330 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1708)
    %2331 = "ttir.add"(%2315, %2329, %2330) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1708)
    %2332 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1709)
    %2333 = "ttir.sigmoid"(%2331, %2332) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1709)
    %2334 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1710)
    %2335 = "ttir.multiply"(%2331, %2333, %2334) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1710)
    %2336 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1826)
    %2337 = "ttir.transpose"(%2335, %2336) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x40x40xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1826)
    %2338 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1827)
    %2339 = "ttir.transpose"(%2337, %2338) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1827)
    %2340 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1828)
    %2341 = "ttir.conv2d"(%2339, %arg438, %2340) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x128xbf16>, tensor<128x128x3x3xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1828)
    %2342 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1829)
    %2343 = "ttir.transpose"(%2341, %2342) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1829)
    %2344 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1830)
    %2345 = "ttir.transpose"(%2343, %2344) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1830)
    %2346 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc234)
    %2347 = "ttir.multiply"(%2345, %arg238, %2346) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc234)
    %2348 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc235)
    %2349 = "ttir.add"(%2347, %arg239, %2348) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc235)
    %2350 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1712)
    %2351 = "ttir.sigmoid"(%2349, %2350) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1712)
    %2352 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1713)
    %2353 = "ttir.multiply"(%2349, %2351, %2352) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1713)
    %2354 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1546)
    %2355 = "ttir.add"(%2301, %2353, %2354) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1546)
    %2356 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1547)
    %2357 = "ttir.transpose"(%2283, %2356) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1547)
    %2358 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1548)
    %2359 = "ttir.transpose"(%2357, %2358) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1548)
    %2360 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1549)
    %2361 = "ttir.conv2d"(%2359, %arg439, %2360) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x256xbf16>, tensor<128x256x1x1xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1549)
    %2362 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1550)
    %2363 = "ttir.transpose"(%2361, %2362) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1550)
    %2364 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1551)
    %2365 = "ttir.transpose"(%2363, %2364) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1551)
    %2366 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc236)
    %2367 = "ttir.multiply"(%2365, %arg240, %2366) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc236)
    %2368 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc237)
    %2369 = "ttir.add"(%2367, %arg241, %2368) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc237)
    %2370 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1228)
    %2371 = "ttir.sigmoid"(%2369, %2370) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1228)
    %2372 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1229)
    %2373 = "ttir.multiply"(%2369, %2371, %2372) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1229)
    %2374 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc920)
    %2375 = "ttir.concat"(%2355, %2373, %2374) <{dim = -3 : si32}> : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc920)
    %2376 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1552)
    %2377 = "ttir.transpose"(%2375, %2376) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1552)
    %2378 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1553)
    %2379 = "ttir.transpose"(%2377, %2378) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1553)
    %2380 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1554)
    %2381 = "ttir.conv2d"(%2379, %arg440, %2380) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x256xbf16>, tensor<256x256x1x1xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1554)
    %2382 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1555)
    %2383 = "ttir.transpose"(%2381, %2382) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x256xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1555)
    %2384 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc1556)
    %2385 = "ttir.transpose"(%2383, %2384) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc1556)
    %2386 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc238)
    %2387 = "ttir.multiply"(%2385, %arg242, %2386) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc238)
    %2388 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc239)
    %2389 = "ttir.add"(%2387, %arg243, %2388) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc239)
    %2390 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc1231)
    %2391 = "ttir.sigmoid"(%2389, %2390) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc1231)
    %2392 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc1232)
    %2393 = "ttir.multiply"(%2389, %2391, %2392) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc1232)
    %2394 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1233)
    %2395 = "ttir.transpose"(%2393, %2394) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1233)
    %2396 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1234)
    %2397 = "ttir.transpose"(%2395, %2396) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1234)
    %2398 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1235)
    %2399 = "ttir.conv2d"(%2397, %arg441, %2398) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x256xbf16>, tensor<256x256x3x3xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1235)
    %2400 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1236)
    %2401 = "ttir.transpose"(%2399, %2400) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x256xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1236)
    %2402 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc1237)
    %2403 = "ttir.transpose"(%2401, %2402) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc1237)
    %2404 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc240)
    %2405 = "ttir.multiply"(%2403, %arg244, %2404) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc240)
    %2406 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc241)
    %2407 = "ttir.add"(%2405, %arg245, %2406) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc241)
    %2408 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc923)
    %2409 = "ttir.sigmoid"(%2407, %2408) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc923)
    %2410 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc924)
    %2411 = "ttir.multiply"(%2407, %2409, %2410) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc924)
    %2412 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1557)
    %2413 = "ttir.transpose"(%2411, %2412) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1557)
    %2414 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1558)
    %2415 = "ttir.transpose"(%2413, %2414) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1558)
    %2416 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1559)
    %2417 = "ttir.conv2d"(%2415, %arg442, %2416) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x256xbf16>, tensor<128x256x1x1xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1559)
    %2418 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1560)
    %2419 = "ttir.transpose"(%2417, %2418) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1560)
    %2420 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1561)
    %2421 = "ttir.transpose"(%2419, %2420) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1561)
    %2422 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc242)
    %2423 = "ttir.multiply"(%2421, %arg246, %2422) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc242)
    %2424 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc243)
    %2425 = "ttir.add"(%2423, %arg247, %2424) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc243)
    %2426 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1239)
    %2427 = "ttir.sigmoid"(%2425, %2426) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1239)
    %2428 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1240)
    %2429 = "ttir.multiply"(%2425, %2427, %2428) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1240)
    %2430 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1982)
    %2431 = "ttir.transpose"(%2429, %2430) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x40x40xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1982)
    %2432 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1983)
    %2433 = "ttir.transpose"(%2431, %2432) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1983)
    %2434 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1984)
    %2435 = "ttir.conv2d"(%2433, %arg443, %2434) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x128xbf16>, tensor<128x128x3x3xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1984)
    %2436 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1985)
    %2437 = "ttir.transpose"(%2435, %2436) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1985)
    %2438 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1986)
    %2439 = "ttir.transpose"(%2437, %2438) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1986)
    %2440 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc244)
    %2441 = "ttir.multiply"(%2439, %arg248, %2440) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc244)
    %2442 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc245)
    %2443 = "ttir.add"(%2441, %arg249, %2442) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc245)
    %2444 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1987)
    %2445 = "ttir.transpose"(%2429, %2444) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x40x40xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1987)
    %2446 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1988)
    %2447 = "ttir.transpose"(%2445, %2446) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1988)
    %2448 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1989)
    %2449 = "ttir.conv2d"(%2447, %arg444, %2448) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x128xbf16>, tensor<128x128x1x1xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1989)
    %2450 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1990)
    %2451 = "ttir.transpose"(%2449, %2450) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1990)
    %2452 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1991)
    %2453 = "ttir.transpose"(%2451, %2452) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1991)
    %2454 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc246)
    %2455 = "ttir.multiply"(%2453, %arg250, %2454) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc246)
    %2456 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc247)
    %2457 = "ttir.add"(%2455, %arg251, %2456) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc247)
    %2458 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1716)
    %2459 = "ttir.add"(%2443, %2457, %2458) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1716)
    %2460 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1717)
    %2461 = "ttir.sigmoid"(%2459, %2460) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1717)
    %2462 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1718)
    %2463 = "ttir.multiply"(%2459, %2461, %2462) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1718)
    %2464 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1833)
    %2465 = "ttir.transpose"(%2463, %2464) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x40x40xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1833)
    %2466 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1834)
    %2467 = "ttir.transpose"(%2465, %2466) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1834)
    %2468 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1835)
    %2469 = "ttir.conv2d"(%2467, %arg445, %2468) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x128xbf16>, tensor<128x128x3x3xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1835)
    %2470 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1836)
    %2471 = "ttir.transpose"(%2469, %2470) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1836)
    %2472 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1837)
    %2473 = "ttir.transpose"(%2471, %2472) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1837)
    %2474 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc248)
    %2475 = "ttir.multiply"(%2473, %arg252, %2474) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc248)
    %2476 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc249)
    %2477 = "ttir.add"(%2475, %arg253, %2476) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc249)
    %2478 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1720)
    %2479 = "ttir.sigmoid"(%2477, %2478) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1720)
    %2480 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1721)
    %2481 = "ttir.multiply"(%2477, %2479, %2480) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1721)
    %2482 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1564)
    %2483 = "ttir.add"(%2429, %2481, %2482) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1564)
    %2484 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1565)
    %2485 = "ttir.transpose"(%2411, %2484) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1565)
    %2486 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1566)
    %2487 = "ttir.transpose"(%2485, %2486) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1566)
    %2488 = ttir.empty() : tensor<1x40x40x128xbf16> loc(#loc1567)
    %2489 = "ttir.conv2d"(%2487, %arg446, %2488) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x256xbf16>, tensor<128x256x1x1xbf16>, tensor<1x40x40x128xbf16>) -> tensor<1x40x40x128xbf16> loc(#loc1567)
    %2490 = ttir.empty() : tensor<1x40x128x40xbf16> loc(#loc1568)
    %2491 = "ttir.transpose"(%2489, %2490) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x128xbf16>, tensor<1x40x128x40xbf16>) -> tensor<1x40x128x40xbf16> loc(#loc1568)
    %2492 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1569)
    %2493 = "ttir.transpose"(%2491, %2492) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x128x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1569)
    %2494 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc250)
    %2495 = "ttir.multiply"(%2493, %arg254, %2494) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc250)
    %2496 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc251)
    %2497 = "ttir.add"(%2495, %arg255, %2496) : (tensor<1x128x40x40xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc251)
    %2498 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1243)
    %2499 = "ttir.sigmoid"(%2497, %2498) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1243)
    %2500 = ttir.empty() : tensor<1x128x40x40xbf16> loc(#loc1244)
    %2501 = "ttir.multiply"(%2497, %2499, %2500) : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>) -> tensor<1x128x40x40xbf16> loc(#loc1244)
    %2502 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc928)
    %2503 = "ttir.concat"(%2483, %2501, %2502) <{dim = -3 : si32}> : (tensor<1x128x40x40xbf16>, tensor<1x128x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc928)
    %2504 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1570)
    %2505 = "ttir.transpose"(%2503, %2504) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1570)
    %2506 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1571)
    %2507 = "ttir.transpose"(%2505, %2506) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1571)
    %2508 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1572)
    %2509 = "ttir.conv2d"(%2507, %arg447, %2508) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x256xbf16>, tensor<256x256x1x1xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1572)
    %2510 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1573)
    %2511 = "ttir.transpose"(%2509, %2510) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x256xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1573)
    %2512 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc1574)
    %2513 = "ttir.transpose"(%2511, %2512) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc1574)
    %2514 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc252)
    %2515 = "ttir.multiply"(%2513, %arg256, %2514) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc252)
    %2516 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc253)
    %2517 = "ttir.add"(%2515, %arg257, %2516) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc253)
    %2518 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc1246)
    %2519 = "ttir.sigmoid"(%2517, %2518) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc1246)
    %2520 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc1247)
    %2521 = "ttir.multiply"(%2517, %2519, %2520) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc1247)
    %2522 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1248)
    %2523 = "ttir.transpose"(%2521, %2522) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1248)
    %2524 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1249)
    %2525 = "ttir.transpose"(%2523, %2524) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1249)
    %2526 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1250)
    %2527 = "ttir.conv2d"(%2525, %arg448, %2526) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x256xbf16>, tensor<256x256x3x3xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1250)
    %2528 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1251)
    %2529 = "ttir.transpose"(%2527, %2528) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x256xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1251)
    %2530 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc1252)
    %2531 = "ttir.transpose"(%2529, %2530) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc1252)
    %2532 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc254)
    %2533 = "ttir.multiply"(%2531, %arg258, %2532) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc254)
    %2534 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc255)
    %2535 = "ttir.add"(%2533, %arg259, %2534) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc255)
    %2536 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc931)
    %2537 = "ttir.sigmoid"(%2535, %2536) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc931)
    %2538 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc932)
    %2539 = "ttir.multiply"(%2535, %2537, %2538) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc932)
    %2540 = ttir.empty() : tensor<1x1024x40x40xbf16> loc(#loc470)
    %2541 = "ttir.concat"(%2281, %2283, %2411, %2539, %2540) <{dim = -3 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>, tensor<1x1024x40x40xbf16>) -> tensor<1x1024x40x40xbf16> loc(#loc470)
    %2542 = ttir.empty() : tensor<1x40x1024x40xbf16> loc(#loc933)
    %2543 = "ttir.transpose"(%2541, %2542) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x1024x40x40xbf16>, tensor<1x40x1024x40xbf16>) -> tensor<1x40x1024x40xbf16> loc(#loc933)
    %2544 = ttir.empty() : tensor<1x40x40x1024xbf16> loc(#loc934)
    %2545 = "ttir.transpose"(%2543, %2544) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x1024x40xbf16>, tensor<1x40x40x1024xbf16>) -> tensor<1x40x40x1024xbf16> loc(#loc934)
    %2546 = ttir.empty() : tensor<1x40x40x512xbf16> loc(#loc935)
    %2547 = "ttir.conv2d"(%2545, %arg449, %2546) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x1024xbf16>, tensor<512x1024x1x1xbf16>, tensor<1x40x40x512xbf16>) -> tensor<1x40x40x512xbf16> loc(#loc935)
    %2548 = ttir.empty() : tensor<1x40x512x40xbf16> loc(#loc936)
    %2549 = "ttir.transpose"(%2547, %2548) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x512xbf16>, tensor<1x40x512x40xbf16>) -> tensor<1x40x512x40xbf16> loc(#loc936)
    %2550 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc937)
    %2551 = "ttir.transpose"(%2549, %2550) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x512x40xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc937)
    %2552 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc256)
    %2553 = "ttir.multiply"(%2551, %arg260, %2552) : (tensor<1x512x40x40xbf16>, tensor<1x512x1x1xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc256)
    %2554 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc257)
    %2555 = "ttir.add"(%2553, %arg261, %2554) : (tensor<1x512x40x40xbf16>, tensor<1x512x1x1xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc257)
    %2556 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc649)
    %2557 = "ttir.sigmoid"(%2555, %2556) : (tensor<1x512x40x40xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc649)
    %2558 = ttir.empty() : tensor<1x512x40x40xbf16> loc(#loc650)
    %2559 = "ttir.multiply"(%2555, %2557, %2558) : (tensor<1x512x40x40xbf16>, tensor<1x512x40x40xbf16>, tensor<1x512x40x40xbf16>) -> tensor<1x512x40x40xbf16> loc(#loc650)
    %2560 = ttir.empty() : tensor<1x40x512x40xbf16> loc(#loc1253)
    %2561 = "ttir.transpose"(%2559, %2560) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x512x40x40xbf16>, tensor<1x40x512x40xbf16>) -> tensor<1x40x512x40xbf16> loc(#loc1253)
    %2562 = ttir.empty() : tensor<1x40x40x512xbf16> loc(#loc1254)
    %2563 = "ttir.transpose"(%2561, %2562) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x512x40xbf16>, tensor<1x40x40x512xbf16>) -> tensor<1x40x40x512xbf16> loc(#loc1254)
    %2564 = ttir.empty() : tensor<1x40x40x64xbf16> loc(#loc1255)
    %2565 = "ttir.conv2d"(%2563, %arg450, %2564) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x512xbf16>, tensor<64x512x3x3xbf16>, tensor<1x40x40x64xbf16>) -> tensor<1x40x40x64xbf16> loc(#loc1255)
    %2566 = ttir.empty() : tensor<1x40x64x40xbf16> loc(#loc1256)
    %2567 = "ttir.transpose"(%2565, %2566) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x64xbf16>, tensor<1x40x64x40xbf16>) -> tensor<1x40x64x40xbf16> loc(#loc1256)
    %2568 = ttir.empty() : tensor<1x64x40x40xbf16> loc(#loc1257)
    %2569 = "ttir.transpose"(%2567, %2568) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x64x40xbf16>, tensor<1x64x40x40xbf16>) -> tensor<1x64x40x40xbf16> loc(#loc1257)
    %2570 = ttir.empty() : tensor<1x64x40x40xbf16> loc(#loc258)
    %2571 = "ttir.multiply"(%2569, %arg262, %2570) : (tensor<1x64x40x40xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x40x40xbf16>) -> tensor<1x64x40x40xbf16> loc(#loc258)
    %2572 = ttir.empty() : tensor<1x64x40x40xbf16> loc(#loc259)
    %2573 = "ttir.add"(%2571, %arg263, %2572) : (tensor<1x64x40x40xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x40x40xbf16>) -> tensor<1x64x40x40xbf16> loc(#loc259)
    %2574 = ttir.empty() : tensor<1x64x40x40xbf16> loc(#loc939)
    %2575 = "ttir.sigmoid"(%2573, %2574) : (tensor<1x64x40x40xbf16>, tensor<1x64x40x40xbf16>) -> tensor<1x64x40x40xbf16> loc(#loc939)
    %2576 = ttir.empty() : tensor<1x64x40x40xbf16> loc(#loc940)
    %2577 = "ttir.multiply"(%2573, %2575, %2576) : (tensor<1x64x40x40xbf16>, tensor<1x64x40x40xbf16>, tensor<1x64x40x40xbf16>) -> tensor<1x64x40x40xbf16> loc(#loc940)
    %2578 = ttir.empty() : tensor<1x40x64x40xbf16> loc(#loc1258)
    %2579 = "ttir.transpose"(%2577, %2578) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x64x40x40xbf16>, tensor<1x40x64x40xbf16>) -> tensor<1x40x64x40xbf16> loc(#loc1258)
    %2580 = ttir.empty() : tensor<1x40x40x64xbf16> loc(#loc1259)
    %2581 = "ttir.transpose"(%2579, %2580) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x64x40xbf16>, tensor<1x40x40x64xbf16>) -> tensor<1x40x40x64xbf16> loc(#loc1259)
    %2582 = ttir.empty() : tensor<1x40x40x64xbf16> loc(#loc1260)
    %2583 = "ttir.conv2d"(%2581, %arg451, %2582) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x64xbf16>, tensor<64x64x3x3xbf16>, tensor<1x40x40x64xbf16>) -> tensor<1x40x40x64xbf16> loc(#loc1260)
    %2584 = ttir.empty() : tensor<1x40x64x40xbf16> loc(#loc1261)
    %2585 = "ttir.transpose"(%2583, %2584) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x64xbf16>, tensor<1x40x64x40xbf16>) -> tensor<1x40x64x40xbf16> loc(#loc1261)
    %2586 = ttir.empty() : tensor<1x64x40x40xbf16> loc(#loc1262)
    %2587 = "ttir.transpose"(%2585, %2586) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x64x40xbf16>, tensor<1x64x40x40xbf16>) -> tensor<1x64x40x40xbf16> loc(#loc1262)
    %2588 = ttir.empty() : tensor<1x64x40x40xbf16> loc(#loc260)
    %2589 = "ttir.multiply"(%2587, %arg264, %2588) : (tensor<1x64x40x40xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x40x40xbf16>) -> tensor<1x64x40x40xbf16> loc(#loc260)
    %2590 = ttir.empty() : tensor<1x64x40x40xbf16> loc(#loc261)
    %2591 = "ttir.add"(%2589, %arg265, %2590) : (tensor<1x64x40x40xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x40x40xbf16>) -> tensor<1x64x40x40xbf16> loc(#loc261)
    %2592 = ttir.empty() : tensor<1x64x40x40xbf16> loc(#loc942)
    %2593 = "ttir.sigmoid"(%2591, %2592) : (tensor<1x64x40x40xbf16>, tensor<1x64x40x40xbf16>) -> tensor<1x64x40x40xbf16> loc(#loc942)
    %2594 = ttir.empty() : tensor<1x64x40x40xbf16> loc(#loc943)
    %2595 = "ttir.multiply"(%2591, %2593, %2594) : (tensor<1x64x40x40xbf16>, tensor<1x64x40x40xbf16>, tensor<1x64x40x40xbf16>) -> tensor<1x64x40x40xbf16> loc(#loc943)
    %2596 = ttir.empty() : tensor<1x40x64x40xbf16> loc(#loc944)
    %2597 = "ttir.transpose"(%2595, %2596) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x64x40x40xbf16>, tensor<1x40x64x40xbf16>) -> tensor<1x40x64x40xbf16> loc(#loc944)
    %2598 = ttir.empty() : tensor<1x40x40x64xbf16> loc(#loc945)
    %2599 = "ttir.transpose"(%2597, %2598) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x64x40xbf16>, tensor<1x40x40x64xbf16>) -> tensor<1x40x40x64xbf16> loc(#loc945)
    %2600 = ttir.empty() : tensor<1x40x40x64xbf16> loc(#loc946)
    %2601 = "ttir.conv2d"(%2599, %arg452, %arg453, %2600) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x64xbf16>, tensor<64x64x1x1xbf16>, tensor<1x1x1x64xbf16>, tensor<1x40x40x64xbf16>) -> tensor<1x40x40x64xbf16> loc(#loc946)
    %2602 = ttir.empty() : tensor<1x40x64x40xbf16> loc(#loc947)
    %2603 = "ttir.transpose"(%2601, %2602) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x64xbf16>, tensor<1x40x64x40xbf16>) -> tensor<1x40x64x40xbf16> loc(#loc947)
    %2604 = ttir.empty() : tensor<1x64x40x40xbf16> loc(#loc948)
    %2605 = "ttir.transpose"(%2603, %2604) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x64x40xbf16>, tensor<1x64x40x40xbf16>) -> tensor<1x64x40x40xbf16> loc(#loc948)
    %2606 = ttir.empty() : tensor<1x40x512x40xbf16> loc(#loc1263)
    %2607 = "ttir.transpose"(%2559, %2606) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x512x40x40xbf16>, tensor<1x40x512x40xbf16>) -> tensor<1x40x512x40xbf16> loc(#loc1263)
    %2608 = ttir.empty() : tensor<1x40x40x512xbf16> loc(#loc1264)
    %2609 = "ttir.transpose"(%2607, %2608) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x512x40xbf16>, tensor<1x40x40x512xbf16>) -> tensor<1x40x40x512xbf16> loc(#loc1264)
    %2610 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1265)
    %2611 = "ttir.conv2d"(%2609, %arg454, %2610) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x512xbf16>, tensor<256x512x3x3xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1265)
    %2612 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1266)
    %2613 = "ttir.transpose"(%2611, %2612) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x256xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1266)
    %2614 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc1267)
    %2615 = "ttir.transpose"(%2613, %2614) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc1267)
    %2616 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc262)
    %2617 = "ttir.multiply"(%2615, %arg266, %2616) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc262)
    %2618 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc263)
    %2619 = "ttir.add"(%2617, %arg267, %2618) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc263)
    %2620 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc950)
    %2621 = "ttir.sigmoid"(%2619, %2620) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc950)
    %2622 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc951)
    %2623 = "ttir.multiply"(%2619, %2621, %2622) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc951)
    %2624 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1268)
    %2625 = "ttir.transpose"(%2623, %2624) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1268)
    %2626 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1269)
    %2627 = "ttir.transpose"(%2625, %2626) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1269)
    %2628 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc1270)
    %2629 = "ttir.conv2d"(%2627, %arg455, %2628) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x256xbf16>, tensor<256x256x3x3xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc1270)
    %2630 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc1271)
    %2631 = "ttir.transpose"(%2629, %2630) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x256xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc1271)
    %2632 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc1272)
    %2633 = "ttir.transpose"(%2631, %2632) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc1272)
    %2634 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc264)
    %2635 = "ttir.multiply"(%2633, %arg268, %2634) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc264)
    %2636 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc265)
    %2637 = "ttir.add"(%2635, %arg269, %2636) : (tensor<1x256x40x40xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc265)
    %2638 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc953)
    %2639 = "ttir.sigmoid"(%2637, %2638) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc953)
    %2640 = ttir.empty() : tensor<1x256x40x40xbf16> loc(#loc954)
    %2641 = "ttir.multiply"(%2637, %2639, %2640) : (tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>, tensor<1x256x40x40xbf16>) -> tensor<1x256x40x40xbf16> loc(#loc954)
    %2642 = ttir.empty() : tensor<1x40x256x40xbf16> loc(#loc955)
    %2643 = "ttir.transpose"(%2641, %2642) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x40x40xbf16>, tensor<1x40x256x40xbf16>) -> tensor<1x40x256x40xbf16> loc(#loc955)
    %2644 = ttir.empty() : tensor<1x40x40x256xbf16> loc(#loc956)
    %2645 = "ttir.transpose"(%2643, %2644) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x256x40xbf16>, tensor<1x40x40x256xbf16>) -> tensor<1x40x40x256xbf16> loc(#loc956)
    %2646 = ttir.empty() : tensor<1x40x40x80xbf16> loc(#loc957)
    %2647 = "ttir.conv2d"(%2645, %arg456, %arg457, %2646) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x256xbf16>, tensor<80x256x1x1xbf16>, tensor<1x1x1x80xbf16>, tensor<1x40x40x80xbf16>) -> tensor<1x40x40x80xbf16> loc(#loc957)
    %2648 = ttir.empty() : tensor<1x40x80x40xbf16> loc(#loc958)
    %2649 = "ttir.transpose"(%2647, %2648) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x80xbf16>, tensor<1x40x80x40xbf16>) -> tensor<1x40x80x40xbf16> loc(#loc958)
    %2650 = ttir.empty() : tensor<1x80x40x40xbf16> loc(#loc959)
    %2651 = "ttir.transpose"(%2649, %2650) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x80x40xbf16>, tensor<1x80x40x40xbf16>) -> tensor<1x80x40x40xbf16> loc(#loc959)
    %2652 = ttir.empty() : tensor<1x144x40x40xbf16> loc(#loc474)
    %2653 = "ttir.concat"(%2605, %2651, %2652) <{dim = -3 : si32}> : (tensor<1x64x40x40xbf16>, tensor<1x80x40x40xbf16>, tensor<1x144x40x40xbf16>) -> tensor<1x144x40x40xbf16> loc(#loc474)
    %2654 = ttir.empty() : tensor<1x144x1600xbf16> loc(#loc475)
    %2655 = "ttir.reshape"(%2653, %2654) <{shape = [1 : i32, 144 : i32, 1600 : i32]}> : (tensor<1x144x40x40xbf16>, tensor<1x144x1600xbf16>) -> tensor<1x144x1600xbf16> loc(#loc475)
    %2656 = ttir.empty() : tensor<1x40x512x40xbf16> loc(#loc476)
    %2657 = "ttir.transpose"(%2559, %2656) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x512x40x40xbf16>, tensor<1x40x512x40xbf16>) -> tensor<1x40x512x40xbf16> loc(#loc476)
    %2658 = ttir.empty() : tensor<1x40x40x512xbf16> loc(#loc477)
    %2659 = "ttir.transpose"(%2657, %2658) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x512x40xbf16>, tensor<1x40x40x512xbf16>) -> tensor<1x40x40x512xbf16> loc(#loc477)
    %2660 = ttir.empty() : tensor<1x39x39x512xbf16> loc(#loc478)
    %2661 = "ttir.conv2d"(%2659, %arg270, %2660) <{dilation = array<i32: 1, 1>, groups = 512 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x512xbf16>, tensor<512x1x2x2xbf16>, tensor<1x39x39x512xbf16>) -> tensor<1x39x39x512xbf16> loc(#loc478)
    %2662 = ttir.empty() : tensor<1x39x512x39xbf16> loc(#loc479)
    %2663 = "ttir.transpose"(%2661, %2662) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x39x39x512xbf16>, tensor<1x39x512x39xbf16>) -> tensor<1x39x512x39xbf16> loc(#loc479)
    %2664 = ttir.empty() : tensor<1x512x39x39xbf16> loc(#loc480)
    %2665 = "ttir.transpose"(%2663, %2664) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x39x512x39xbf16>, tensor<1x512x39x39xbf16>) -> tensor<1x512x39x39xbf16> loc(#loc480)
    %2666 = ttir.empty() : tensor<1x256x39x39xbf16> loc(#loc481)
    %2667 = "ttir.index"(%2665, %2666) <{begin = 0 : i32, dim = 1 : i32, end = 256 : i32, step = 1 : i32}> : (tensor<1x512x39x39xbf16>, tensor<1x256x39x39xbf16>) -> tensor<1x256x39x39xbf16> loc(#loc481)
    %2668 = ttir.empty() : tensor<1x39x256x39xbf16> loc(#loc960)
    %2669 = "ttir.transpose"(%2667, %2668) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x39x39xbf16>, tensor<1x39x256x39xbf16>) -> tensor<1x39x256x39xbf16> loc(#loc960)
    %2670 = ttir.empty() : tensor<1x39x39x256xbf16> loc(#loc961)
    %2671 = "ttir.transpose"(%2669, %2670) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x39x256x39xbf16>, tensor<1x39x39x256xbf16>) -> tensor<1x39x39x256xbf16> loc(#loc961)
    %2672 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc962)
    %2673 = "ttir.conv2d"(%2671, %arg458, %2672) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 2, 2>}> {channel_last = 1 : si32} : (tensor<1x39x39x256xbf16>, tensor<256x256x3x3xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc962)
    %2674 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc963)
    %2675 = "ttir.transpose"(%2673, %2674) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x256xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc963)
    %2676 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc964)
    %2677 = "ttir.transpose"(%2675, %2676) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc964)
    %2678 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc266)
    %2679 = "ttir.multiply"(%2677, %arg271, %2678) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc266)
    %2680 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc267)
    %2681 = "ttir.add"(%2679, %arg272, %2680) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc267)
    %2682 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc658)
    %2683 = "ttir.sigmoid"(%2681, %2682) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc658)
    %2684 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc659)
    %2685 = "ttir.multiply"(%2681, %2683, %2684) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc659)
    %2686 = ttir.empty() : tensor<1x256x39x39xbf16> loc(#loc483)
    %2687 = "ttir.index"(%2665, %2686) <{begin = 256 : i32, dim = 1 : i32, end = 512 : i32, step = 1 : i32}> : (tensor<1x512x39x39xbf16>, tensor<1x256x39x39xbf16>) -> tensor<1x256x39x39xbf16> loc(#loc483)
    %2688 = ttir.empty() : tensor<1x39x256x39xbf16> loc(#loc484)
    %2689 = "ttir.transpose"(%2687, %2688) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x39x39xbf16>, tensor<1x39x256x39xbf16>) -> tensor<1x39x256x39xbf16> loc(#loc484)
    %2690 = ttir.empty() : tensor<1x39x39x256xbf16> loc(#loc485)
    %2691 = "ttir.transpose"(%2689, %2690) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x39x256x39xbf16>, tensor<1x39x39x256xbf16>) -> tensor<1x39x39x256xbf16> loc(#loc485)
    %2692 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc486)
    %2693 = "ttir.max_pool2d"(%2691, %2692) <{ceil_mode = false, dilation_height = 1 : si32, dilation_width = 1 : si32, kernel_height = 3 : si32, kernel_width = 3 : si32, padding_bottom = 1 : si32, padding_left = 1 : si32, padding_right = 1 : si32, padding_top = 1 : si32, stride_height = 2 : si32, stride_width = 2 : si32}> {channel_last = true} : (tensor<1x39x39x256xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc486)
    %2694 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc487)
    %2695 = "ttir.transpose"(%2693, %2694) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x256xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc487)
    %2696 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc488)
    %2697 = "ttir.transpose"(%2695, %2696) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc488)
    %2698 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc965)
    %2699 = "ttir.transpose"(%2697, %2698) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x20x20xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc965)
    %2700 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc966)
    %2701 = "ttir.transpose"(%2699, %2700) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc966)
    %2702 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc967)
    %2703 = "ttir.conv2d"(%2701, %arg459, %2702) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x256xbf16>, tensor<256x256x1x1xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc967)
    %2704 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc968)
    %2705 = "ttir.transpose"(%2703, %2704) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x256xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc968)
    %2706 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc969)
    %2707 = "ttir.transpose"(%2705, %2706) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc969)
    %2708 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc268)
    %2709 = "ttir.multiply"(%2707, %arg273, %2708) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc268)
    %2710 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc269)
    %2711 = "ttir.add"(%2709, %arg274, %2710) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc269)
    %2712 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc661)
    %2713 = "ttir.sigmoid"(%2711, %2712) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc661)
    %2714 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc662)
    %2715 = "ttir.multiply"(%2711, %2713, %2714) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc662)
    %2716 = ttir.empty() : tensor<1x512x20x20xbf16> loc(#loc490)
    %2717 = "ttir.concat"(%2685, %2715, %2716) <{dim = -3 : si32}> : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>, tensor<1x512x20x20xbf16>) -> tensor<1x512x20x20xbf16> loc(#loc490)
    %2718 = ttir.empty() : tensor<1x1024x20x20xbf16> loc(#loc491)
    %2719 = "ttir.concat"(%2717, %1481, %2718) <{dim = -3 : si32}> : (tensor<1x512x20x20xbf16>, tensor<1x512x20x20xbf16>, tensor<1x1024x20x20xbf16>) -> tensor<1x1024x20x20xbf16> loc(#loc491)
    %2720 = ttir.empty() : tensor<1x20x1024x20xbf16> loc(#loc970)
    %2721 = "ttir.transpose"(%2719, %2720) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x1024x20x20xbf16>, tensor<1x20x1024x20xbf16>) -> tensor<1x20x1024x20xbf16> loc(#loc970)
    %2722 = ttir.empty() : tensor<1x20x20x1024xbf16> loc(#loc971)
    %2723 = "ttir.transpose"(%2721, %2722) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x1024x20xbf16>, tensor<1x20x20x1024xbf16>) -> tensor<1x20x20x1024xbf16> loc(#loc971)
    %2724 = ttir.empty() : tensor<1x20x20x512xbf16> loc(#loc972)
    %2725 = "ttir.conv2d"(%2723, %arg460, %2724) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x1024xbf16>, tensor<512x1024x1x1xbf16>, tensor<1x20x20x512xbf16>) -> tensor<1x20x20x512xbf16> loc(#loc972)
    %2726 = ttir.empty() : tensor<1x20x512x20xbf16> loc(#loc973)
    %2727 = "ttir.transpose"(%2725, %2726) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x512xbf16>, tensor<1x20x512x20xbf16>) -> tensor<1x20x512x20xbf16> loc(#loc973)
    %2728 = ttir.empty() : tensor<1x512x20x20xbf16> loc(#loc974)
    %2729 = "ttir.transpose"(%2727, %2728) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x512x20xbf16>, tensor<1x512x20x20xbf16>) -> tensor<1x512x20x20xbf16> loc(#loc974)
    %2730 = ttir.empty() : tensor<1x512x20x20xbf16> loc(#loc270)
    %2731 = "ttir.multiply"(%2729, %arg275, %2730) : (tensor<1x512x20x20xbf16>, tensor<1x512x1x1xbf16>, tensor<1x512x20x20xbf16>) -> tensor<1x512x20x20xbf16> loc(#loc270)
    %2732 = ttir.empty() : tensor<1x512x20x20xbf16> loc(#loc271)
    %2733 = "ttir.add"(%2731, %arg276, %2732) : (tensor<1x512x20x20xbf16>, tensor<1x512x1x1xbf16>, tensor<1x512x20x20xbf16>) -> tensor<1x512x20x20xbf16> loc(#loc271)
    %2734 = ttir.empty() : tensor<1x512x20x20xbf16> loc(#loc664)
    %2735 = "ttir.sigmoid"(%2733, %2734) : (tensor<1x512x20x20xbf16>, tensor<1x512x20x20xbf16>) -> tensor<1x512x20x20xbf16> loc(#loc664)
    %2736 = ttir.empty() : tensor<1x512x20x20xbf16> loc(#loc665)
    %2737 = "ttir.multiply"(%2733, %2735, %2736) : (tensor<1x512x20x20xbf16>, tensor<1x512x20x20xbf16>, tensor<1x512x20x20xbf16>) -> tensor<1x512x20x20xbf16> loc(#loc665)
    %2738 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc493)
    %2739 = "ttir.index"(%2737, %2738) <{begin = 0 : i32, dim = 1 : i32, end = 256 : i32, step = 1 : i32}> : (tensor<1x512x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc493)
    %2740 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc494)
    %2741 = "ttir.index"(%2737, %2740) <{begin = 256 : i32, dim = 1 : i32, end = 512 : i32, step = 1 : i32}> : (tensor<1x512x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc494)
    %2742 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc1575)
    %2743 = "ttir.transpose"(%2741, %2742) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x20x20xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc1575)
    %2744 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc1576)
    %2745 = "ttir.transpose"(%2743, %2744) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc1576)
    %2746 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc1577)
    %2747 = "ttir.conv2d"(%2745, %arg461, %2746) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x256xbf16>, tensor<128x256x1x1xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc1577)
    %2748 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc1578)
    %2749 = "ttir.transpose"(%2747, %2748) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x128xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc1578)
    %2750 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1579)
    %2751 = "ttir.transpose"(%2749, %2750) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1579)
    %2752 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc272)
    %2753 = "ttir.multiply"(%2751, %arg277, %2752) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc272)
    %2754 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc273)
    %2755 = "ttir.add"(%2753, %arg278, %2754) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc273)
    %2756 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1274)
    %2757 = "ttir.sigmoid"(%2755, %2756) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1274)
    %2758 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1275)
    %2759 = "ttir.multiply"(%2755, %2757, %2758) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1275)
    %2760 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc1992)
    %2761 = "ttir.transpose"(%2759, %2760) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x20x20xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc1992)
    %2762 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc1993)
    %2763 = "ttir.transpose"(%2761, %2762) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc1993)
    %2764 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc1994)
    %2765 = "ttir.conv2d"(%2763, %arg462, %2764) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x128xbf16>, tensor<128x128x3x3xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc1994)
    %2766 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc1995)
    %2767 = "ttir.transpose"(%2765, %2766) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x128xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc1995)
    %2768 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1996)
    %2769 = "ttir.transpose"(%2767, %2768) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1996)
    %2770 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc274)
    %2771 = "ttir.multiply"(%2769, %arg279, %2770) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc274)
    %2772 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc275)
    %2773 = "ttir.add"(%2771, %arg280, %2772) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc275)
    %2774 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc1997)
    %2775 = "ttir.transpose"(%2759, %2774) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x20x20xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc1997)
    %2776 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc1998)
    %2777 = "ttir.transpose"(%2775, %2776) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc1998)
    %2778 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc1999)
    %2779 = "ttir.conv2d"(%2777, %arg463, %2778) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x128xbf16>, tensor<128x128x1x1xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc1999)
    %2780 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc2000)
    %2781 = "ttir.transpose"(%2779, %2780) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x128xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc2000)
    %2782 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc2001)
    %2783 = "ttir.transpose"(%2781, %2782) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc2001)
    %2784 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc276)
    %2785 = "ttir.multiply"(%2783, %arg281, %2784) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc276)
    %2786 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc277)
    %2787 = "ttir.add"(%2785, %arg282, %2786) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc277)
    %2788 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1724)
    %2789 = "ttir.add"(%2773, %2787, %2788) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1724)
    %2790 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1725)
    %2791 = "ttir.sigmoid"(%2789, %2790) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1725)
    %2792 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1726)
    %2793 = "ttir.multiply"(%2789, %2791, %2792) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1726)
    %2794 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc1840)
    %2795 = "ttir.transpose"(%2793, %2794) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x20x20xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc1840)
    %2796 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc1841)
    %2797 = "ttir.transpose"(%2795, %2796) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc1841)
    %2798 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc1842)
    %2799 = "ttir.conv2d"(%2797, %arg464, %2798) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x128xbf16>, tensor<128x128x3x3xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc1842)
    %2800 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc1843)
    %2801 = "ttir.transpose"(%2799, %2800) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x128xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc1843)
    %2802 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1844)
    %2803 = "ttir.transpose"(%2801, %2802) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1844)
    %2804 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc278)
    %2805 = "ttir.multiply"(%2803, %arg283, %2804) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc278)
    %2806 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc279)
    %2807 = "ttir.add"(%2805, %arg284, %2806) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc279)
    %2808 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1728)
    %2809 = "ttir.sigmoid"(%2807, %2808) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1728)
    %2810 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1729)
    %2811 = "ttir.multiply"(%2807, %2809, %2810) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1729)
    %2812 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1582)
    %2813 = "ttir.add"(%2759, %2811, %2812) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1582)
    %2814 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc1583)
    %2815 = "ttir.transpose"(%2741, %2814) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x20x20xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc1583)
    %2816 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc1584)
    %2817 = "ttir.transpose"(%2815, %2816) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc1584)
    %2818 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc1585)
    %2819 = "ttir.conv2d"(%2817, %arg465, %2818) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x256xbf16>, tensor<128x256x1x1xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc1585)
    %2820 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc1586)
    %2821 = "ttir.transpose"(%2819, %2820) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x128xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc1586)
    %2822 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1587)
    %2823 = "ttir.transpose"(%2821, %2822) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1587)
    %2824 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc280)
    %2825 = "ttir.multiply"(%2823, %arg285, %2824) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc280)
    %2826 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc281)
    %2827 = "ttir.add"(%2825, %arg286, %2826) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc281)
    %2828 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1278)
    %2829 = "ttir.sigmoid"(%2827, %2828) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1278)
    %2830 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1279)
    %2831 = "ttir.multiply"(%2827, %2829, %2830) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1279)
    %2832 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc978)
    %2833 = "ttir.concat"(%2813, %2831, %2832) <{dim = -3 : si32}> : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc978)
    %2834 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc1588)
    %2835 = "ttir.transpose"(%2833, %2834) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x20x20xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc1588)
    %2836 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc1589)
    %2837 = "ttir.transpose"(%2835, %2836) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc1589)
    %2838 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc1590)
    %2839 = "ttir.conv2d"(%2837, %arg466, %2838) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x256xbf16>, tensor<256x256x1x1xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc1590)
    %2840 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc1591)
    %2841 = "ttir.transpose"(%2839, %2840) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x256xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc1591)
    %2842 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc1592)
    %2843 = "ttir.transpose"(%2841, %2842) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc1592)
    %2844 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc282)
    %2845 = "ttir.multiply"(%2843, %arg287, %2844) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc282)
    %2846 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc283)
    %2847 = "ttir.add"(%2845, %arg288, %2846) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc283)
    %2848 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc1281)
    %2849 = "ttir.sigmoid"(%2847, %2848) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc1281)
    %2850 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc1282)
    %2851 = "ttir.multiply"(%2847, %2849, %2850) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc1282)
    %2852 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc1283)
    %2853 = "ttir.transpose"(%2851, %2852) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x20x20xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc1283)
    %2854 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc1284)
    %2855 = "ttir.transpose"(%2853, %2854) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc1284)
    %2856 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc1285)
    %2857 = "ttir.conv2d"(%2855, %arg467, %2856) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x256xbf16>, tensor<256x256x3x3xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc1285)
    %2858 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc1286)
    %2859 = "ttir.transpose"(%2857, %2858) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x256xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc1286)
    %2860 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc1287)
    %2861 = "ttir.transpose"(%2859, %2860) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc1287)
    %2862 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc284)
    %2863 = "ttir.multiply"(%2861, %arg289, %2862) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc284)
    %2864 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc285)
    %2865 = "ttir.add"(%2863, %arg290, %2864) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc285)
    %2866 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc981)
    %2867 = "ttir.sigmoid"(%2865, %2866) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc981)
    %2868 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc982)
    %2869 = "ttir.multiply"(%2865, %2867, %2868) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc982)
    %2870 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc1593)
    %2871 = "ttir.transpose"(%2869, %2870) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x20x20xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc1593)
    %2872 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc1594)
    %2873 = "ttir.transpose"(%2871, %2872) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc1594)
    %2874 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc1595)
    %2875 = "ttir.conv2d"(%2873, %arg468, %2874) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x256xbf16>, tensor<128x256x1x1xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc1595)
    %2876 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc1596)
    %2877 = "ttir.transpose"(%2875, %2876) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x128xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc1596)
    %2878 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1597)
    %2879 = "ttir.transpose"(%2877, %2878) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1597)
    %2880 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc286)
    %2881 = "ttir.multiply"(%2879, %arg291, %2880) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc286)
    %2882 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc287)
    %2883 = "ttir.add"(%2881, %arg292, %2882) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc287)
    %2884 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1289)
    %2885 = "ttir.sigmoid"(%2883, %2884) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1289)
    %2886 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1290)
    %2887 = "ttir.multiply"(%2883, %2885, %2886) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1290)
    %2888 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc2002)
    %2889 = "ttir.transpose"(%2887, %2888) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x20x20xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc2002)
    %2890 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc2003)
    %2891 = "ttir.transpose"(%2889, %2890) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc2003)
    %2892 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc2004)
    %2893 = "ttir.conv2d"(%2891, %arg469, %2892) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x128xbf16>, tensor<128x128x3x3xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc2004)
    %2894 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc2005)
    %2895 = "ttir.transpose"(%2893, %2894) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x128xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc2005)
    %2896 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc2006)
    %2897 = "ttir.transpose"(%2895, %2896) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc2006)
    %2898 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc288)
    %2899 = "ttir.multiply"(%2897, %arg293, %2898) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc288)
    %2900 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc289)
    %2901 = "ttir.add"(%2899, %arg294, %2900) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc289)
    %2902 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc2007)
    %2903 = "ttir.transpose"(%2887, %2902) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x20x20xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc2007)
    %2904 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc2008)
    %2905 = "ttir.transpose"(%2903, %2904) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc2008)
    %2906 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc2009)
    %2907 = "ttir.conv2d"(%2905, %arg470, %2906) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x128xbf16>, tensor<128x128x1x1xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc2009)
    %2908 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc2010)
    %2909 = "ttir.transpose"(%2907, %2908) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x128xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc2010)
    %2910 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc2011)
    %2911 = "ttir.transpose"(%2909, %2910) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc2011)
    %2912 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc290)
    %2913 = "ttir.multiply"(%2911, %arg295, %2912) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc290)
    %2914 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc291)
    %2915 = "ttir.add"(%2913, %arg296, %2914) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc291)
    %2916 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1732)
    %2917 = "ttir.add"(%2901, %2915, %2916) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1732)
    %2918 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1733)
    %2919 = "ttir.sigmoid"(%2917, %2918) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1733)
    %2920 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1734)
    %2921 = "ttir.multiply"(%2917, %2919, %2920) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1734)
    %2922 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc1847)
    %2923 = "ttir.transpose"(%2921, %2922) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x128x20x20xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc1847)
    %2924 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc1848)
    %2925 = "ttir.transpose"(%2923, %2924) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc1848)
    %2926 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc1849)
    %2927 = "ttir.conv2d"(%2925, %arg471, %2926) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x128xbf16>, tensor<128x128x3x3xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc1849)
    %2928 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc1850)
    %2929 = "ttir.transpose"(%2927, %2928) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x128xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc1850)
    %2930 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1851)
    %2931 = "ttir.transpose"(%2929, %2930) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1851)
    %2932 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc292)
    %2933 = "ttir.multiply"(%2931, %arg297, %2932) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc292)
    %2934 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc293)
    %2935 = "ttir.add"(%2933, %arg298, %2934) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc293)
    %2936 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1736)
    %2937 = "ttir.sigmoid"(%2935, %2936) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1736)
    %2938 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1737)
    %2939 = "ttir.multiply"(%2935, %2937, %2938) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1737)
    %2940 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1600)
    %2941 = "ttir.add"(%2887, %2939, %2940) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1600)
    %2942 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc1601)
    %2943 = "ttir.transpose"(%2869, %2942) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x20x20xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc1601)
    %2944 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc1602)
    %2945 = "ttir.transpose"(%2943, %2944) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc1602)
    %2946 = ttir.empty() : tensor<1x20x20x128xbf16> loc(#loc1603)
    %2947 = "ttir.conv2d"(%2945, %arg472, %2946) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x256xbf16>, tensor<128x256x1x1xbf16>, tensor<1x20x20x128xbf16>) -> tensor<1x20x20x128xbf16> loc(#loc1603)
    %2948 = ttir.empty() : tensor<1x20x128x20xbf16> loc(#loc1604)
    %2949 = "ttir.transpose"(%2947, %2948) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x128xbf16>, tensor<1x20x128x20xbf16>) -> tensor<1x20x128x20xbf16> loc(#loc1604)
    %2950 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1605)
    %2951 = "ttir.transpose"(%2949, %2950) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x128x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1605)
    %2952 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc294)
    %2953 = "ttir.multiply"(%2951, %arg299, %2952) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc294)
    %2954 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc295)
    %2955 = "ttir.add"(%2953, %arg300, %2954) : (tensor<1x128x20x20xbf16>, tensor<1x128x1x1xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc295)
    %2956 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1293)
    %2957 = "ttir.sigmoid"(%2955, %2956) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1293)
    %2958 = ttir.empty() : tensor<1x128x20x20xbf16> loc(#loc1294)
    %2959 = "ttir.multiply"(%2955, %2957, %2958) : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>) -> tensor<1x128x20x20xbf16> loc(#loc1294)
    %2960 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc986)
    %2961 = "ttir.concat"(%2941, %2959, %2960) <{dim = -3 : si32}> : (tensor<1x128x20x20xbf16>, tensor<1x128x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc986)
    %2962 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc1606)
    %2963 = "ttir.transpose"(%2961, %2962) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x20x20xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc1606)
    %2964 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc1607)
    %2965 = "ttir.transpose"(%2963, %2964) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc1607)
    %2966 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc1608)
    %2967 = "ttir.conv2d"(%2965, %arg473, %2966) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x256xbf16>, tensor<256x256x1x1xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc1608)
    %2968 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc1609)
    %2969 = "ttir.transpose"(%2967, %2968) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x256xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc1609)
    %2970 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc1610)
    %2971 = "ttir.transpose"(%2969, %2970) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc1610)
    %2972 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc296)
    %2973 = "ttir.multiply"(%2971, %arg301, %2972) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc296)
    %2974 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc297)
    %2975 = "ttir.add"(%2973, %arg302, %2974) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc297)
    %2976 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc1296)
    %2977 = "ttir.sigmoid"(%2975, %2976) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc1296)
    %2978 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc1297)
    %2979 = "ttir.multiply"(%2975, %2977, %2978) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc1297)
    %2980 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc1298)
    %2981 = "ttir.transpose"(%2979, %2980) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x20x20xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc1298)
    %2982 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc1299)
    %2983 = "ttir.transpose"(%2981, %2982) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc1299)
    %2984 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc1300)
    %2985 = "ttir.conv2d"(%2983, %arg474, %2984) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x256xbf16>, tensor<256x256x3x3xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc1300)
    %2986 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc1301)
    %2987 = "ttir.transpose"(%2985, %2986) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x256xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc1301)
    %2988 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc1302)
    %2989 = "ttir.transpose"(%2987, %2988) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc1302)
    %2990 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc298)
    %2991 = "ttir.multiply"(%2989, %arg303, %2990) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc298)
    %2992 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc299)
    %2993 = "ttir.add"(%2991, %arg304, %2992) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc299)
    %2994 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc989)
    %2995 = "ttir.sigmoid"(%2993, %2994) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc989)
    %2996 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc990)
    %2997 = "ttir.multiply"(%2993, %2995, %2996) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc990)
    %2998 = ttir.empty() : tensor<1x1024x20x20xbf16> loc(#loc497)
    %2999 = "ttir.concat"(%2739, %2741, %2869, %2997, %2998) <{dim = -3 : si32}> : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>, tensor<1x1024x20x20xbf16>) -> tensor<1x1024x20x20xbf16> loc(#loc497)
    %3000 = ttir.empty() : tensor<1x20x1024x20xbf16> loc(#loc991)
    %3001 = "ttir.transpose"(%2999, %3000) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x1024x20x20xbf16>, tensor<1x20x1024x20xbf16>) -> tensor<1x20x1024x20xbf16> loc(#loc991)
    %3002 = ttir.empty() : tensor<1x20x20x1024xbf16> loc(#loc992)
    %3003 = "ttir.transpose"(%3001, %3002) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x1024x20xbf16>, tensor<1x20x20x1024xbf16>) -> tensor<1x20x20x1024xbf16> loc(#loc992)
    %3004 = ttir.empty() : tensor<1x20x20x512xbf16> loc(#loc993)
    %3005 = "ttir.conv2d"(%3003, %arg475, %3004) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x1024xbf16>, tensor<512x1024x1x1xbf16>, tensor<1x20x20x512xbf16>) -> tensor<1x20x20x512xbf16> loc(#loc993)
    %3006 = ttir.empty() : tensor<1x20x512x20xbf16> loc(#loc994)
    %3007 = "ttir.transpose"(%3005, %3006) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x512xbf16>, tensor<1x20x512x20xbf16>) -> tensor<1x20x512x20xbf16> loc(#loc994)
    %3008 = ttir.empty() : tensor<1x512x20x20xbf16> loc(#loc995)
    %3009 = "ttir.transpose"(%3007, %3008) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x512x20xbf16>, tensor<1x512x20x20xbf16>) -> tensor<1x512x20x20xbf16> loc(#loc995)
    %3010 = ttir.empty() : tensor<1x512x20x20xbf16> loc(#loc300)
    %3011 = "ttir.multiply"(%3009, %arg305, %3010) : (tensor<1x512x20x20xbf16>, tensor<1x512x1x1xbf16>, tensor<1x512x20x20xbf16>) -> tensor<1x512x20x20xbf16> loc(#loc300)
    %3012 = ttir.empty() : tensor<1x512x20x20xbf16> loc(#loc301)
    %3013 = "ttir.add"(%3011, %arg306, %3012) : (tensor<1x512x20x20xbf16>, tensor<1x512x1x1xbf16>, tensor<1x512x20x20xbf16>) -> tensor<1x512x20x20xbf16> loc(#loc301)
    %3014 = ttir.empty() : tensor<1x512x20x20xbf16> loc(#loc671)
    %3015 = "ttir.sigmoid"(%3013, %3014) : (tensor<1x512x20x20xbf16>, tensor<1x512x20x20xbf16>) -> tensor<1x512x20x20xbf16> loc(#loc671)
    %3016 = ttir.empty() : tensor<1x512x20x20xbf16> loc(#loc672)
    %3017 = "ttir.multiply"(%3013, %3015, %3016) : (tensor<1x512x20x20xbf16>, tensor<1x512x20x20xbf16>, tensor<1x512x20x20xbf16>) -> tensor<1x512x20x20xbf16> loc(#loc672)
    %3018 = ttir.empty() : tensor<1x20x512x20xbf16> loc(#loc1303)
    %3019 = "ttir.transpose"(%3017, %3018) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x512x20x20xbf16>, tensor<1x20x512x20xbf16>) -> tensor<1x20x512x20xbf16> loc(#loc1303)
    %3020 = ttir.empty() : tensor<1x20x20x512xbf16> loc(#loc1304)
    %3021 = "ttir.transpose"(%3019, %3020) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x512x20xbf16>, tensor<1x20x20x512xbf16>) -> tensor<1x20x20x512xbf16> loc(#loc1304)
    %3022 = ttir.empty() : tensor<1x20x20x64xbf16> loc(#loc1305)
    %3023 = "ttir.conv2d"(%3021, %arg476, %3022) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x512xbf16>, tensor<64x512x3x3xbf16>, tensor<1x20x20x64xbf16>) -> tensor<1x20x20x64xbf16> loc(#loc1305)
    %3024 = ttir.empty() : tensor<1x20x64x20xbf16> loc(#loc1306)
    %3025 = "ttir.transpose"(%3023, %3024) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x64xbf16>, tensor<1x20x64x20xbf16>) -> tensor<1x20x64x20xbf16> loc(#loc1306)
    %3026 = ttir.empty() : tensor<1x64x20x20xbf16> loc(#loc1307)
    %3027 = "ttir.transpose"(%3025, %3026) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x64x20xbf16>, tensor<1x64x20x20xbf16>) -> tensor<1x64x20x20xbf16> loc(#loc1307)
    %3028 = ttir.empty() : tensor<1x64x20x20xbf16> loc(#loc302)
    %3029 = "ttir.multiply"(%3027, %arg307, %3028) : (tensor<1x64x20x20xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x20x20xbf16>) -> tensor<1x64x20x20xbf16> loc(#loc302)
    %3030 = ttir.empty() : tensor<1x64x20x20xbf16> loc(#loc303)
    %3031 = "ttir.add"(%3029, %arg308, %3030) : (tensor<1x64x20x20xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x20x20xbf16>) -> tensor<1x64x20x20xbf16> loc(#loc303)
    %3032 = ttir.empty() : tensor<1x64x20x20xbf16> loc(#loc997)
    %3033 = "ttir.sigmoid"(%3031, %3032) : (tensor<1x64x20x20xbf16>, tensor<1x64x20x20xbf16>) -> tensor<1x64x20x20xbf16> loc(#loc997)
    %3034 = ttir.empty() : tensor<1x64x20x20xbf16> loc(#loc998)
    %3035 = "ttir.multiply"(%3031, %3033, %3034) : (tensor<1x64x20x20xbf16>, tensor<1x64x20x20xbf16>, tensor<1x64x20x20xbf16>) -> tensor<1x64x20x20xbf16> loc(#loc998)
    %3036 = ttir.empty() : tensor<1x20x64x20xbf16> loc(#loc1308)
    %3037 = "ttir.transpose"(%3035, %3036) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x64x20x20xbf16>, tensor<1x20x64x20xbf16>) -> tensor<1x20x64x20xbf16> loc(#loc1308)
    %3038 = ttir.empty() : tensor<1x20x20x64xbf16> loc(#loc1309)
    %3039 = "ttir.transpose"(%3037, %3038) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x64x20xbf16>, tensor<1x20x20x64xbf16>) -> tensor<1x20x20x64xbf16> loc(#loc1309)
    %3040 = ttir.empty() : tensor<1x20x20x64xbf16> loc(#loc1310)
    %3041 = "ttir.conv2d"(%3039, %arg477, %3040) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x64xbf16>, tensor<64x64x3x3xbf16>, tensor<1x20x20x64xbf16>) -> tensor<1x20x20x64xbf16> loc(#loc1310)
    %3042 = ttir.empty() : tensor<1x20x64x20xbf16> loc(#loc1311)
    %3043 = "ttir.transpose"(%3041, %3042) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x64xbf16>, tensor<1x20x64x20xbf16>) -> tensor<1x20x64x20xbf16> loc(#loc1311)
    %3044 = ttir.empty() : tensor<1x64x20x20xbf16> loc(#loc1312)
    %3045 = "ttir.transpose"(%3043, %3044) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x64x20xbf16>, tensor<1x64x20x20xbf16>) -> tensor<1x64x20x20xbf16> loc(#loc1312)
    %3046 = ttir.empty() : tensor<1x64x20x20xbf16> loc(#loc304)
    %3047 = "ttir.multiply"(%3045, %arg309, %3046) : (tensor<1x64x20x20xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x20x20xbf16>) -> tensor<1x64x20x20xbf16> loc(#loc304)
    %3048 = ttir.empty() : tensor<1x64x20x20xbf16> loc(#loc305)
    %3049 = "ttir.add"(%3047, %arg310, %3048) : (tensor<1x64x20x20xbf16>, tensor<1x64x1x1xbf16>, tensor<1x64x20x20xbf16>) -> tensor<1x64x20x20xbf16> loc(#loc305)
    %3050 = ttir.empty() : tensor<1x64x20x20xbf16> loc(#loc1000)
    %3051 = "ttir.sigmoid"(%3049, %3050) : (tensor<1x64x20x20xbf16>, tensor<1x64x20x20xbf16>) -> tensor<1x64x20x20xbf16> loc(#loc1000)
    %3052 = ttir.empty() : tensor<1x64x20x20xbf16> loc(#loc1001)
    %3053 = "ttir.multiply"(%3049, %3051, %3052) : (tensor<1x64x20x20xbf16>, tensor<1x64x20x20xbf16>, tensor<1x64x20x20xbf16>) -> tensor<1x64x20x20xbf16> loc(#loc1001)
    %3054 = ttir.empty() : tensor<1x20x64x20xbf16> loc(#loc1002)
    %3055 = "ttir.transpose"(%3053, %3054) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x64x20x20xbf16>, tensor<1x20x64x20xbf16>) -> tensor<1x20x64x20xbf16> loc(#loc1002)
    %3056 = ttir.empty() : tensor<1x20x20x64xbf16> loc(#loc1003)
    %3057 = "ttir.transpose"(%3055, %3056) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x64x20xbf16>, tensor<1x20x20x64xbf16>) -> tensor<1x20x20x64xbf16> loc(#loc1003)
    %3058 = ttir.empty() : tensor<1x20x20x64xbf16> loc(#loc1004)
    %3059 = "ttir.conv2d"(%3057, %arg478, %arg479, %3058) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x64xbf16>, tensor<64x64x1x1xbf16>, tensor<1x1x1x64xbf16>, tensor<1x20x20x64xbf16>) -> tensor<1x20x20x64xbf16> loc(#loc1004)
    %3060 = ttir.empty() : tensor<1x20x64x20xbf16> loc(#loc1005)
    %3061 = "ttir.transpose"(%3059, %3060) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x64xbf16>, tensor<1x20x64x20xbf16>) -> tensor<1x20x64x20xbf16> loc(#loc1005)
    %3062 = ttir.empty() : tensor<1x64x20x20xbf16> loc(#loc1006)
    %3063 = "ttir.transpose"(%3061, %3062) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x64x20xbf16>, tensor<1x64x20x20xbf16>) -> tensor<1x64x20x20xbf16> loc(#loc1006)
    %3064 = ttir.empty() : tensor<1x20x512x20xbf16> loc(#loc1313)
    %3065 = "ttir.transpose"(%3017, %3064) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x512x20x20xbf16>, tensor<1x20x512x20xbf16>) -> tensor<1x20x512x20xbf16> loc(#loc1313)
    %3066 = ttir.empty() : tensor<1x20x20x512xbf16> loc(#loc1314)
    %3067 = "ttir.transpose"(%3065, %3066) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x512x20xbf16>, tensor<1x20x20x512xbf16>) -> tensor<1x20x20x512xbf16> loc(#loc1314)
    %3068 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc1315)
    %3069 = "ttir.conv2d"(%3067, %arg480, %3068) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x512xbf16>, tensor<256x512x3x3xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc1315)
    %3070 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc1316)
    %3071 = "ttir.transpose"(%3069, %3070) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x256xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc1316)
    %3072 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc1317)
    %3073 = "ttir.transpose"(%3071, %3072) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc1317)
    %3074 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc306)
    %3075 = "ttir.multiply"(%3073, %arg311, %3074) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc306)
    %3076 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc307)
    %3077 = "ttir.add"(%3075, %arg312, %3076) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc307)
    %3078 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc1008)
    %3079 = "ttir.sigmoid"(%3077, %3078) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc1008)
    %3080 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc1009)
    %3081 = "ttir.multiply"(%3077, %3079, %3080) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc1009)
    %3082 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc1318)
    %3083 = "ttir.transpose"(%3081, %3082) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x20x20xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc1318)
    %3084 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc1319)
    %3085 = "ttir.transpose"(%3083, %3084) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc1319)
    %3086 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc1320)
    %3087 = "ttir.conv2d"(%3085, %arg481, %3086) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x256xbf16>, tensor<256x256x3x3xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc1320)
    %3088 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc1321)
    %3089 = "ttir.transpose"(%3087, %3088) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x256xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc1321)
    %3090 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc1322)
    %3091 = "ttir.transpose"(%3089, %3090) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc1322)
    %3092 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc308)
    %3093 = "ttir.multiply"(%3091, %arg313, %3092) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc308)
    %3094 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc309)
    %3095 = "ttir.add"(%3093, %arg314, %3094) : (tensor<1x256x20x20xbf16>, tensor<1x256x1x1xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc309)
    %3096 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc1011)
    %3097 = "ttir.sigmoid"(%3095, %3096) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc1011)
    %3098 = ttir.empty() : tensor<1x256x20x20xbf16> loc(#loc1012)
    %3099 = "ttir.multiply"(%3095, %3097, %3098) : (tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>, tensor<1x256x20x20xbf16>) -> tensor<1x256x20x20xbf16> loc(#loc1012)
    %3100 = ttir.empty() : tensor<1x20x256x20xbf16> loc(#loc1013)
    %3101 = "ttir.transpose"(%3099, %3100) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x256x20x20xbf16>, tensor<1x20x256x20xbf16>) -> tensor<1x20x256x20xbf16> loc(#loc1013)
    %3102 = ttir.empty() : tensor<1x20x20x256xbf16> loc(#loc1014)
    %3103 = "ttir.transpose"(%3101, %3102) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x256x20xbf16>, tensor<1x20x20x256xbf16>) -> tensor<1x20x20x256xbf16> loc(#loc1014)
    %3104 = ttir.empty() : tensor<1x20x20x80xbf16> loc(#loc1015)
    %3105 = "ttir.conv2d"(%3103, %arg482, %arg483, %3104) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x256xbf16>, tensor<80x256x1x1xbf16>, tensor<1x1x1x80xbf16>, tensor<1x20x20x80xbf16>) -> tensor<1x20x20x80xbf16> loc(#loc1015)
    %3106 = ttir.empty() : tensor<1x20x80x20xbf16> loc(#loc1016)
    %3107 = "ttir.transpose"(%3105, %3106) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x80xbf16>, tensor<1x20x80x20xbf16>) -> tensor<1x20x80x20xbf16> loc(#loc1016)
    %3108 = ttir.empty() : tensor<1x80x20x20xbf16> loc(#loc1017)
    %3109 = "ttir.transpose"(%3107, %3108) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x80x20xbf16>, tensor<1x80x20x20xbf16>) -> tensor<1x80x20x20xbf16> loc(#loc1017)
    %3110 = ttir.empty() : tensor<1x144x20x20xbf16> loc(#loc501)
    %3111 = "ttir.concat"(%3063, %3109, %3110) <{dim = -3 : si32}> : (tensor<1x64x20x20xbf16>, tensor<1x80x20x20xbf16>, tensor<1x144x20x20xbf16>) -> tensor<1x144x20x20xbf16> loc(#loc501)
    %3112 = ttir.empty() : tensor<1x144x400xbf16> loc(#loc502)
    %3113 = "ttir.reshape"(%3111, %3112) <{shape = [1 : i32, 144 : i32, 400 : i32]}> : (tensor<1x144x20x20xbf16>, tensor<1x144x400xbf16>) -> tensor<1x144x400xbf16> loc(#loc502)
    %3114 = ttir.empty() : tensor<1x144x8400xbf16> loc(#loc503)
    %3115 = "ttir.concat"(%2197, %2655, %3113, %3114) <{dim = -1 : si32}> : (tensor<1x144x6400xbf16>, tensor<1x144x1600xbf16>, tensor<1x144x400xbf16>, tensor<1x144x8400xbf16>) -> tensor<1x144x8400xbf16> loc(#loc503)
    %3116 = ttir.empty() : tensor<1x64x8400xbf16> loc(#loc504)
    %3117 = "ttir.index"(%3115, %3116) <{begin = 0 : i32, dim = 1 : i32, end = 64 : i32, step = 1 : i32}> : (tensor<1x144x8400xbf16>, tensor<1x64x8400xbf16>) -> tensor<1x64x8400xbf16> loc(#loc504)
    %3118 = ttir.empty() : tensor<1x4x16x8400xbf16> loc(#loc679)
    %3119 = "ttir.reshape"(%3117, %3118) <{shape = [1 : i32, 4 : i32, 16 : i32, 8400 : i32]}> : (tensor<1x64x8400xbf16>, tensor<1x4x16x8400xbf16>) -> tensor<1x4x16x8400xbf16> loc(#loc679)
    %3120 = ttir.empty() : tensor<1x16x4x8400xbf16> loc(#loc680)
    %3121 = "ttir.transpose"(%3119, %3120) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x4x16x8400xbf16>, tensor<1x16x4x8400xbf16>) -> tensor<1x16x4x8400xbf16> loc(#loc680)
    %3122 = ttir.empty() : tensor<1x16x4x8400xbf16> loc(#loc681)
    %3123 = "ttir.softmax"(%3121, %3122) <{dimension = 1 : si32}> : (tensor<1x16x4x8400xbf16>, tensor<1x16x4x8400xbf16>) -> tensor<1x16x4x8400xbf16> loc(#loc681)
    %3124 = ttir.empty() : tensor<1x4x16x8400xbf16> loc(#loc1018)
    %3125 = "ttir.transpose"(%3123, %3124) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x16x4x8400xbf16>, tensor<1x4x16x8400xbf16>) -> tensor<1x4x16x8400xbf16> loc(#loc1018)
    %3126 = ttir.empty() : tensor<1x4x8400x16xbf16> loc(#loc1019)
    %3127 = "ttir.transpose"(%3125, %3126) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x4x16x8400xbf16>, tensor<1x4x8400x16xbf16>) -> tensor<1x4x8400x16xbf16> loc(#loc1019)
    %3128 = ttir.empty() : tensor<1x4x8400x1xbf16> loc(#loc1020)
    %3129 = "ttir.conv2d"(%3127, %arg315, %3128) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x4x8400x16xbf16>, tensor<1x16x1x1xbf16>, tensor<1x4x8400x1xbf16>) -> tensor<1x4x8400x1xbf16> loc(#loc1020)
    %3130 = ttir.empty() : tensor<1x4x1x8400xbf16> loc(#loc1021)
    %3131 = "ttir.transpose"(%3129, %3130) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x4x8400x1xbf16>, tensor<1x4x1x8400xbf16>) -> tensor<1x4x1x8400xbf16> loc(#loc1021)
    %3132 = ttir.empty() : tensor<1x1x4x8400xbf16> loc(#loc1022)
    %3133 = "ttir.transpose"(%3131, %3132) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x4x1x8400xbf16>, tensor<1x1x4x8400xbf16>) -> tensor<1x1x4x8400xbf16> loc(#loc1022)
    %3134 = ttir.empty() : tensor<1x4x8400xbf16> loc(#loc683)
    %3135 = "ttir.squeeze"(%3133, %3134) <{dim = 0 : si32}> : (tensor<1x1x4x8400xbf16>, tensor<1x4x8400xbf16>) -> tensor<1x4x8400xbf16> loc(#loc683)
    %3136 = ttir.empty() : tensor<1x2x8400xbf16> loc(#loc506)
    %3137 = "ttir.index"(%3135, %3136) <{begin = 0 : i32, dim = 1 : i32, end = 2 : i32, step = 1 : i32}> : (tensor<1x4x8400xbf16>, tensor<1x2x8400xbf16>) -> tensor<1x2x8400xbf16> loc(#loc506)
    %3138 = ttir.empty() : tensor<1x2x8400xbf16> loc(#loc507)
    %3139 = "ttir.subtract"(%arg1, %3137, %3138) : (tensor<1x2x8400xbf16>, tensor<1x2x8400xbf16>, tensor<1x2x8400xbf16>) -> tensor<1x2x8400xbf16> loc(#loc507)
    %3140 = ttir.empty() : tensor<1x2x8400xbf16> loc(#loc508)
    %3141 = "ttir.index"(%3135, %3140) <{begin = 2 : i32, dim = 1 : i32, end = 4 : i32, step = 1 : i32}> : (tensor<1x4x8400xbf16>, tensor<1x2x8400xbf16>) -> tensor<1x2x8400xbf16> loc(#loc508)
    %3142 = ttir.empty() : tensor<1x2x8400xbf16> loc(#loc509)
    %3143 = "ttir.add"(%arg1, %3141, %3142) : (tensor<1x2x8400xbf16>, tensor<1x2x8400xbf16>, tensor<1x2x8400xbf16>) -> tensor<1x2x8400xbf16> loc(#loc509)
    %3144 = ttir.empty() : tensor<1x2x8400xbf16> loc(#loc510)
    %3145 = "ttir.add"(%3139, %3143, %3144) : (tensor<1x2x8400xbf16>, tensor<1x2x8400xbf16>, tensor<1x2x8400xbf16>) -> tensor<1x2x8400xbf16> loc(#loc510)
    %3146 = ttir.empty() : tensor<1x2x8400xbf16> loc(#loc511)
    %3147 = "ttir.div"(%3145, %arg316, %3146) : (tensor<1x2x8400xbf16>, tensor<1xbf16>, tensor<1x2x8400xbf16>) -> tensor<1x2x8400xbf16> loc(#loc511)
    %3148 = ttir.empty() : tensor<1x2x8400xbf16> loc(#loc512)
    %3149 = "ttir.subtract"(%3143, %3139, %3148) : (tensor<1x2x8400xbf16>, tensor<1x2x8400xbf16>, tensor<1x2x8400xbf16>) -> tensor<1x2x8400xbf16> loc(#loc512)
    %3150 = ttir.empty() : tensor<1x4x8400xbf16> loc(#loc513)
    %3151 = "ttir.concat"(%3147, %3149, %3150) <{dim = -2 : si32}> : (tensor<1x2x8400xbf16>, tensor<1x2x8400xbf16>, tensor<1x4x8400xbf16>) -> tensor<1x4x8400xbf16> loc(#loc513)
    %3152 = ttir.empty() : tensor<1x4x8400xbf16> loc(#loc514)
    %3153 = "ttir.multiply"(%3151, %arg317, %3152) : (tensor<1x4x8400xbf16>, tensor<1x8400xbf16>, tensor<1x4x8400xbf16>) -> tensor<1x4x8400xbf16> loc(#loc514)
    %3154 = ttir.empty() : tensor<1x80x8400xbf16> loc(#loc515)
    %3155 = "ttir.index"(%3115, %3154) <{begin = 64 : i32, dim = 1 : i32, end = 144 : i32, step = 1 : i32}> : (tensor<1x144x8400xbf16>, tensor<1x80x8400xbf16>) -> tensor<1x80x8400xbf16> loc(#loc515)
    %3156 = ttir.empty() : tensor<1x80x8400xbf16> loc(#loc516)
    %3157 = "ttir.sigmoid"(%3155, %3156) : (tensor<1x80x8400xbf16>, tensor<1x80x8400xbf16>) -> tensor<1x80x8400xbf16> loc(#loc516)
    %3158 = ttir.empty() : tensor<1x84x8400xbf16> loc(#loc517)
    %3159 = "ttir.concat"(%3153, %3157, %3158) <{dim = -2 : si32}> : (tensor<1x4x8400xbf16>, tensor<1x80x8400xbf16>, tensor<1x84x8400xbf16>) -> tensor<1x84x8400xbf16> loc(#loc517)
    return %3159, %2195, %2653, %3111 : tensor<1x84x8400xbf16>, tensor<1x144x80x80xbf16>, tensor<1x144x40x40xbf16>, tensor<1x144x20x20xbf16> loc(#loc310)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("test.benchmark.utils.YoloWrapper::")
#loc2 = loc("multiply_7")
#loc3 = loc("add_13")
#loc4 = loc("multiply_23")
#loc5 = loc("add_29")
#loc6 = loc("multiply_39")
#loc7 = loc("add_45")
#loc8 = loc("multiply_57")
#loc9 = loc("add_63")
#loc10 = loc("multiply_73")
#loc11 = loc("add_79")
#loc12 = loc("multiply_87")
#loc13 = loc("add_93")
#loc14 = loc("multiply_104")
#loc15 = loc("add_110")
#loc16 = loc("multiply_121")
#loc17 = loc("add_127")
#loc18 = loc("multiply_138")
#loc19 = loc("add_144")
#loc20 = loc("multiply_154")
#loc21 = loc("add_160")
#loc22 = loc("multiply_170")
#loc23 = loc("add_176")
#loc24 = loc("multiply_186")
#loc25 = loc("add_192")
#loc26 = loc("multiply_200")
#loc27 = loc("add_206")
#loc28 = loc("multiply_217")
#loc29 = loc("add_223")
#loc30 = loc("multiply_234")
#loc31 = loc("add_240")
#loc32 = loc("multiply_251")
#loc33 = loc("add_257")
#loc34 = loc("multiply_267")
#loc35 = loc("add_273")
#loc36 = loc("multiply_284")
#loc37 = loc("add_290")
#loc38 = loc("multiply_302")
#loc39 = loc("add_308")
#loc40 = loc("multiply_320")
#loc41 = loc("add_326")
#loc42 = loc("multiply_337")
#loc43 = loc("add_343")
#loc44 = loc("multiply_355")
#loc45 = loc("add_361")
#loc46 = loc("multiply_371")
#loc47 = loc("add_377")
#loc48 = loc("multiply_385")
#loc49 = loc("add_391")
#loc50 = loc("multiply_402")
#loc51 = loc("add_408")
#loc52 = loc("multiply_419")
#loc53 = loc("add_425")
#loc54 = loc("multiply_436")
#loc55 = loc("add_442")
#loc56 = loc("multiply_452")
#loc57 = loc("add_458")
#loc58 = loc("multiply_468")
#loc59 = loc("add_474")
#loc60 = loc("multiply_484")
#loc61 = loc("add_490")
#loc62 = loc("multiply_498")
#loc63 = loc("add_504")
#loc64 = loc("multiply_515")
#loc65 = loc("add_521")
#loc66 = loc("multiply_532")
#loc67 = loc("add_538")
#loc68 = loc("multiply_549")
#loc69 = loc("add_555")
#loc70 = loc("multiply_565")
#loc71 = loc("add_571")
#loc72 = loc("multiply_582")
#loc73 = loc("add_588")
#loc74 = loc("multiply_600")
#loc75 = loc("add_606")
#loc76 = loc("multiply_618")
#loc77 = loc("add_624")
#loc78 = loc("multiply_635")
#loc79 = loc("add_641")
#loc80 = loc("multiply_653")
#loc81 = loc("add_659")
#loc82 = loc("multiply_669")
#loc83 = loc("add_675")
#loc84 = loc("multiply_683")
#loc85 = loc("add_689")
#loc86 = loc("multiply_700")
#loc87 = loc("add_706")
#loc88 = loc("multiply_717")
#loc89 = loc("add_723")
#loc90 = loc("multiply_734")
#loc91 = loc("add_740")
#loc92 = loc("multiply_750")
#loc93 = loc("add_756")
#loc94 = loc("multiply_766")
#loc95 = loc("add_772")
#loc96 = loc("multiply_782")
#loc97 = loc("add_788")
#loc98 = loc("multiply_796")
#loc99 = loc("add_802")
#loc100 = loc("multiply_813")
#loc101 = loc("add_819")
#loc102 = loc("multiply_830")
#loc103 = loc("add_836")
#loc104 = loc("multiply_847")
#loc105 = loc("add_853")
#loc106 = loc("multiply_863")
#loc107 = loc("add_869")
#loc108 = loc("multiply_880")
#loc109 = loc("add_886")
#loc110 = loc("multiply_898")
#loc111 = loc("add_904")
#loc112 = loc("multiply_916")
#loc113 = loc("add_922")
#loc114 = loc("multiply_933")
#loc115 = loc("add_939")
#loc116 = loc("multiply_951")
#loc117 = loc("add_957")
#loc118 = loc("multiply_967")
#loc119 = loc("add_973")
#loc120 = loc("multiply_981")
#loc121 = loc("add_987")
#loc122 = loc("multiply_998")
#loc123 = loc("add_1004")
#loc124 = loc("multiply_1015")
#loc125 = loc("add_1021")
#loc126 = loc("multiply_1032")
#loc127 = loc("add_1038")
#loc128 = loc("multiply_1048")
#loc129 = loc("add_1054")
#loc130 = loc("multiply_1064")
#loc131 = loc("add_1070")
#loc132 = loc("multiply_1080")
#loc133 = loc("add_1086")
#loc134 = loc("multiply_1094")
#loc135 = loc("add_1100")
#loc136 = loc("multiply_1111")
#loc137 = loc("add_1117")
#loc138 = loc("multiply_1128")
#loc139 = loc("add_1134")
#loc140 = loc("multiply_1145")
#loc141 = loc("add_1151")
#loc142 = loc("multiply_1161")
#loc143 = loc("add_1167")
#loc144 = loc("multiply_1178")
#loc145 = loc("add_1184")
#loc146 = loc("multiply_1194")
#loc147 = loc("add_1200")
#loc148 = loc("multiply_1214")
#loc149 = loc("add_1220")
#loc150 = loc("multiply_1232")
#loc151 = loc("add_1238")
#loc152 = loc("multiply_1250")
#loc153 = loc("add_1256")
#loc154 = loc("multiply_1266")
#loc155 = loc("add_1272")
#loc156 = loc("multiply_1280")
#loc157 = loc("add_1286")
#loc158 = loc("multiply_1297")
#loc159 = loc("add_1303")
#loc160 = loc("multiply_1314")
#loc161 = loc("add_1320")
#loc162 = loc("multiply_1331")
#loc163 = loc("add_1337")
#loc164 = loc("multiply_1347")
#loc165 = loc("add_1353")
#loc166 = loc("multiply_1363")
#loc167 = loc("add_1369")
#loc168 = loc("multiply_1379")
#loc169 = loc("add_1385")
#loc170 = loc("multiply_1393")
#loc171 = loc("add_1399")
#loc172 = loc("multiply_1410")
#loc173 = loc("add_1416")
#loc174 = loc("multiply_1427")
#loc175 = loc("add_1433")
#loc176 = loc("multiply_1444")
#loc177 = loc("add_1450")
#loc178 = loc("multiply_1460")
#loc179 = loc("add_1466")
#loc180 = loc("multiply_1477")
#loc181 = loc("add_1483")
#loc182 = loc("multiply_1495")
#loc183 = loc("add_1501")
#loc184 = loc("multiply_1513")
#loc185 = loc("add_1519")
#loc186 = loc("multiply_1529")
#loc187 = loc("add_1535")
#loc188 = loc("multiply_1543")
#loc189 = loc("add_1549")
#loc190 = loc("multiply_1560")
#loc191 = loc("add_1566")
#loc192 = loc("multiply_1577")
#loc193 = loc("add_1583")
#loc194 = loc("multiply_1594")
#loc195 = loc("add_1600")
#loc196 = loc("multiply_1610")
#loc197 = loc("add_1616")
#loc198 = loc("multiply_1626")
#loc199 = loc("add_1632")
#loc200 = loc("multiply_1642")
#loc201 = loc("add_1648")
#loc202 = loc("multiply_1656")
#loc203 = loc("add_1662")
#loc204 = loc("multiply_1673")
#loc205 = loc("add_1679")
#loc206 = loc("multiply_1690")
#loc207 = loc("add_1696")
#loc208 = loc("multiply_1707")
#loc209 = loc("add_1713")
#loc210 = loc("multiply_1723")
#loc211 = loc("add_1729")
#loc212 = loc("multiply_1740")
#loc213 = loc("add_1746")
#loc214 = loc("multiply_1756")
#loc215 = loc("add_1762")
#loc216 = loc("multiply_1772")
#loc217 = loc("add_1778")
#loc218 = loc("multiply_1792")
#loc219 = loc("add_1798")
#loc220 = loc("multiply_1808")
#loc221 = loc("add_1814")
#loc222 = loc("multiply_1832")
#loc223 = loc("add_1838")
#loc224 = loc("multiply_1850")
#loc225 = loc("add_1856")
#loc226 = loc("multiply_1868")
#loc227 = loc("add_1874")
#loc228 = loc("multiply_1886")
#loc229 = loc("add_1892")
#loc230 = loc("multiply_1902")
#loc231 = loc("add_1908")
#loc232 = loc("multiply_1916")
#loc233 = loc("add_1922")
#loc234 = loc("multiply_1933")
#loc235 = loc("add_1939")
#loc236 = loc("multiply_1950")
#loc237 = loc("add_1956")
#loc238 = loc("multiply_1967")
#loc239 = loc("add_1973")
#loc240 = loc("multiply_1983")
#loc241 = loc("add_1989")
#loc242 = loc("multiply_1999")
#loc243 = loc("add_2005")
#loc244 = loc("multiply_2015")
#loc245 = loc("add_2021")
#loc246 = loc("multiply_2029")
#loc247 = loc("add_2035")
#loc248 = loc("multiply_2046")
#loc249 = loc("add_2052")
#loc250 = loc("multiply_2063")
#loc251 = loc("add_2069")
#loc252 = loc("multiply_2080")
#loc253 = loc("add_2086")
#loc254 = loc("multiply_2096")
#loc255 = loc("add_2102")
#loc256 = loc("multiply_2113")
#loc257 = loc("add_2119")
#loc258 = loc("multiply_2129")
#loc259 = loc("add_2135")
#loc260 = loc("multiply_2145")
#loc261 = loc("add_2151")
#loc262 = loc("multiply_2165")
#loc263 = loc("add_2171")
#loc264 = loc("multiply_2181")
#loc265 = loc("add_2187")
#loc266 = loc("multiply_2205")
#loc267 = loc("add_2211")
#loc268 = loc("multiply_2223")
#loc269 = loc("add_2229")
#loc270 = loc("multiply_2241")
#loc271 = loc("add_2247")
#loc272 = loc("multiply_2259")
#loc273 = loc("add_2265")
#loc274 = loc("multiply_2275")
#loc275 = loc("add_2281")
#loc276 = loc("multiply_2289")
#loc277 = loc("add_2295")
#loc278 = loc("multiply_2306")
#loc279 = loc("add_2312")
#loc280 = loc("multiply_2323")
#loc281 = loc("add_2329")
#loc282 = loc("multiply_2340")
#loc283 = loc("add_2346")
#loc284 = loc("multiply_2356")
#loc285 = loc("add_2362")
#loc286 = loc("multiply_2372")
#loc287 = loc("add_2378")
#loc288 = loc("multiply_2388")
#loc289 = loc("add_2394")
#loc290 = loc("multiply_2402")
#loc291 = loc("add_2408")
#loc292 = loc("multiply_2419")
#loc293 = loc("add_2425")
#loc294 = loc("multiply_2436")
#loc295 = loc("add_2442")
#loc296 = loc("multiply_2453")
#loc297 = loc("add_2459")
#loc298 = loc("multiply_2469")
#loc299 = loc("add_2475")
#loc300 = loc("multiply_2486")
#loc301 = loc("add_2492")
#loc302 = loc("multiply_2502")
#loc303 = loc("add_2508")
#loc304 = loc("multiply_2518")
#loc305 = loc("add_2524")
#loc306 = loc("multiply_2538")
#loc307 = loc("add_2544")
#loc308 = loc("multiply_2554")
#loc309 = loc("add_2560")
#loc310 = loc(unknown)
#loc311 = loc("ultralytics.nn.tasks.DetectionModel::model"(#loc1))
#loc312 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc311))
#loc313 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc311))
#loc314 = loc("ultralytics.nn.modules.block.RepNCSPELAN4::2"(#loc311))
#loc315 = loc("ultralytics.nn.modules.block.ADown::3"(#loc311))
#loc316 = loc("ultralytics.nn.modules.block.RepNCSPELAN4::4"(#loc311))
#loc317 = loc("ultralytics.nn.modules.block.ADown::5"(#loc311))
#loc318 = loc("ultralytics.nn.modules.block.RepNCSPELAN4::6"(#loc311))
#loc319 = loc("ultralytics.nn.modules.block.ADown::7"(#loc311))
#loc320 = loc("ultralytics.nn.modules.block.RepNCSPELAN4::8"(#loc311))
#loc321 = loc("ultralytics.nn.modules.block.SPPELAN::9"(#loc311))
#loc322 = loc("torch.nn.modules.upsampling.Upsample::10"(#loc311))
#loc323 = loc("ultralytics.nn.modules.conv.Concat::11"(#loc311))
#loc324 = loc("ultralytics.nn.modules.block.RepNCSPELAN4::12"(#loc311))
#loc325 = loc("torch.nn.modules.upsampling.Upsample::13"(#loc311))
#loc326 = loc("ultralytics.nn.modules.conv.Concat::14"(#loc311))
#loc327 = loc("ultralytics.nn.modules.block.RepNCSPELAN4::15"(#loc311))
#loc328 = loc("ultralytics.nn.modules.head.Detect::22"(#loc311))
#loc329 = loc("ultralytics.nn.modules.block.ADown::16"(#loc311))
#loc330 = loc("ultralytics.nn.modules.conv.Concat::17"(#loc311))
#loc331 = loc("ultralytics.nn.modules.block.RepNCSPELAN4::18"(#loc311))
#loc332 = loc("ultralytics.nn.modules.block.ADown::19"(#loc311))
#loc333 = loc("ultralytics.nn.modules.conv.Concat::20"(#loc311))
#loc334 = loc("ultralytics.nn.modules.block.RepNCSPELAN4::21"(#loc311))
#loc335 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc312))
#loc336 = loc("torch.nn.modules.activation.SiLU::"(#loc312))
#loc337 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc313))
#loc338 = loc("sigmoid_30"(#loc313))
#loc339 = loc("multiply_31"(#loc313))
#loc340 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc314))
#loc341 = loc("index_48"(#loc314))
#loc342 = loc("index_49"(#loc314))
#loc343 = loc("torch.nn.modules.container.Sequential::cv2"(#loc314))
#loc344 = loc("torch.nn.modules.container.Sequential::cv3"(#loc314))
#loc345 = loc("concatenate_276"(#loc314))
#loc346 = loc("ultralytics.nn.modules.conv.Conv::cv4"(#loc314))
#loc347 = loc("avg_pool2d_293.dc.conv2d.1.dc.transpose.0"(#loc315))
#loc348 = loc("avg_pool2d_293.dc.conv2d.1.dc.transpose.1"(#loc315))
#loc349 = loc("avg_pool2d_293.dc.conv2d.1.dc.conv2d.2"(#loc315))
#loc350 = loc("avg_pool2d_293.dc.conv2d.1.dc.transpose.3"(#loc315))
#loc351 = loc("avg_pool2d_293.dc.conv2d.1.dc.transpose.4"(#loc315))
#loc352 = loc("index_294"(#loc315))
#loc353 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc315))
#loc354 = loc("index_311"(#loc315))
#loc355 = loc("max_pool2d_312.dc.transpose.0"(#loc315))
#loc356 = loc("max_pool2d_312.dc.transpose.1"(#loc315))
#loc357 = loc("max_pool2d_312.dc.max_pool2d.2"(#loc315))
#loc358 = loc("max_pool2d_312.dc.transpose.3"(#loc315))
#loc359 = loc("max_pool2d_312.dc.transpose.4"(#loc315))
#loc360 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc315))
#loc361 = loc("concatenate_329"(#loc315))
#loc362 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc316))
#loc363 = loc("index_346"(#loc316))
#loc364 = loc("index_347"(#loc316))
#loc365 = loc("torch.nn.modules.container.Sequential::cv2"(#loc316))
#loc366 = loc("torch.nn.modules.container.Sequential::cv3"(#loc316))
#loc367 = loc("concatenate_574"(#loc316))
#loc368 = loc("ultralytics.nn.modules.conv.Conv::cv4"(#loc316))
#loc369 = loc("avg_pool2d_591.dc.conv2d.1.dc.transpose.0"(#loc317))
#loc370 = loc("avg_pool2d_591.dc.conv2d.1.dc.transpose.1"(#loc317))
#loc371 = loc("avg_pool2d_591.dc.conv2d.1.dc.conv2d.2"(#loc317))
#loc372 = loc("avg_pool2d_591.dc.conv2d.1.dc.transpose.3"(#loc317))
#loc373 = loc("avg_pool2d_591.dc.conv2d.1.dc.transpose.4"(#loc317))
#loc374 = loc("index_592"(#loc317))
#loc375 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc317))
#loc376 = loc("index_609"(#loc317))
#loc377 = loc("max_pool2d_610.dc.transpose.0"(#loc317))
#loc378 = loc("max_pool2d_610.dc.transpose.1"(#loc317))
#loc379 = loc("max_pool2d_610.dc.max_pool2d.2"(#loc317))
#loc380 = loc("max_pool2d_610.dc.transpose.3"(#loc317))
#loc381 = loc("max_pool2d_610.dc.transpose.4"(#loc317))
#loc382 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc317))
#loc383 = loc("concatenate_627"(#loc317))
#loc384 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc318))
#loc385 = loc("index_644"(#loc318))
#loc386 = loc("index_645"(#loc318))
#loc387 = loc("torch.nn.modules.container.Sequential::cv2"(#loc318))
#loc388 = loc("torch.nn.modules.container.Sequential::cv3"(#loc318))
#loc389 = loc("concatenate_872"(#loc318))
#loc390 = loc("ultralytics.nn.modules.conv.Conv::cv4"(#loc318))
#loc391 = loc("avg_pool2d_889.dc.conv2d.1.dc.transpose.0"(#loc319))
#loc392 = loc("avg_pool2d_889.dc.conv2d.1.dc.transpose.1"(#loc319))
#loc393 = loc("avg_pool2d_889.dc.conv2d.1.dc.conv2d.2"(#loc319))
#loc394 = loc("avg_pool2d_889.dc.conv2d.1.dc.transpose.3"(#loc319))
#loc395 = loc("avg_pool2d_889.dc.conv2d.1.dc.transpose.4"(#loc319))
#loc396 = loc("index_890"(#loc319))
#loc397 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc319))
#loc398 = loc("index_907"(#loc319))
#loc399 = loc("max_pool2d_908.dc.transpose.0"(#loc319))
#loc400 = loc("max_pool2d_908.dc.transpose.1"(#loc319))
#loc401 = loc("max_pool2d_908.dc.max_pool2d.2"(#loc319))
#loc402 = loc("max_pool2d_908.dc.transpose.3"(#loc319))
#loc403 = loc("max_pool2d_908.dc.transpose.4"(#loc319))
#loc404 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc319))
#loc405 = loc("concatenate_925"(#loc319))
#loc406 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc320))
#loc407 = loc("index_942"(#loc320))
#loc408 = loc("index_943"(#loc320))
#loc409 = loc("torch.nn.modules.container.Sequential::cv2"(#loc320))
#loc410 = loc("torch.nn.modules.container.Sequential::cv3"(#loc320))
#loc411 = loc("concatenate_1170"(#loc320))
#loc412 = loc("ultralytics.nn.modules.conv.Conv::cv4"(#loc320))
#loc413 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc321))
#loc414 = loc("torch.nn.modules.pooling.MaxPool2d::cv2"(#loc321))
#loc415 = loc("torch.nn.modules.pooling.MaxPool2d::cv3"(#loc321))
#loc416 = loc("torch.nn.modules.pooling.MaxPool2d::cv4"(#loc321))
#loc417 = loc("concatenate_1206"(#loc321))
#loc418 = loc("ultralytics.nn.modules.conv.Conv::cv5"(#loc321))
#loc419 = loc("resize2d_1223.dc.transpose.0"(#loc322))
#loc420 = loc("resize2d_1223.dc.transpose.1"(#loc322))
#loc421 = loc("resize2d_1223.dc.upsample2d.2"(#loc322))
#loc422 = loc("resize2d_1223.dc.transpose.3"(#loc322))
#loc423 = loc("resize2d_1223.dc.transpose.4"(#loc322))
#loc424 = loc("concatenate_1224"(#loc323))
#loc425 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc324))
#loc426 = loc("index_1241"(#loc324))
#loc427 = loc("index_1242"(#loc324))
#loc428 = loc("torch.nn.modules.container.Sequential::cv2"(#loc324))
#loc429 = loc("torch.nn.modules.container.Sequential::cv3"(#loc324))
#loc430 = loc("concatenate_1469"(#loc324))
#loc431 = loc("ultralytics.nn.modules.conv.Conv::cv4"(#loc324))
#loc432 = loc("resize2d_1486.dc.transpose.0"(#loc325))
#loc433 = loc("resize2d_1486.dc.transpose.1"(#loc325))
#loc434 = loc("resize2d_1486.dc.upsample2d.2"(#loc325))
#loc435 = loc("resize2d_1486.dc.transpose.3"(#loc325))
#loc436 = loc("resize2d_1486.dc.transpose.4"(#loc325))
#loc437 = loc("concatenate_1487"(#loc326))
#loc438 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc327))
#loc439 = loc("index_1504"(#loc327))
#loc440 = loc("index_1505"(#loc327))
#loc441 = loc("torch.nn.modules.container.Sequential::cv2"(#loc327))
#loc442 = loc("torch.nn.modules.container.Sequential::cv3"(#loc327))
#loc443 = loc("concatenate_1732"(#loc327))
#loc444 = loc("ultralytics.nn.modules.conv.Conv::cv4"(#loc327))
#loc445 = loc("torch.nn.modules.container.Sequential::cv2.0"(#loc328))
#loc446 = loc("torch.nn.modules.container.Sequential::0"(#loc328))
#loc447 = loc("concatenate_1821"(#loc328))
#loc448 = loc("reshape_1822"(#loc328))
#loc449 = loc("avg_pool2d_1823.dc.conv2d.1.dc.transpose.0"(#loc329))
#loc450 = loc("avg_pool2d_1823.dc.conv2d.1.dc.transpose.1"(#loc329))
#loc451 = loc("avg_pool2d_1823.dc.conv2d.1.dc.conv2d.2"(#loc329))
#loc452 = loc("avg_pool2d_1823.dc.conv2d.1.dc.transpose.3"(#loc329))
#loc453 = loc("avg_pool2d_1823.dc.conv2d.1.dc.transpose.4"(#loc329))
#loc454 = loc("index_1824"(#loc329))
#loc455 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc329))
#loc456 = loc("index_1841"(#loc329))
#loc457 = loc("max_pool2d_1842.dc.transpose.0"(#loc329))
#loc458 = loc("max_pool2d_1842.dc.transpose.1"(#loc329))
#loc459 = loc("max_pool2d_1842.dc.max_pool2d.2"(#loc329))
#loc460 = loc("max_pool2d_1842.dc.transpose.3"(#loc329))
#loc461 = loc("max_pool2d_1842.dc.transpose.4"(#loc329))
#loc462 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc329))
#loc463 = loc("concatenate_1859"(#loc329))
#loc464 = loc("concatenate_1860"(#loc330))
#loc465 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc331))
#loc466 = loc("index_1877"(#loc331))
#loc467 = loc("index_1878"(#loc331))
#loc468 = loc("torch.nn.modules.container.Sequential::cv2"(#loc331))
#loc469 = loc("torch.nn.modules.container.Sequential::cv3"(#loc331))
#loc470 = loc("concatenate_2105"(#loc331))
#loc471 = loc("ultralytics.nn.modules.conv.Conv::cv4"(#loc331))
#loc472 = loc("torch.nn.modules.container.Sequential::cv2.1"(#loc328))
#loc473 = loc("torch.nn.modules.container.Sequential::1"(#loc328))
#loc474 = loc("concatenate_2194"(#loc328))
#loc475 = loc("reshape_2195"(#loc328))
#loc476 = loc("avg_pool2d_2196.dc.conv2d.1.dc.transpose.0"(#loc332))
#loc477 = loc("avg_pool2d_2196.dc.conv2d.1.dc.transpose.1"(#loc332))
#loc478 = loc("avg_pool2d_2196.dc.conv2d.1.dc.conv2d.2"(#loc332))
#loc479 = loc("avg_pool2d_2196.dc.conv2d.1.dc.transpose.3"(#loc332))
#loc480 = loc("avg_pool2d_2196.dc.conv2d.1.dc.transpose.4"(#loc332))
#loc481 = loc("index_2197"(#loc332))
#loc482 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc332))
#loc483 = loc("index_2214"(#loc332))
#loc484 = loc("max_pool2d_2215.dc.transpose.0"(#loc332))
#loc485 = loc("max_pool2d_2215.dc.transpose.1"(#loc332))
#loc486 = loc("max_pool2d_2215.dc.max_pool2d.2"(#loc332))
#loc487 = loc("max_pool2d_2215.dc.transpose.3"(#loc332))
#loc488 = loc("max_pool2d_2215.dc.transpose.4"(#loc332))
#loc489 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc332))
#loc490 = loc("concatenate_2232"(#loc332))
#loc491 = loc("concatenate_2233"(#loc333))
#loc492 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc334))
#loc493 = loc("index_2250"(#loc334))
#loc494 = loc("index_2251"(#loc334))
#loc495 = loc("torch.nn.modules.container.Sequential::cv2"(#loc334))
#loc496 = loc("torch.nn.modules.container.Sequential::cv3"(#loc334))
#loc497 = loc("concatenate_2478"(#loc334))
#loc498 = loc("ultralytics.nn.modules.conv.Conv::cv4"(#loc334))
#loc499 = loc("torch.nn.modules.container.Sequential::cv2.2"(#loc328))
#loc500 = loc("torch.nn.modules.container.Sequential::2"(#loc328))
#loc501 = loc("concatenate_2567"(#loc328))
#loc502 = loc("reshape_2568"(#loc328))
#loc503 = loc("concatenate_2569"(#loc328))
#loc504 = loc("index_2570"(#loc328))
#loc505 = loc("ultralytics.nn.modules.block.DFL::dfl"(#loc328))
#loc506 = loc("index_2576"(#loc328))
#loc507 = loc("subtract_2577"(#loc328))
#loc508 = loc("index_2578"(#loc328))
#loc509 = loc("add_2579"(#loc328))
#loc510 = loc("add_2580"(#loc328))
#loc511 = loc("divide_2581"(#loc328))
#loc512 = loc("subtract_2582"(#loc328))
#loc513 = loc("concatenate_2583"(#loc328))
#loc514 = loc("multiply_2584"(#loc328))
#loc515 = loc("index_2585"(#loc328))
#loc516 = loc("sigmoid_2586"(#loc328))
#loc517 = loc("concatenate_2587"(#loc328))
#loc518 = loc("conv2d_0.dc.transpose.0"(#loc335))
#loc519 = loc("conv2d_0.dc.transpose.1"(#loc335))
#loc520 = loc("conv2d_0.dc.conv2d.2"(#loc335))
#loc521 = loc("conv2d_0.dc.transpose.3"(#loc335))
#loc522 = loc("conv2d_0.dc.transpose.4"(#loc335))
#loc523 = loc("sigmoid_14"(#loc336))
#loc524 = loc("multiply_15"(#loc336))
#loc525 = loc("conv2d_16.dc.transpose.0"(#loc337))
#loc526 = loc("conv2d_16.dc.transpose.1"(#loc337))
#loc527 = loc("conv2d_16.dc.conv2d.2"(#loc337))
#loc528 = loc("conv2d_16.dc.transpose.3"(#loc337))
#loc529 = loc("conv2d_16.dc.transpose.4"(#loc337))
#loc530 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc340))
#loc531 = loc("sigmoid_46"(#loc340))
#loc532 = loc("multiply_47"(#loc340))
#loc533 = loc("ultralytics.nn.modules.block.RepCSP::0"(#loc343))
#loc534 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc343))
#loc535 = loc("ultralytics.nn.modules.block.RepCSP::0"(#loc344))
#loc536 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc344))
#loc537 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc346))
#loc538 = loc("sigmoid_291"(#loc346))
#loc539 = loc("multiply_292"(#loc346))
#loc540 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc353))
#loc541 = loc("sigmoid_309"(#loc353))
#loc542 = loc("multiply_310"(#loc353))
#loc543 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc360))
#loc544 = loc("sigmoid_327"(#loc360))
#loc545 = loc("multiply_328"(#loc360))
#loc546 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc362))
#loc547 = loc("sigmoid_344"(#loc362))
#loc548 = loc("multiply_345"(#loc362))
#loc549 = loc("ultralytics.nn.modules.block.RepCSP::0"(#loc365))
#loc550 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc365))
#loc551 = loc("ultralytics.nn.modules.block.RepCSP::0"(#loc366))
#loc552 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc366))
#loc553 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc368))
#loc554 = loc("sigmoid_589"(#loc368))
#loc555 = loc("multiply_590"(#loc368))
#loc556 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc375))
#loc557 = loc("sigmoid_607"(#loc375))
#loc558 = loc("multiply_608"(#loc375))
#loc559 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc382))
#loc560 = loc("sigmoid_625"(#loc382))
#loc561 = loc("multiply_626"(#loc382))
#loc562 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc384))
#loc563 = loc("sigmoid_642"(#loc384))
#loc564 = loc("multiply_643"(#loc384))
#loc565 = loc("ultralytics.nn.modules.block.RepCSP::0"(#loc387))
#loc566 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc387))
#loc567 = loc("ultralytics.nn.modules.block.RepCSP::0"(#loc388))
#loc568 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc388))
#loc569 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc390))
#loc570 = loc("sigmoid_887"(#loc390))
#loc571 = loc("multiply_888"(#loc390))
#loc572 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc397))
#loc573 = loc("sigmoid_905"(#loc397))
#loc574 = loc("multiply_906"(#loc397))
#loc575 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc404))
#loc576 = loc("sigmoid_923"(#loc404))
#loc577 = loc("multiply_924"(#loc404))
#loc578 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc406))
#loc579 = loc("sigmoid_940"(#loc406))
#loc580 = loc("multiply_941"(#loc406))
#loc581 = loc("ultralytics.nn.modules.block.RepCSP::0"(#loc409))
#loc582 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc409))
#loc583 = loc("ultralytics.nn.modules.block.RepCSP::0"(#loc410))
#loc584 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc410))
#loc585 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc412))
#loc586 = loc("sigmoid_1185"(#loc412))
#loc587 = loc("multiply_1186"(#loc412))
#loc588 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc413))
#loc589 = loc("sigmoid_1201"(#loc413))
#loc590 = loc("multiply_1202"(#loc413))
#loc591 = loc("max_pool2d_1203.dc.transpose.0"(#loc414))
#loc592 = loc("max_pool2d_1203.dc.transpose.1"(#loc414))
#loc593 = loc("max_pool2d_1203.dc.max_pool2d.2"(#loc414))
#loc594 = loc("max_pool2d_1203.dc.transpose.3"(#loc414))
#loc595 = loc("max_pool2d_1203.dc.transpose.4"(#loc414))
#loc596 = loc("max_pool2d_1204.dc.transpose.0"(#loc415))
#loc597 = loc("max_pool2d_1204.dc.transpose.1"(#loc415))
#loc598 = loc("max_pool2d_1204.dc.max_pool2d.2"(#loc415))
#loc599 = loc("max_pool2d_1204.dc.transpose.3"(#loc415))
#loc600 = loc("max_pool2d_1204.dc.transpose.4"(#loc415))
#loc601 = loc("max_pool2d_1205.dc.transpose.0"(#loc416))
#loc602 = loc("max_pool2d_1205.dc.transpose.1"(#loc416))
#loc603 = loc("max_pool2d_1205.dc.max_pool2d.2"(#loc416))
#loc604 = loc("max_pool2d_1205.dc.transpose.3"(#loc416))
#loc605 = loc("max_pool2d_1205.dc.transpose.4"(#loc416))
#loc606 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc418))
#loc607 = loc("sigmoid_1221"(#loc418))
#loc608 = loc("multiply_1222"(#loc418))
#loc609 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc425))
#loc610 = loc("sigmoid_1239"(#loc425))
#loc611 = loc("multiply_1240"(#loc425))
#loc612 = loc("ultralytics.nn.modules.block.RepCSP::0"(#loc428))
#loc613 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc428))
#loc614 = loc("ultralytics.nn.modules.block.RepCSP::0"(#loc429))
#loc615 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc429))
#loc616 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc431))
#loc617 = loc("sigmoid_1484"(#loc431))
#loc618 = loc("multiply_1485"(#loc431))
#loc619 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc438))
#loc620 = loc("sigmoid_1502"(#loc438))
#loc621 = loc("multiply_1503"(#loc438))
#loc622 = loc("ultralytics.nn.modules.block.RepCSP::0"(#loc441))
#loc623 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc441))
#loc624 = loc("ultralytics.nn.modules.block.RepCSP::0"(#loc442))
#loc625 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc442))
#loc626 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc444))
#loc627 = loc("sigmoid_1747"(#loc444))
#loc628 = loc("multiply_1748"(#loc444))
#loc629 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc445))
#loc630 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc445))
#loc631 = loc("torch.nn.modules.conv.Conv2d::2"(#loc445))
#loc632 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc446))
#loc633 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc446))
#loc634 = loc("torch.nn.modules.conv.Conv2d::2"(#loc446))
#loc635 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc455))
#loc636 = loc("sigmoid_1839"(#loc455))
#loc637 = loc("multiply_1840"(#loc455))
#loc638 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc462))
#loc639 = loc("sigmoid_1857"(#loc462))
#loc640 = loc("multiply_1858"(#loc462))
#loc641 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc465))
#loc642 = loc("sigmoid_1875"(#loc465))
#loc643 = loc("multiply_1876"(#loc465))
#loc644 = loc("ultralytics.nn.modules.block.RepCSP::0"(#loc468))
#loc645 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc468))
#loc646 = loc("ultralytics.nn.modules.block.RepCSP::0"(#loc469))
#loc647 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc469))
#loc648 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc471))
#loc649 = loc("sigmoid_2120"(#loc471))
#loc650 = loc("multiply_2121"(#loc471))
#loc651 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc472))
#loc652 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc472))
#loc653 = loc("torch.nn.modules.conv.Conv2d::2"(#loc472))
#loc654 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc473))
#loc655 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc473))
#loc656 = loc("torch.nn.modules.conv.Conv2d::2"(#loc473))
#loc657 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc482))
#loc658 = loc("sigmoid_2212"(#loc482))
#loc659 = loc("multiply_2213"(#loc482))
#loc660 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc489))
#loc661 = loc("sigmoid_2230"(#loc489))
#loc662 = loc("multiply_2231"(#loc489))
#loc663 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc492))
#loc664 = loc("sigmoid_2248"(#loc492))
#loc665 = loc("multiply_2249"(#loc492))
#loc666 = loc("ultralytics.nn.modules.block.RepCSP::0"(#loc495))
#loc667 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc495))
#loc668 = loc("ultralytics.nn.modules.block.RepCSP::0"(#loc496))
#loc669 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc496))
#loc670 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc498))
#loc671 = loc("sigmoid_2493"(#loc498))
#loc672 = loc("multiply_2494"(#loc498))
#loc673 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc499))
#loc674 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc499))
#loc675 = loc("torch.nn.modules.conv.Conv2d::2"(#loc499))
#loc676 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc500))
#loc677 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc500))
#loc678 = loc("torch.nn.modules.conv.Conv2d::2"(#loc500))
#loc679 = loc("reshape_2571"(#loc505))
#loc680 = loc("transpose_2572"(#loc505))
#loc681 = loc("softmax_2573"(#loc505))
#loc682 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc505))
#loc683 = loc("reshape_2575.dc.squeeze.0"(#loc505))
#loc684 = loc("conv2d_32.dc.transpose.0"(#loc530))
#loc685 = loc("conv2d_32.dc.transpose.1"(#loc530))
#loc686 = loc("conv2d_32.dc.conv2d.2"(#loc530))
#loc687 = loc("conv2d_32.dc.transpose.3"(#loc530))
#loc688 = loc("conv2d_32.dc.transpose.4"(#loc530))
#loc689 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc533))
#loc690 = loc("torch.nn.modules.container.Sequential::m"(#loc533))
#loc691 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc533))
#loc692 = loc("concatenate_130"(#loc533))
#loc693 = loc("ultralytics.nn.modules.conv.Conv::cv3"(#loc533))
#loc694 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc534))
#loc695 = loc("sigmoid_161"(#loc534))
#loc696 = loc("multiply_162"(#loc534))
#loc697 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc535))
#loc698 = loc("torch.nn.modules.container.Sequential::m"(#loc535))
#loc699 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc535))
#loc700 = loc("concatenate_243"(#loc535))
#loc701 = loc("ultralytics.nn.modules.conv.Conv::cv3"(#loc535))
#loc702 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc536))
#loc703 = loc("sigmoid_274"(#loc536))
#loc704 = loc("multiply_275"(#loc536))
#loc705 = loc("conv2d_277.dc.transpose.0"(#loc537))
#loc706 = loc("conv2d_277.dc.transpose.1"(#loc537))
#loc707 = loc("conv2d_277.dc.conv2d.2"(#loc537))
#loc708 = loc("conv2d_277.dc.transpose.3"(#loc537))
#loc709 = loc("conv2d_277.dc.transpose.4"(#loc537))
#loc710 = loc("conv2d_295.dc.transpose.0"(#loc540))
#loc711 = loc("conv2d_295.dc.transpose.1"(#loc540))
#loc712 = loc("conv2d_295.dc.conv2d.2"(#loc540))
#loc713 = loc("conv2d_295.dc.transpose.3"(#loc540))
#loc714 = loc("conv2d_295.dc.transpose.4"(#loc540))
#loc715 = loc("conv2d_313.dc.transpose.0"(#loc543))
#loc716 = loc("conv2d_313.dc.transpose.1"(#loc543))
#loc717 = loc("conv2d_313.dc.conv2d.2"(#loc543))
#loc718 = loc("conv2d_313.dc.transpose.3"(#loc543))
#loc719 = loc("conv2d_313.dc.transpose.4"(#loc543))
#loc720 = loc("conv2d_330.dc.transpose.0"(#loc546))
#loc721 = loc("conv2d_330.dc.transpose.1"(#loc546))
#loc722 = loc("conv2d_330.dc.conv2d.2"(#loc546))
#loc723 = loc("conv2d_330.dc.transpose.3"(#loc546))
#loc724 = loc("conv2d_330.dc.transpose.4"(#loc546))
#loc725 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc549))
#loc726 = loc("torch.nn.modules.container.Sequential::m"(#loc549))
#loc727 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc549))
#loc728 = loc("concatenate_428"(#loc549))
#loc729 = loc("ultralytics.nn.modules.conv.Conv::cv3"(#loc549))
#loc730 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc550))
#loc731 = loc("sigmoid_459"(#loc550))
#loc732 = loc("multiply_460"(#loc550))
#loc733 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc551))
#loc734 = loc("torch.nn.modules.container.Sequential::m"(#loc551))
#loc735 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc551))
#loc736 = loc("concatenate_541"(#loc551))
#loc737 = loc("ultralytics.nn.modules.conv.Conv::cv3"(#loc551))
#loc738 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc552))
#loc739 = loc("sigmoid_572"(#loc552))
#loc740 = loc("multiply_573"(#loc552))
#loc741 = loc("conv2d_575.dc.transpose.0"(#loc553))
#loc742 = loc("conv2d_575.dc.transpose.1"(#loc553))
#loc743 = loc("conv2d_575.dc.conv2d.2"(#loc553))
#loc744 = loc("conv2d_575.dc.transpose.3"(#loc553))
#loc745 = loc("conv2d_575.dc.transpose.4"(#loc553))
#loc746 = loc("conv2d_593.dc.transpose.0"(#loc556))
#loc747 = loc("conv2d_593.dc.transpose.1"(#loc556))
#loc748 = loc("conv2d_593.dc.conv2d.2"(#loc556))
#loc749 = loc("conv2d_593.dc.transpose.3"(#loc556))
#loc750 = loc("conv2d_593.dc.transpose.4"(#loc556))
#loc751 = loc("conv2d_611.dc.transpose.0"(#loc559))
#loc752 = loc("conv2d_611.dc.transpose.1"(#loc559))
#loc753 = loc("conv2d_611.dc.conv2d.2"(#loc559))
#loc754 = loc("conv2d_611.dc.transpose.3"(#loc559))
#loc755 = loc("conv2d_611.dc.transpose.4"(#loc559))
#loc756 = loc("conv2d_628.dc.transpose.0"(#loc562))
#loc757 = loc("conv2d_628.dc.transpose.1"(#loc562))
#loc758 = loc("conv2d_628.dc.conv2d.2"(#loc562))
#loc759 = loc("conv2d_628.dc.transpose.3"(#loc562))
#loc760 = loc("conv2d_628.dc.transpose.4"(#loc562))
#loc761 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc565))
#loc762 = loc("torch.nn.modules.container.Sequential::m"(#loc565))
#loc763 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc565))
#loc764 = loc("concatenate_726"(#loc565))
#loc765 = loc("ultralytics.nn.modules.conv.Conv::cv3"(#loc565))
#loc766 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc566))
#loc767 = loc("sigmoid_757"(#loc566))
#loc768 = loc("multiply_758"(#loc566))
#loc769 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc567))
#loc770 = loc("torch.nn.modules.container.Sequential::m"(#loc567))
#loc771 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc567))
#loc772 = loc("concatenate_839"(#loc567))
#loc773 = loc("ultralytics.nn.modules.conv.Conv::cv3"(#loc567))
#loc774 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc568))
#loc775 = loc("sigmoid_870"(#loc568))
#loc776 = loc("multiply_871"(#loc568))
#loc777 = loc("conv2d_873.dc.transpose.0"(#loc569))
#loc778 = loc("conv2d_873.dc.transpose.1"(#loc569))
#loc779 = loc("conv2d_873.dc.conv2d.2"(#loc569))
#loc780 = loc("conv2d_873.dc.transpose.3"(#loc569))
#loc781 = loc("conv2d_873.dc.transpose.4"(#loc569))
#loc782 = loc("conv2d_891.dc.transpose.0"(#loc572))
#loc783 = loc("conv2d_891.dc.transpose.1"(#loc572))
#loc784 = loc("conv2d_891.dc.conv2d.2"(#loc572))
#loc785 = loc("conv2d_891.dc.transpose.3"(#loc572))
#loc786 = loc("conv2d_891.dc.transpose.4"(#loc572))
#loc787 = loc("conv2d_909.dc.transpose.0"(#loc575))
#loc788 = loc("conv2d_909.dc.transpose.1"(#loc575))
#loc789 = loc("conv2d_909.dc.conv2d.2"(#loc575))
#loc790 = loc("conv2d_909.dc.transpose.3"(#loc575))
#loc791 = loc("conv2d_909.dc.transpose.4"(#loc575))
#loc792 = loc("conv2d_926.dc.transpose.0"(#loc578))
#loc793 = loc("conv2d_926.dc.transpose.1"(#loc578))
#loc794 = loc("conv2d_926.dc.conv2d.2"(#loc578))
#loc795 = loc("conv2d_926.dc.transpose.3"(#loc578))
#loc796 = loc("conv2d_926.dc.transpose.4"(#loc578))
#loc797 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc581))
#loc798 = loc("torch.nn.modules.container.Sequential::m"(#loc581))
#loc799 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc581))
#loc800 = loc("concatenate_1024"(#loc581))
#loc801 = loc("ultralytics.nn.modules.conv.Conv::cv3"(#loc581))
#loc802 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc582))
#loc803 = loc("sigmoid_1055"(#loc582))
#loc804 = loc("multiply_1056"(#loc582))
#loc805 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc583))
#loc806 = loc("torch.nn.modules.container.Sequential::m"(#loc583))
#loc807 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc583))
#loc808 = loc("concatenate_1137"(#loc583))
#loc809 = loc("ultralytics.nn.modules.conv.Conv::cv3"(#loc583))
#loc810 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc584))
#loc811 = loc("sigmoid_1168"(#loc584))
#loc812 = loc("multiply_1169"(#loc584))
#loc813 = loc("conv2d_1171.dc.transpose.0"(#loc585))
#loc814 = loc("conv2d_1171.dc.transpose.1"(#loc585))
#loc815 = loc("conv2d_1171.dc.conv2d.2"(#loc585))
#loc816 = loc("conv2d_1171.dc.transpose.3"(#loc585))
#loc817 = loc("conv2d_1171.dc.transpose.4"(#loc585))
#loc818 = loc("conv2d_1187.dc.transpose.0"(#loc588))
#loc819 = loc("conv2d_1187.dc.transpose.1"(#loc588))
#loc820 = loc("conv2d_1187.dc.conv2d.2"(#loc588))
#loc821 = loc("conv2d_1187.dc.transpose.3"(#loc588))
#loc822 = loc("conv2d_1187.dc.transpose.4"(#loc588))
#loc823 = loc("conv2d_1207.dc.transpose.0"(#loc606))
#loc824 = loc("conv2d_1207.dc.transpose.1"(#loc606))
#loc825 = loc("conv2d_1207.dc.conv2d.2"(#loc606))
#loc826 = loc("conv2d_1207.dc.transpose.3"(#loc606))
#loc827 = loc("conv2d_1207.dc.transpose.4"(#loc606))
#loc828 = loc("conv2d_1225.dc.transpose.0"(#loc609))
#loc829 = loc("conv2d_1225.dc.transpose.1"(#loc609))
#loc830 = loc("conv2d_1225.dc.conv2d.2"(#loc609))
#loc831 = loc("conv2d_1225.dc.transpose.3"(#loc609))
#loc832 = loc("conv2d_1225.dc.transpose.4"(#loc609))
#loc833 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc612))
#loc834 = loc("torch.nn.modules.container.Sequential::m"(#loc612))
#loc835 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc612))
#loc836 = loc("concatenate_1323"(#loc612))
#loc837 = loc("ultralytics.nn.modules.conv.Conv::cv3"(#loc612))
#loc838 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc613))
#loc839 = loc("sigmoid_1354"(#loc613))
#loc840 = loc("multiply_1355"(#loc613))
#loc841 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc614))
#loc842 = loc("torch.nn.modules.container.Sequential::m"(#loc614))
#loc843 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc614))
#loc844 = loc("concatenate_1436"(#loc614))
#loc845 = loc("ultralytics.nn.modules.conv.Conv::cv3"(#loc614))
#loc846 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc615))
#loc847 = loc("sigmoid_1467"(#loc615))
#loc848 = loc("multiply_1468"(#loc615))
#loc849 = loc("conv2d_1470.dc.transpose.0"(#loc616))
#loc850 = loc("conv2d_1470.dc.transpose.1"(#loc616))
#loc851 = loc("conv2d_1470.dc.conv2d.2"(#loc616))
#loc852 = loc("conv2d_1470.dc.transpose.3"(#loc616))
#loc853 = loc("conv2d_1470.dc.transpose.4"(#loc616))
#loc854 = loc("conv2d_1488.dc.transpose.0"(#loc619))
#loc855 = loc("conv2d_1488.dc.transpose.1"(#loc619))
#loc856 = loc("conv2d_1488.dc.conv2d.2"(#loc619))
#loc857 = loc("conv2d_1488.dc.transpose.3"(#loc619))
#loc858 = loc("conv2d_1488.dc.transpose.4"(#loc619))
#loc859 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc622))
#loc860 = loc("torch.nn.modules.container.Sequential::m"(#loc622))
#loc861 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc622))
#loc862 = loc("concatenate_1586"(#loc622))
#loc863 = loc("ultralytics.nn.modules.conv.Conv::cv3"(#loc622))
#loc864 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc623))
#loc865 = loc("sigmoid_1617"(#loc623))
#loc866 = loc("multiply_1618"(#loc623))
#loc867 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc624))
#loc868 = loc("torch.nn.modules.container.Sequential::m"(#loc624))
#loc869 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc624))
#loc870 = loc("concatenate_1699"(#loc624))
#loc871 = loc("ultralytics.nn.modules.conv.Conv::cv3"(#loc624))
#loc872 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc625))
#loc873 = loc("sigmoid_1730"(#loc625))
#loc874 = loc("multiply_1731"(#loc625))
#loc875 = loc("conv2d_1733.dc.transpose.0"(#loc626))
#loc876 = loc("conv2d_1733.dc.transpose.1"(#loc626))
#loc877 = loc("conv2d_1733.dc.conv2d.2"(#loc626))
#loc878 = loc("conv2d_1733.dc.transpose.3"(#loc626))
#loc879 = loc("conv2d_1733.dc.transpose.4"(#loc626))
#loc880 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc629))
#loc881 = loc("sigmoid_1763"(#loc629))
#loc882 = loc("multiply_1764"(#loc629))
#loc883 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc630))
#loc884 = loc("sigmoid_1779"(#loc630))
#loc885 = loc("multiply_1780"(#loc630))
#loc886 = loc("conv2d_1781.dc.transpose.0"(#loc631))
#loc887 = loc("conv2d_1781.dc.transpose.1"(#loc631))
#loc888 = loc("conv2d_1781.dc.conv2d.4"(#loc631))
#loc889 = loc("conv2d_1781.dc.transpose.5"(#loc631))
#loc890 = loc("conv2d_1781.dc.transpose.6"(#loc631))
#loc891 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc632))
#loc892 = loc("sigmoid_1799"(#loc632))
#loc893 = loc("multiply_1800"(#loc632))
#loc894 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc633))
#loc895 = loc("sigmoid_1815"(#loc633))
#loc896 = loc("multiply_1816"(#loc633))
#loc897 = loc("conv2d_1817.dc.transpose.0"(#loc634))
#loc898 = loc("conv2d_1817.dc.transpose.1"(#loc634))
#loc899 = loc("conv2d_1817.dc.conv2d.4"(#loc634))
#loc900 = loc("conv2d_1817.dc.transpose.5"(#loc634))
#loc901 = loc("conv2d_1817.dc.transpose.6"(#loc634))
#loc902 = loc("conv2d_1825.dc.transpose.0"(#loc635))
#loc903 = loc("conv2d_1825.dc.transpose.1"(#loc635))
#loc904 = loc("conv2d_1825.dc.conv2d.2"(#loc635))
#loc905 = loc("conv2d_1825.dc.transpose.3"(#loc635))
#loc906 = loc("conv2d_1825.dc.transpose.4"(#loc635))
#loc907 = loc("conv2d_1843.dc.transpose.0"(#loc638))
#loc908 = loc("conv2d_1843.dc.transpose.1"(#loc638))
#loc909 = loc("conv2d_1843.dc.conv2d.2"(#loc638))
#loc910 = loc("conv2d_1843.dc.transpose.3"(#loc638))
#loc911 = loc("conv2d_1843.dc.transpose.4"(#loc638))
#loc912 = loc("conv2d_1861.dc.transpose.0"(#loc641))
#loc913 = loc("conv2d_1861.dc.transpose.1"(#loc641))
#loc914 = loc("conv2d_1861.dc.conv2d.2"(#loc641))
#loc915 = loc("conv2d_1861.dc.transpose.3"(#loc641))
#loc916 = loc("conv2d_1861.dc.transpose.4"(#loc641))
#loc917 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc644))
#loc918 = loc("torch.nn.modules.container.Sequential::m"(#loc644))
#loc919 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc644))
#loc920 = loc("concatenate_1959"(#loc644))
#loc921 = loc("ultralytics.nn.modules.conv.Conv::cv3"(#loc644))
#loc922 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc645))
#loc923 = loc("sigmoid_1990"(#loc645))
#loc924 = loc("multiply_1991"(#loc645))
#loc925 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc646))
#loc926 = loc("torch.nn.modules.container.Sequential::m"(#loc646))
#loc927 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc646))
#loc928 = loc("concatenate_2072"(#loc646))
#loc929 = loc("ultralytics.nn.modules.conv.Conv::cv3"(#loc646))
#loc930 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc647))
#loc931 = loc("sigmoid_2103"(#loc647))
#loc932 = loc("multiply_2104"(#loc647))
#loc933 = loc("conv2d_2106.dc.transpose.0"(#loc648))
#loc934 = loc("conv2d_2106.dc.transpose.1"(#loc648))
#loc935 = loc("conv2d_2106.dc.conv2d.2"(#loc648))
#loc936 = loc("conv2d_2106.dc.transpose.3"(#loc648))
#loc937 = loc("conv2d_2106.dc.transpose.4"(#loc648))
#loc938 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc651))
#loc939 = loc("sigmoid_2136"(#loc651))
#loc940 = loc("multiply_2137"(#loc651))
#loc941 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc652))
#loc942 = loc("sigmoid_2152"(#loc652))
#loc943 = loc("multiply_2153"(#loc652))
#loc944 = loc("conv2d_2154.dc.transpose.0"(#loc653))
#loc945 = loc("conv2d_2154.dc.transpose.1"(#loc653))
#loc946 = loc("conv2d_2154.dc.conv2d.4"(#loc653))
#loc947 = loc("conv2d_2154.dc.transpose.5"(#loc653))
#loc948 = loc("conv2d_2154.dc.transpose.6"(#loc653))
#loc949 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc654))
#loc950 = loc("sigmoid_2172"(#loc654))
#loc951 = loc("multiply_2173"(#loc654))
#loc952 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc655))
#loc953 = loc("sigmoid_2188"(#loc655))
#loc954 = loc("multiply_2189"(#loc655))
#loc955 = loc("conv2d_2190.dc.transpose.0"(#loc656))
#loc956 = loc("conv2d_2190.dc.transpose.1"(#loc656))
#loc957 = loc("conv2d_2190.dc.conv2d.4"(#loc656))
#loc958 = loc("conv2d_2190.dc.transpose.5"(#loc656))
#loc959 = loc("conv2d_2190.dc.transpose.6"(#loc656))
#loc960 = loc("conv2d_2198.dc.transpose.0"(#loc657))
#loc961 = loc("conv2d_2198.dc.transpose.1"(#loc657))
#loc962 = loc("conv2d_2198.dc.conv2d.2"(#loc657))
#loc963 = loc("conv2d_2198.dc.transpose.3"(#loc657))
#loc964 = loc("conv2d_2198.dc.transpose.4"(#loc657))
#loc965 = loc("conv2d_2216.dc.transpose.0"(#loc660))
#loc966 = loc("conv2d_2216.dc.transpose.1"(#loc660))
#loc967 = loc("conv2d_2216.dc.conv2d.2"(#loc660))
#loc968 = loc("conv2d_2216.dc.transpose.3"(#loc660))
#loc969 = loc("conv2d_2216.dc.transpose.4"(#loc660))
#loc970 = loc("conv2d_2234.dc.transpose.0"(#loc663))
#loc971 = loc("conv2d_2234.dc.transpose.1"(#loc663))
#loc972 = loc("conv2d_2234.dc.conv2d.2"(#loc663))
#loc973 = loc("conv2d_2234.dc.transpose.3"(#loc663))
#loc974 = loc("conv2d_2234.dc.transpose.4"(#loc663))
#loc975 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc666))
#loc976 = loc("torch.nn.modules.container.Sequential::m"(#loc666))
#loc977 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc666))
#loc978 = loc("concatenate_2332"(#loc666))
#loc979 = loc("ultralytics.nn.modules.conv.Conv::cv3"(#loc666))
#loc980 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc667))
#loc981 = loc("sigmoid_2363"(#loc667))
#loc982 = loc("multiply_2364"(#loc667))
#loc983 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc668))
#loc984 = loc("torch.nn.modules.container.Sequential::m"(#loc668))
#loc985 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc668))
#loc986 = loc("concatenate_2445"(#loc668))
#loc987 = loc("ultralytics.nn.modules.conv.Conv::cv3"(#loc668))
#loc988 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc669))
#loc989 = loc("sigmoid_2476"(#loc669))
#loc990 = loc("multiply_2477"(#loc669))
#loc991 = loc("conv2d_2479.dc.transpose.0"(#loc670))
#loc992 = loc("conv2d_2479.dc.transpose.1"(#loc670))
#loc993 = loc("conv2d_2479.dc.conv2d.2"(#loc670))
#loc994 = loc("conv2d_2479.dc.transpose.3"(#loc670))
#loc995 = loc("conv2d_2479.dc.transpose.4"(#loc670))
#loc996 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc673))
#loc997 = loc("sigmoid_2509"(#loc673))
#loc998 = loc("multiply_2510"(#loc673))
#loc999 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc674))
#loc1000 = loc("sigmoid_2525"(#loc674))
#loc1001 = loc("multiply_2526"(#loc674))
#loc1002 = loc("conv2d_2527.dc.transpose.0"(#loc675))
#loc1003 = loc("conv2d_2527.dc.transpose.1"(#loc675))
#loc1004 = loc("conv2d_2527.dc.conv2d.4"(#loc675))
#loc1005 = loc("conv2d_2527.dc.transpose.5"(#loc675))
#loc1006 = loc("conv2d_2527.dc.transpose.6"(#loc675))
#loc1007 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc676))
#loc1008 = loc("sigmoid_2545"(#loc676))
#loc1009 = loc("multiply_2546"(#loc676))
#loc1010 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc677))
#loc1011 = loc("sigmoid_2561"(#loc677))
#loc1012 = loc("multiply_2562"(#loc677))
#loc1013 = loc("conv2d_2563.dc.transpose.0"(#loc678))
#loc1014 = loc("conv2d_2563.dc.transpose.1"(#loc678))
#loc1015 = loc("conv2d_2563.dc.conv2d.4"(#loc678))
#loc1016 = loc("conv2d_2563.dc.transpose.5"(#loc678))
#loc1017 = loc("conv2d_2563.dc.transpose.6"(#loc678))
#loc1018 = loc("conv2d_2574.dc.transpose.0"(#loc682))
#loc1019 = loc("conv2d_2574.dc.transpose.1"(#loc682))
#loc1020 = loc("conv2d_2574.dc.conv2d.2"(#loc682))
#loc1021 = loc("conv2d_2574.dc.transpose.3"(#loc682))
#loc1022 = loc("conv2d_2574.dc.transpose.4"(#loc682))
#loc1023 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc689))
#loc1024 = loc("sigmoid_64"(#loc689))
#loc1025 = loc("multiply_65"(#loc689))
#loc1026 = loc("ultralytics.nn.modules.block.RepBottleneck::0"(#loc690))
#loc1027 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc691))
#loc1028 = loc("sigmoid_128"(#loc691))
#loc1029 = loc("multiply_129"(#loc691))
#loc1030 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc693))
#loc1031 = loc("sigmoid_145"(#loc693))
#loc1032 = loc("multiply_146"(#loc693))
#loc1033 = loc("conv2d_147.dc.transpose.0"(#loc694))
#loc1034 = loc("conv2d_147.dc.transpose.1"(#loc694))
#loc1035 = loc("conv2d_147.dc.conv2d.2"(#loc694))
#loc1036 = loc("conv2d_147.dc.transpose.3"(#loc694))
#loc1037 = loc("conv2d_147.dc.transpose.4"(#loc694))
#loc1038 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc697))
#loc1039 = loc("sigmoid_177"(#loc697))
#loc1040 = loc("multiply_178"(#loc697))
#loc1041 = loc("ultralytics.nn.modules.block.RepBottleneck::0"(#loc698))
#loc1042 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc699))
#loc1043 = loc("sigmoid_241"(#loc699))
#loc1044 = loc("multiply_242"(#loc699))
#loc1045 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc701))
#loc1046 = loc("sigmoid_258"(#loc701))
#loc1047 = loc("multiply_259"(#loc701))
#loc1048 = loc("conv2d_260.dc.transpose.0"(#loc702))
#loc1049 = loc("conv2d_260.dc.transpose.1"(#loc702))
#loc1050 = loc("conv2d_260.dc.conv2d.2"(#loc702))
#loc1051 = loc("conv2d_260.dc.transpose.3"(#loc702))
#loc1052 = loc("conv2d_260.dc.transpose.4"(#loc702))
#loc1053 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc725))
#loc1054 = loc("sigmoid_362"(#loc725))
#loc1055 = loc("multiply_363"(#loc725))
#loc1056 = loc("ultralytics.nn.modules.block.RepBottleneck::0"(#loc726))
#loc1057 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc727))
#loc1058 = loc("sigmoid_426"(#loc727))
#loc1059 = loc("multiply_427"(#loc727))
#loc1060 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc729))
#loc1061 = loc("sigmoid_443"(#loc729))
#loc1062 = loc("multiply_444"(#loc729))
#loc1063 = loc("conv2d_445.dc.transpose.0"(#loc730))
#loc1064 = loc("conv2d_445.dc.transpose.1"(#loc730))
#loc1065 = loc("conv2d_445.dc.conv2d.2"(#loc730))
#loc1066 = loc("conv2d_445.dc.transpose.3"(#loc730))
#loc1067 = loc("conv2d_445.dc.transpose.4"(#loc730))
#loc1068 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc733))
#loc1069 = loc("sigmoid_475"(#loc733))
#loc1070 = loc("multiply_476"(#loc733))
#loc1071 = loc("ultralytics.nn.modules.block.RepBottleneck::0"(#loc734))
#loc1072 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc735))
#loc1073 = loc("sigmoid_539"(#loc735))
#loc1074 = loc("multiply_540"(#loc735))
#loc1075 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc737))
#loc1076 = loc("sigmoid_556"(#loc737))
#loc1077 = loc("multiply_557"(#loc737))
#loc1078 = loc("conv2d_558.dc.transpose.0"(#loc738))
#loc1079 = loc("conv2d_558.dc.transpose.1"(#loc738))
#loc1080 = loc("conv2d_558.dc.conv2d.2"(#loc738))
#loc1081 = loc("conv2d_558.dc.transpose.3"(#loc738))
#loc1082 = loc("conv2d_558.dc.transpose.4"(#loc738))
#loc1083 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc761))
#loc1084 = loc("sigmoid_660"(#loc761))
#loc1085 = loc("multiply_661"(#loc761))
#loc1086 = loc("ultralytics.nn.modules.block.RepBottleneck::0"(#loc762))
#loc1087 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc763))
#loc1088 = loc("sigmoid_724"(#loc763))
#loc1089 = loc("multiply_725"(#loc763))
#loc1090 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc765))
#loc1091 = loc("sigmoid_741"(#loc765))
#loc1092 = loc("multiply_742"(#loc765))
#loc1093 = loc("conv2d_743.dc.transpose.0"(#loc766))
#loc1094 = loc("conv2d_743.dc.transpose.1"(#loc766))
#loc1095 = loc("conv2d_743.dc.conv2d.2"(#loc766))
#loc1096 = loc("conv2d_743.dc.transpose.3"(#loc766))
#loc1097 = loc("conv2d_743.dc.transpose.4"(#loc766))
#loc1098 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc769))
#loc1099 = loc("sigmoid_773"(#loc769))
#loc1100 = loc("multiply_774"(#loc769))
#loc1101 = loc("ultralytics.nn.modules.block.RepBottleneck::0"(#loc770))
#loc1102 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc771))
#loc1103 = loc("sigmoid_837"(#loc771))
#loc1104 = loc("multiply_838"(#loc771))
#loc1105 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc773))
#loc1106 = loc("sigmoid_854"(#loc773))
#loc1107 = loc("multiply_855"(#loc773))
#loc1108 = loc("conv2d_856.dc.transpose.0"(#loc774))
#loc1109 = loc("conv2d_856.dc.transpose.1"(#loc774))
#loc1110 = loc("conv2d_856.dc.conv2d.2"(#loc774))
#loc1111 = loc("conv2d_856.dc.transpose.3"(#loc774))
#loc1112 = loc("conv2d_856.dc.transpose.4"(#loc774))
#loc1113 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc797))
#loc1114 = loc("sigmoid_958"(#loc797))
#loc1115 = loc("multiply_959"(#loc797))
#loc1116 = loc("ultralytics.nn.modules.block.RepBottleneck::0"(#loc798))
#loc1117 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc799))
#loc1118 = loc("sigmoid_1022"(#loc799))
#loc1119 = loc("multiply_1023"(#loc799))
#loc1120 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc801))
#loc1121 = loc("sigmoid_1039"(#loc801))
#loc1122 = loc("multiply_1040"(#loc801))
#loc1123 = loc("conv2d_1041.dc.transpose.0"(#loc802))
#loc1124 = loc("conv2d_1041.dc.transpose.1"(#loc802))
#loc1125 = loc("conv2d_1041.dc.conv2d.2"(#loc802))
#loc1126 = loc("conv2d_1041.dc.transpose.3"(#loc802))
#loc1127 = loc("conv2d_1041.dc.transpose.4"(#loc802))
#loc1128 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc805))
#loc1129 = loc("sigmoid_1071"(#loc805))
#loc1130 = loc("multiply_1072"(#loc805))
#loc1131 = loc("ultralytics.nn.modules.block.RepBottleneck::0"(#loc806))
#loc1132 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc807))
#loc1133 = loc("sigmoid_1135"(#loc807))
#loc1134 = loc("multiply_1136"(#loc807))
#loc1135 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc809))
#loc1136 = loc("sigmoid_1152"(#loc809))
#loc1137 = loc("multiply_1153"(#loc809))
#loc1138 = loc("conv2d_1154.dc.transpose.0"(#loc810))
#loc1139 = loc("conv2d_1154.dc.transpose.1"(#loc810))
#loc1140 = loc("conv2d_1154.dc.conv2d.2"(#loc810))
#loc1141 = loc("conv2d_1154.dc.transpose.3"(#loc810))
#loc1142 = loc("conv2d_1154.dc.transpose.4"(#loc810))
#loc1143 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc833))
#loc1144 = loc("sigmoid_1257"(#loc833))
#loc1145 = loc("multiply_1258"(#loc833))
#loc1146 = loc("ultralytics.nn.modules.block.RepBottleneck::0"(#loc834))
#loc1147 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc835))
#loc1148 = loc("sigmoid_1321"(#loc835))
#loc1149 = loc("multiply_1322"(#loc835))
#loc1150 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc837))
#loc1151 = loc("sigmoid_1338"(#loc837))
#loc1152 = loc("multiply_1339"(#loc837))
#loc1153 = loc("conv2d_1340.dc.transpose.0"(#loc838))
#loc1154 = loc("conv2d_1340.dc.transpose.1"(#loc838))
#loc1155 = loc("conv2d_1340.dc.conv2d.2"(#loc838))
#loc1156 = loc("conv2d_1340.dc.transpose.3"(#loc838))
#loc1157 = loc("conv2d_1340.dc.transpose.4"(#loc838))
#loc1158 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc841))
#loc1159 = loc("sigmoid_1370"(#loc841))
#loc1160 = loc("multiply_1371"(#loc841))
#loc1161 = loc("ultralytics.nn.modules.block.RepBottleneck::0"(#loc842))
#loc1162 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc843))
#loc1163 = loc("sigmoid_1434"(#loc843))
#loc1164 = loc("multiply_1435"(#loc843))
#loc1165 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc845))
#loc1166 = loc("sigmoid_1451"(#loc845))
#loc1167 = loc("multiply_1452"(#loc845))
#loc1168 = loc("conv2d_1453.dc.transpose.0"(#loc846))
#loc1169 = loc("conv2d_1453.dc.transpose.1"(#loc846))
#loc1170 = loc("conv2d_1453.dc.conv2d.2"(#loc846))
#loc1171 = loc("conv2d_1453.dc.transpose.3"(#loc846))
#loc1172 = loc("conv2d_1453.dc.transpose.4"(#loc846))
#loc1173 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc859))
#loc1174 = loc("sigmoid_1520"(#loc859))
#loc1175 = loc("multiply_1521"(#loc859))
#loc1176 = loc("ultralytics.nn.modules.block.RepBottleneck::0"(#loc860))
#loc1177 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc861))
#loc1178 = loc("sigmoid_1584"(#loc861))
#loc1179 = loc("multiply_1585"(#loc861))
#loc1180 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc863))
#loc1181 = loc("sigmoid_1601"(#loc863))
#loc1182 = loc("multiply_1602"(#loc863))
#loc1183 = loc("conv2d_1603.dc.transpose.0"(#loc864))
#loc1184 = loc("conv2d_1603.dc.transpose.1"(#loc864))
#loc1185 = loc("conv2d_1603.dc.conv2d.2"(#loc864))
#loc1186 = loc("conv2d_1603.dc.transpose.3"(#loc864))
#loc1187 = loc("conv2d_1603.dc.transpose.4"(#loc864))
#loc1188 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc867))
#loc1189 = loc("sigmoid_1633"(#loc867))
#loc1190 = loc("multiply_1634"(#loc867))
#loc1191 = loc("ultralytics.nn.modules.block.RepBottleneck::0"(#loc868))
#loc1192 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc869))
#loc1193 = loc("sigmoid_1697"(#loc869))
#loc1194 = loc("multiply_1698"(#loc869))
#loc1195 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc871))
#loc1196 = loc("sigmoid_1714"(#loc871))
#loc1197 = loc("multiply_1715"(#loc871))
#loc1198 = loc("conv2d_1716.dc.transpose.0"(#loc872))
#loc1199 = loc("conv2d_1716.dc.transpose.1"(#loc872))
#loc1200 = loc("conv2d_1716.dc.conv2d.2"(#loc872))
#loc1201 = loc("conv2d_1716.dc.transpose.3"(#loc872))
#loc1202 = loc("conv2d_1716.dc.transpose.4"(#loc872))
#loc1203 = loc("conv2d_1749.dc.transpose.0"(#loc880))
#loc1204 = loc("conv2d_1749.dc.transpose.1"(#loc880))
#loc1205 = loc("conv2d_1749.dc.conv2d.2"(#loc880))
#loc1206 = loc("conv2d_1749.dc.transpose.3"(#loc880))
#loc1207 = loc("conv2d_1749.dc.transpose.4"(#loc880))
#loc1208 = loc("conv2d_1765.dc.transpose.0"(#loc883))
#loc1209 = loc("conv2d_1765.dc.transpose.1"(#loc883))
#loc1210 = loc("conv2d_1765.dc.conv2d.2"(#loc883))
#loc1211 = loc("conv2d_1765.dc.transpose.3"(#loc883))
#loc1212 = loc("conv2d_1765.dc.transpose.4"(#loc883))
#loc1213 = loc("conv2d_1785.dc.transpose.0"(#loc891))
#loc1214 = loc("conv2d_1785.dc.transpose.1"(#loc891))
#loc1215 = loc("conv2d_1785.dc.conv2d.2"(#loc891))
#loc1216 = loc("conv2d_1785.dc.transpose.3"(#loc891))
#loc1217 = loc("conv2d_1785.dc.transpose.4"(#loc891))
#loc1218 = loc("conv2d_1801.dc.transpose.0"(#loc894))
#loc1219 = loc("conv2d_1801.dc.transpose.1"(#loc894))
#loc1220 = loc("conv2d_1801.dc.conv2d.2"(#loc894))
#loc1221 = loc("conv2d_1801.dc.transpose.3"(#loc894))
#loc1222 = loc("conv2d_1801.dc.transpose.4"(#loc894))
#loc1223 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc917))
#loc1224 = loc("sigmoid_1893"(#loc917))
#loc1225 = loc("multiply_1894"(#loc917))
#loc1226 = loc("ultralytics.nn.modules.block.RepBottleneck::0"(#loc918))
#loc1227 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc919))
#loc1228 = loc("sigmoid_1957"(#loc919))
#loc1229 = loc("multiply_1958"(#loc919))
#loc1230 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc921))
#loc1231 = loc("sigmoid_1974"(#loc921))
#loc1232 = loc("multiply_1975"(#loc921))
#loc1233 = loc("conv2d_1976.dc.transpose.0"(#loc922))
#loc1234 = loc("conv2d_1976.dc.transpose.1"(#loc922))
#loc1235 = loc("conv2d_1976.dc.conv2d.2"(#loc922))
#loc1236 = loc("conv2d_1976.dc.transpose.3"(#loc922))
#loc1237 = loc("conv2d_1976.dc.transpose.4"(#loc922))
#loc1238 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc925))
#loc1239 = loc("sigmoid_2006"(#loc925))
#loc1240 = loc("multiply_2007"(#loc925))
#loc1241 = loc("ultralytics.nn.modules.block.RepBottleneck::0"(#loc926))
#loc1242 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc927))
#loc1243 = loc("sigmoid_2070"(#loc927))
#loc1244 = loc("multiply_2071"(#loc927))
#loc1245 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc929))
#loc1246 = loc("sigmoid_2087"(#loc929))
#loc1247 = loc("multiply_2088"(#loc929))
#loc1248 = loc("conv2d_2089.dc.transpose.0"(#loc930))
#loc1249 = loc("conv2d_2089.dc.transpose.1"(#loc930))
#loc1250 = loc("conv2d_2089.dc.conv2d.2"(#loc930))
#loc1251 = loc("conv2d_2089.dc.transpose.3"(#loc930))
#loc1252 = loc("conv2d_2089.dc.transpose.4"(#loc930))
#loc1253 = loc("conv2d_2122.dc.transpose.0"(#loc938))
#loc1254 = loc("conv2d_2122.dc.transpose.1"(#loc938))
#loc1255 = loc("conv2d_2122.dc.conv2d.2"(#loc938))
#loc1256 = loc("conv2d_2122.dc.transpose.3"(#loc938))
#loc1257 = loc("conv2d_2122.dc.transpose.4"(#loc938))
#loc1258 = loc("conv2d_2138.dc.transpose.0"(#loc941))
#loc1259 = loc("conv2d_2138.dc.transpose.1"(#loc941))
#loc1260 = loc("conv2d_2138.dc.conv2d.2"(#loc941))
#loc1261 = loc("conv2d_2138.dc.transpose.3"(#loc941))
#loc1262 = loc("conv2d_2138.dc.transpose.4"(#loc941))
#loc1263 = loc("conv2d_2158.dc.transpose.0"(#loc949))
#loc1264 = loc("conv2d_2158.dc.transpose.1"(#loc949))
#loc1265 = loc("conv2d_2158.dc.conv2d.2"(#loc949))
#loc1266 = loc("conv2d_2158.dc.transpose.3"(#loc949))
#loc1267 = loc("conv2d_2158.dc.transpose.4"(#loc949))
#loc1268 = loc("conv2d_2174.dc.transpose.0"(#loc952))
#loc1269 = loc("conv2d_2174.dc.transpose.1"(#loc952))
#loc1270 = loc("conv2d_2174.dc.conv2d.2"(#loc952))
#loc1271 = loc("conv2d_2174.dc.transpose.3"(#loc952))
#loc1272 = loc("conv2d_2174.dc.transpose.4"(#loc952))
#loc1273 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc975))
#loc1274 = loc("sigmoid_2266"(#loc975))
#loc1275 = loc("multiply_2267"(#loc975))
#loc1276 = loc("ultralytics.nn.modules.block.RepBottleneck::0"(#loc976))
#loc1277 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc977))
#loc1278 = loc("sigmoid_2330"(#loc977))
#loc1279 = loc("multiply_2331"(#loc977))
#loc1280 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc979))
#loc1281 = loc("sigmoid_2347"(#loc979))
#loc1282 = loc("multiply_2348"(#loc979))
#loc1283 = loc("conv2d_2349.dc.transpose.0"(#loc980))
#loc1284 = loc("conv2d_2349.dc.transpose.1"(#loc980))
#loc1285 = loc("conv2d_2349.dc.conv2d.2"(#loc980))
#loc1286 = loc("conv2d_2349.dc.transpose.3"(#loc980))
#loc1287 = loc("conv2d_2349.dc.transpose.4"(#loc980))
#loc1288 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc983))
#loc1289 = loc("sigmoid_2379"(#loc983))
#loc1290 = loc("multiply_2380"(#loc983))
#loc1291 = loc("ultralytics.nn.modules.block.RepBottleneck::0"(#loc984))
#loc1292 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc985))
#loc1293 = loc("sigmoid_2443"(#loc985))
#loc1294 = loc("multiply_2444"(#loc985))
#loc1295 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc987))
#loc1296 = loc("sigmoid_2460"(#loc987))
#loc1297 = loc("multiply_2461"(#loc987))
#loc1298 = loc("conv2d_2462.dc.transpose.0"(#loc988))
#loc1299 = loc("conv2d_2462.dc.transpose.1"(#loc988))
#loc1300 = loc("conv2d_2462.dc.conv2d.2"(#loc988))
#loc1301 = loc("conv2d_2462.dc.transpose.3"(#loc988))
#loc1302 = loc("conv2d_2462.dc.transpose.4"(#loc988))
#loc1303 = loc("conv2d_2495.dc.transpose.0"(#loc996))
#loc1304 = loc("conv2d_2495.dc.transpose.1"(#loc996))
#loc1305 = loc("conv2d_2495.dc.conv2d.2"(#loc996))
#loc1306 = loc("conv2d_2495.dc.transpose.3"(#loc996))
#loc1307 = loc("conv2d_2495.dc.transpose.4"(#loc996))
#loc1308 = loc("conv2d_2511.dc.transpose.0"(#loc999))
#loc1309 = loc("conv2d_2511.dc.transpose.1"(#loc999))
#loc1310 = loc("conv2d_2511.dc.conv2d.2"(#loc999))
#loc1311 = loc("conv2d_2511.dc.transpose.3"(#loc999))
#loc1312 = loc("conv2d_2511.dc.transpose.4"(#loc999))
#loc1313 = loc("conv2d_2531.dc.transpose.0"(#loc1007))
#loc1314 = loc("conv2d_2531.dc.transpose.1"(#loc1007))
#loc1315 = loc("conv2d_2531.dc.conv2d.2"(#loc1007))
#loc1316 = loc("conv2d_2531.dc.transpose.3"(#loc1007))
#loc1317 = loc("conv2d_2531.dc.transpose.4"(#loc1007))
#loc1318 = loc("conv2d_2547.dc.transpose.0"(#loc1010))
#loc1319 = loc("conv2d_2547.dc.transpose.1"(#loc1010))
#loc1320 = loc("conv2d_2547.dc.conv2d.2"(#loc1010))
#loc1321 = loc("conv2d_2547.dc.transpose.3"(#loc1010))
#loc1322 = loc("conv2d_2547.dc.transpose.4"(#loc1010))
#loc1323 = loc("conv2d_50.dc.transpose.0"(#loc1023))
#loc1324 = loc("conv2d_50.dc.transpose.1"(#loc1023))
#loc1325 = loc("conv2d_50.dc.conv2d.2"(#loc1023))
#loc1326 = loc("conv2d_50.dc.transpose.3"(#loc1023))
#loc1327 = loc("conv2d_50.dc.transpose.4"(#loc1023))
#loc1328 = loc("ultralytics.nn.modules.conv.RepConv::cv1"(#loc1026))
#loc1329 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc1026))
#loc1330 = loc("add_113"(#loc1026))
#loc1331 = loc("conv2d_114.dc.transpose.0"(#loc1027))
#loc1332 = loc("conv2d_114.dc.transpose.1"(#loc1027))
#loc1333 = loc("conv2d_114.dc.conv2d.2"(#loc1027))
#loc1334 = loc("conv2d_114.dc.transpose.3"(#loc1027))
#loc1335 = loc("conv2d_114.dc.transpose.4"(#loc1027))
#loc1336 = loc("conv2d_131.dc.transpose.0"(#loc1030))
#loc1337 = loc("conv2d_131.dc.transpose.1"(#loc1030))
#loc1338 = loc("conv2d_131.dc.conv2d.2"(#loc1030))
#loc1339 = loc("conv2d_131.dc.transpose.3"(#loc1030))
#loc1340 = loc("conv2d_131.dc.transpose.4"(#loc1030))
#loc1341 = loc("conv2d_163.dc.transpose.0"(#loc1038))
#loc1342 = loc("conv2d_163.dc.transpose.1"(#loc1038))
#loc1343 = loc("conv2d_163.dc.conv2d.2"(#loc1038))
#loc1344 = loc("conv2d_163.dc.transpose.3"(#loc1038))
#loc1345 = loc("conv2d_163.dc.transpose.4"(#loc1038))
#loc1346 = loc("ultralytics.nn.modules.conv.RepConv::cv1"(#loc1041))
#loc1347 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc1041))
#loc1348 = loc("add_226"(#loc1041))
#loc1349 = loc("conv2d_227.dc.transpose.0"(#loc1042))
#loc1350 = loc("conv2d_227.dc.transpose.1"(#loc1042))
#loc1351 = loc("conv2d_227.dc.conv2d.2"(#loc1042))
#loc1352 = loc("conv2d_227.dc.transpose.3"(#loc1042))
#loc1353 = loc("conv2d_227.dc.transpose.4"(#loc1042))
#loc1354 = loc("conv2d_244.dc.transpose.0"(#loc1045))
#loc1355 = loc("conv2d_244.dc.transpose.1"(#loc1045))
#loc1356 = loc("conv2d_244.dc.conv2d.2"(#loc1045))
#loc1357 = loc("conv2d_244.dc.transpose.3"(#loc1045))
#loc1358 = loc("conv2d_244.dc.transpose.4"(#loc1045))
#loc1359 = loc("conv2d_348.dc.transpose.0"(#loc1053))
#loc1360 = loc("conv2d_348.dc.transpose.1"(#loc1053))
#loc1361 = loc("conv2d_348.dc.conv2d.2"(#loc1053))
#loc1362 = loc("conv2d_348.dc.transpose.3"(#loc1053))
#loc1363 = loc("conv2d_348.dc.transpose.4"(#loc1053))
#loc1364 = loc("ultralytics.nn.modules.conv.RepConv::cv1"(#loc1056))
#loc1365 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc1056))
#loc1366 = loc("add_411"(#loc1056))
#loc1367 = loc("conv2d_412.dc.transpose.0"(#loc1057))
#loc1368 = loc("conv2d_412.dc.transpose.1"(#loc1057))
#loc1369 = loc("conv2d_412.dc.conv2d.2"(#loc1057))
#loc1370 = loc("conv2d_412.dc.transpose.3"(#loc1057))
#loc1371 = loc("conv2d_412.dc.transpose.4"(#loc1057))
#loc1372 = loc("conv2d_429.dc.transpose.0"(#loc1060))
#loc1373 = loc("conv2d_429.dc.transpose.1"(#loc1060))
#loc1374 = loc("conv2d_429.dc.conv2d.2"(#loc1060))
#loc1375 = loc("conv2d_429.dc.transpose.3"(#loc1060))
#loc1376 = loc("conv2d_429.dc.transpose.4"(#loc1060))
#loc1377 = loc("conv2d_461.dc.transpose.0"(#loc1068))
#loc1378 = loc("conv2d_461.dc.transpose.1"(#loc1068))
#loc1379 = loc("conv2d_461.dc.conv2d.2"(#loc1068))
#loc1380 = loc("conv2d_461.dc.transpose.3"(#loc1068))
#loc1381 = loc("conv2d_461.dc.transpose.4"(#loc1068))
#loc1382 = loc("ultralytics.nn.modules.conv.RepConv::cv1"(#loc1071))
#loc1383 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc1071))
#loc1384 = loc("add_524"(#loc1071))
#loc1385 = loc("conv2d_525.dc.transpose.0"(#loc1072))
#loc1386 = loc("conv2d_525.dc.transpose.1"(#loc1072))
#loc1387 = loc("conv2d_525.dc.conv2d.2"(#loc1072))
#loc1388 = loc("conv2d_525.dc.transpose.3"(#loc1072))
#loc1389 = loc("conv2d_525.dc.transpose.4"(#loc1072))
#loc1390 = loc("conv2d_542.dc.transpose.0"(#loc1075))
#loc1391 = loc("conv2d_542.dc.transpose.1"(#loc1075))
#loc1392 = loc("conv2d_542.dc.conv2d.2"(#loc1075))
#loc1393 = loc("conv2d_542.dc.transpose.3"(#loc1075))
#loc1394 = loc("conv2d_542.dc.transpose.4"(#loc1075))
#loc1395 = loc("conv2d_646.dc.transpose.0"(#loc1083))
#loc1396 = loc("conv2d_646.dc.transpose.1"(#loc1083))
#loc1397 = loc("conv2d_646.dc.conv2d.2"(#loc1083))
#loc1398 = loc("conv2d_646.dc.transpose.3"(#loc1083))
#loc1399 = loc("conv2d_646.dc.transpose.4"(#loc1083))
#loc1400 = loc("ultralytics.nn.modules.conv.RepConv::cv1"(#loc1086))
#loc1401 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc1086))
#loc1402 = loc("add_709"(#loc1086))
#loc1403 = loc("conv2d_710.dc.transpose.0"(#loc1087))
#loc1404 = loc("conv2d_710.dc.transpose.1"(#loc1087))
#loc1405 = loc("conv2d_710.dc.conv2d.2"(#loc1087))
#loc1406 = loc("conv2d_710.dc.transpose.3"(#loc1087))
#loc1407 = loc("conv2d_710.dc.transpose.4"(#loc1087))
#loc1408 = loc("conv2d_727.dc.transpose.0"(#loc1090))
#loc1409 = loc("conv2d_727.dc.transpose.1"(#loc1090))
#loc1410 = loc("conv2d_727.dc.conv2d.2"(#loc1090))
#loc1411 = loc("conv2d_727.dc.transpose.3"(#loc1090))
#loc1412 = loc("conv2d_727.dc.transpose.4"(#loc1090))
#loc1413 = loc("conv2d_759.dc.transpose.0"(#loc1098))
#loc1414 = loc("conv2d_759.dc.transpose.1"(#loc1098))
#loc1415 = loc("conv2d_759.dc.conv2d.2"(#loc1098))
#loc1416 = loc("conv2d_759.dc.transpose.3"(#loc1098))
#loc1417 = loc("conv2d_759.dc.transpose.4"(#loc1098))
#loc1418 = loc("ultralytics.nn.modules.conv.RepConv::cv1"(#loc1101))
#loc1419 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc1101))
#loc1420 = loc("add_822"(#loc1101))
#loc1421 = loc("conv2d_823.dc.transpose.0"(#loc1102))
#loc1422 = loc("conv2d_823.dc.transpose.1"(#loc1102))
#loc1423 = loc("conv2d_823.dc.conv2d.2"(#loc1102))
#loc1424 = loc("conv2d_823.dc.transpose.3"(#loc1102))
#loc1425 = loc("conv2d_823.dc.transpose.4"(#loc1102))
#loc1426 = loc("conv2d_840.dc.transpose.0"(#loc1105))
#loc1427 = loc("conv2d_840.dc.transpose.1"(#loc1105))
#loc1428 = loc("conv2d_840.dc.conv2d.2"(#loc1105))
#loc1429 = loc("conv2d_840.dc.transpose.3"(#loc1105))
#loc1430 = loc("conv2d_840.dc.transpose.4"(#loc1105))
#loc1431 = loc("conv2d_944.dc.transpose.0"(#loc1113))
#loc1432 = loc("conv2d_944.dc.transpose.1"(#loc1113))
#loc1433 = loc("conv2d_944.dc.conv2d.2"(#loc1113))
#loc1434 = loc("conv2d_944.dc.transpose.3"(#loc1113))
#loc1435 = loc("conv2d_944.dc.transpose.4"(#loc1113))
#loc1436 = loc("ultralytics.nn.modules.conv.RepConv::cv1"(#loc1116))
#loc1437 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc1116))
#loc1438 = loc("add_1007"(#loc1116))
#loc1439 = loc("conv2d_1008.dc.transpose.0"(#loc1117))
#loc1440 = loc("conv2d_1008.dc.transpose.1"(#loc1117))
#loc1441 = loc("conv2d_1008.dc.conv2d.2"(#loc1117))
#loc1442 = loc("conv2d_1008.dc.transpose.3"(#loc1117))
#loc1443 = loc("conv2d_1008.dc.transpose.4"(#loc1117))
#loc1444 = loc("conv2d_1025.dc.transpose.0"(#loc1120))
#loc1445 = loc("conv2d_1025.dc.transpose.1"(#loc1120))
#loc1446 = loc("conv2d_1025.dc.conv2d.2"(#loc1120))
#loc1447 = loc("conv2d_1025.dc.transpose.3"(#loc1120))
#loc1448 = loc("conv2d_1025.dc.transpose.4"(#loc1120))
#loc1449 = loc("conv2d_1057.dc.transpose.0"(#loc1128))
#loc1450 = loc("conv2d_1057.dc.transpose.1"(#loc1128))
#loc1451 = loc("conv2d_1057.dc.conv2d.2"(#loc1128))
#loc1452 = loc("conv2d_1057.dc.transpose.3"(#loc1128))
#loc1453 = loc("conv2d_1057.dc.transpose.4"(#loc1128))
#loc1454 = loc("ultralytics.nn.modules.conv.RepConv::cv1"(#loc1131))
#loc1455 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc1131))
#loc1456 = loc("add_1120"(#loc1131))
#loc1457 = loc("conv2d_1121.dc.transpose.0"(#loc1132))
#loc1458 = loc("conv2d_1121.dc.transpose.1"(#loc1132))
#loc1459 = loc("conv2d_1121.dc.conv2d.2"(#loc1132))
#loc1460 = loc("conv2d_1121.dc.transpose.3"(#loc1132))
#loc1461 = loc("conv2d_1121.dc.transpose.4"(#loc1132))
#loc1462 = loc("conv2d_1138.dc.transpose.0"(#loc1135))
#loc1463 = loc("conv2d_1138.dc.transpose.1"(#loc1135))
#loc1464 = loc("conv2d_1138.dc.conv2d.2"(#loc1135))
#loc1465 = loc("conv2d_1138.dc.transpose.3"(#loc1135))
#loc1466 = loc("conv2d_1138.dc.transpose.4"(#loc1135))
#loc1467 = loc("conv2d_1243.dc.transpose.0"(#loc1143))
#loc1468 = loc("conv2d_1243.dc.transpose.1"(#loc1143))
#loc1469 = loc("conv2d_1243.dc.conv2d.2"(#loc1143))
#loc1470 = loc("conv2d_1243.dc.transpose.3"(#loc1143))
#loc1471 = loc("conv2d_1243.dc.transpose.4"(#loc1143))
#loc1472 = loc("ultralytics.nn.modules.conv.RepConv::cv1"(#loc1146))
#loc1473 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc1146))
#loc1474 = loc("add_1306"(#loc1146))
#loc1475 = loc("conv2d_1307.dc.transpose.0"(#loc1147))
#loc1476 = loc("conv2d_1307.dc.transpose.1"(#loc1147))
#loc1477 = loc("conv2d_1307.dc.conv2d.2"(#loc1147))
#loc1478 = loc("conv2d_1307.dc.transpose.3"(#loc1147))
#loc1479 = loc("conv2d_1307.dc.transpose.4"(#loc1147))
#loc1480 = loc("conv2d_1324.dc.transpose.0"(#loc1150))
#loc1481 = loc("conv2d_1324.dc.transpose.1"(#loc1150))
#loc1482 = loc("conv2d_1324.dc.conv2d.2"(#loc1150))
#loc1483 = loc("conv2d_1324.dc.transpose.3"(#loc1150))
#loc1484 = loc("conv2d_1324.dc.transpose.4"(#loc1150))
#loc1485 = loc("conv2d_1356.dc.transpose.0"(#loc1158))
#loc1486 = loc("conv2d_1356.dc.transpose.1"(#loc1158))
#loc1487 = loc("conv2d_1356.dc.conv2d.2"(#loc1158))
#loc1488 = loc("conv2d_1356.dc.transpose.3"(#loc1158))
#loc1489 = loc("conv2d_1356.dc.transpose.4"(#loc1158))
#loc1490 = loc("ultralytics.nn.modules.conv.RepConv::cv1"(#loc1161))
#loc1491 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc1161))
#loc1492 = loc("add_1419"(#loc1161))
#loc1493 = loc("conv2d_1420.dc.transpose.0"(#loc1162))
#loc1494 = loc("conv2d_1420.dc.transpose.1"(#loc1162))
#loc1495 = loc("conv2d_1420.dc.conv2d.2"(#loc1162))
#loc1496 = loc("conv2d_1420.dc.transpose.3"(#loc1162))
#loc1497 = loc("conv2d_1420.dc.transpose.4"(#loc1162))
#loc1498 = loc("conv2d_1437.dc.transpose.0"(#loc1165))
#loc1499 = loc("conv2d_1437.dc.transpose.1"(#loc1165))
#loc1500 = loc("conv2d_1437.dc.conv2d.2"(#loc1165))
#loc1501 = loc("conv2d_1437.dc.transpose.3"(#loc1165))
#loc1502 = loc("conv2d_1437.dc.transpose.4"(#loc1165))
#loc1503 = loc("conv2d_1506.dc.transpose.0"(#loc1173))
#loc1504 = loc("conv2d_1506.dc.transpose.1"(#loc1173))
#loc1505 = loc("conv2d_1506.dc.conv2d.2"(#loc1173))
#loc1506 = loc("conv2d_1506.dc.transpose.3"(#loc1173))
#loc1507 = loc("conv2d_1506.dc.transpose.4"(#loc1173))
#loc1508 = loc("ultralytics.nn.modules.conv.RepConv::cv1"(#loc1176))
#loc1509 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc1176))
#loc1510 = loc("add_1569"(#loc1176))
#loc1511 = loc("conv2d_1570.dc.transpose.0"(#loc1177))
#loc1512 = loc("conv2d_1570.dc.transpose.1"(#loc1177))
#loc1513 = loc("conv2d_1570.dc.conv2d.2"(#loc1177))
#loc1514 = loc("conv2d_1570.dc.transpose.3"(#loc1177))
#loc1515 = loc("conv2d_1570.dc.transpose.4"(#loc1177))
#loc1516 = loc("conv2d_1587.dc.transpose.0"(#loc1180))
#loc1517 = loc("conv2d_1587.dc.transpose.1"(#loc1180))
#loc1518 = loc("conv2d_1587.dc.conv2d.2"(#loc1180))
#loc1519 = loc("conv2d_1587.dc.transpose.3"(#loc1180))
#loc1520 = loc("conv2d_1587.dc.transpose.4"(#loc1180))
#loc1521 = loc("conv2d_1619.dc.transpose.0"(#loc1188))
#loc1522 = loc("conv2d_1619.dc.transpose.1"(#loc1188))
#loc1523 = loc("conv2d_1619.dc.conv2d.2"(#loc1188))
#loc1524 = loc("conv2d_1619.dc.transpose.3"(#loc1188))
#loc1525 = loc("conv2d_1619.dc.transpose.4"(#loc1188))
#loc1526 = loc("ultralytics.nn.modules.conv.RepConv::cv1"(#loc1191))
#loc1527 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc1191))
#loc1528 = loc("add_1682"(#loc1191))
#loc1529 = loc("conv2d_1683.dc.transpose.0"(#loc1192))
#loc1530 = loc("conv2d_1683.dc.transpose.1"(#loc1192))
#loc1531 = loc("conv2d_1683.dc.conv2d.2"(#loc1192))
#loc1532 = loc("conv2d_1683.dc.transpose.3"(#loc1192))
#loc1533 = loc("conv2d_1683.dc.transpose.4"(#loc1192))
#loc1534 = loc("conv2d_1700.dc.transpose.0"(#loc1195))
#loc1535 = loc("conv2d_1700.dc.transpose.1"(#loc1195))
#loc1536 = loc("conv2d_1700.dc.conv2d.2"(#loc1195))
#loc1537 = loc("conv2d_1700.dc.transpose.3"(#loc1195))
#loc1538 = loc("conv2d_1700.dc.transpose.4"(#loc1195))
#loc1539 = loc("conv2d_1879.dc.transpose.0"(#loc1223))
#loc1540 = loc("conv2d_1879.dc.transpose.1"(#loc1223))
#loc1541 = loc("conv2d_1879.dc.conv2d.2"(#loc1223))
#loc1542 = loc("conv2d_1879.dc.transpose.3"(#loc1223))
#loc1543 = loc("conv2d_1879.dc.transpose.4"(#loc1223))
#loc1544 = loc("ultralytics.nn.modules.conv.RepConv::cv1"(#loc1226))
#loc1545 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc1226))
#loc1546 = loc("add_1942"(#loc1226))
#loc1547 = loc("conv2d_1943.dc.transpose.0"(#loc1227))
#loc1548 = loc("conv2d_1943.dc.transpose.1"(#loc1227))
#loc1549 = loc("conv2d_1943.dc.conv2d.2"(#loc1227))
#loc1550 = loc("conv2d_1943.dc.transpose.3"(#loc1227))
#loc1551 = loc("conv2d_1943.dc.transpose.4"(#loc1227))
#loc1552 = loc("conv2d_1960.dc.transpose.0"(#loc1230))
#loc1553 = loc("conv2d_1960.dc.transpose.1"(#loc1230))
#loc1554 = loc("conv2d_1960.dc.conv2d.2"(#loc1230))
#loc1555 = loc("conv2d_1960.dc.transpose.3"(#loc1230))
#loc1556 = loc("conv2d_1960.dc.transpose.4"(#loc1230))
#loc1557 = loc("conv2d_1992.dc.transpose.0"(#loc1238))
#loc1558 = loc("conv2d_1992.dc.transpose.1"(#loc1238))
#loc1559 = loc("conv2d_1992.dc.conv2d.2"(#loc1238))
#loc1560 = loc("conv2d_1992.dc.transpose.3"(#loc1238))
#loc1561 = loc("conv2d_1992.dc.transpose.4"(#loc1238))
#loc1562 = loc("ultralytics.nn.modules.conv.RepConv::cv1"(#loc1241))
#loc1563 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc1241))
#loc1564 = loc("add_2055"(#loc1241))
#loc1565 = loc("conv2d_2056.dc.transpose.0"(#loc1242))
#loc1566 = loc("conv2d_2056.dc.transpose.1"(#loc1242))
#loc1567 = loc("conv2d_2056.dc.conv2d.2"(#loc1242))
#loc1568 = loc("conv2d_2056.dc.transpose.3"(#loc1242))
#loc1569 = loc("conv2d_2056.dc.transpose.4"(#loc1242))
#loc1570 = loc("conv2d_2073.dc.transpose.0"(#loc1245))
#loc1571 = loc("conv2d_2073.dc.transpose.1"(#loc1245))
#loc1572 = loc("conv2d_2073.dc.conv2d.2"(#loc1245))
#loc1573 = loc("conv2d_2073.dc.transpose.3"(#loc1245))
#loc1574 = loc("conv2d_2073.dc.transpose.4"(#loc1245))
#loc1575 = loc("conv2d_2252.dc.transpose.0"(#loc1273))
#loc1576 = loc("conv2d_2252.dc.transpose.1"(#loc1273))
#loc1577 = loc("conv2d_2252.dc.conv2d.2"(#loc1273))
#loc1578 = loc("conv2d_2252.dc.transpose.3"(#loc1273))
#loc1579 = loc("conv2d_2252.dc.transpose.4"(#loc1273))
#loc1580 = loc("ultralytics.nn.modules.conv.RepConv::cv1"(#loc1276))
#loc1581 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc1276))
#loc1582 = loc("add_2315"(#loc1276))
#loc1583 = loc("conv2d_2316.dc.transpose.0"(#loc1277))
#loc1584 = loc("conv2d_2316.dc.transpose.1"(#loc1277))
#loc1585 = loc("conv2d_2316.dc.conv2d.2"(#loc1277))
#loc1586 = loc("conv2d_2316.dc.transpose.3"(#loc1277))
#loc1587 = loc("conv2d_2316.dc.transpose.4"(#loc1277))
#loc1588 = loc("conv2d_2333.dc.transpose.0"(#loc1280))
#loc1589 = loc("conv2d_2333.dc.transpose.1"(#loc1280))
#loc1590 = loc("conv2d_2333.dc.conv2d.2"(#loc1280))
#loc1591 = loc("conv2d_2333.dc.transpose.3"(#loc1280))
#loc1592 = loc("conv2d_2333.dc.transpose.4"(#loc1280))
#loc1593 = loc("conv2d_2365.dc.transpose.0"(#loc1288))
#loc1594 = loc("conv2d_2365.dc.transpose.1"(#loc1288))
#loc1595 = loc("conv2d_2365.dc.conv2d.2"(#loc1288))
#loc1596 = loc("conv2d_2365.dc.transpose.3"(#loc1288))
#loc1597 = loc("conv2d_2365.dc.transpose.4"(#loc1288))
#loc1598 = loc("ultralytics.nn.modules.conv.RepConv::cv1"(#loc1291))
#loc1599 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc1291))
#loc1600 = loc("add_2428"(#loc1291))
#loc1601 = loc("conv2d_2429.dc.transpose.0"(#loc1292))
#loc1602 = loc("conv2d_2429.dc.transpose.1"(#loc1292))
#loc1603 = loc("conv2d_2429.dc.conv2d.2"(#loc1292))
#loc1604 = loc("conv2d_2429.dc.transpose.3"(#loc1292))
#loc1605 = loc("conv2d_2429.dc.transpose.4"(#loc1292))
#loc1606 = loc("conv2d_2446.dc.transpose.0"(#loc1295))
#loc1607 = loc("conv2d_2446.dc.transpose.1"(#loc1295))
#loc1608 = loc("conv2d_2446.dc.conv2d.2"(#loc1295))
#loc1609 = loc("conv2d_2446.dc.transpose.3"(#loc1295))
#loc1610 = loc("conv2d_2446.dc.transpose.4"(#loc1295))
#loc1611 = loc("ultralytics.nn.modules.conv.Conv::conv1"(#loc1328))
#loc1612 = loc("ultralytics.nn.modules.conv.Conv::conv2"(#loc1328))
#loc1613 = loc("add_94"(#loc1328))
#loc1614 = loc("torch.nn.modules.activation.SiLU::"(#loc1328))
#loc1615 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1329))
#loc1616 = loc("sigmoid_111"(#loc1329))
#loc1617 = loc("multiply_112"(#loc1329))
#loc1618 = loc("ultralytics.nn.modules.conv.Conv::conv1"(#loc1346))
#loc1619 = loc("ultralytics.nn.modules.conv.Conv::conv2"(#loc1346))
#loc1620 = loc("add_207"(#loc1346))
#loc1621 = loc("sigmoid_208"(#loc1346))
#loc1622 = loc("multiply_209"(#loc1346))
#loc1623 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1347))
#loc1624 = loc("sigmoid_224"(#loc1347))
#loc1625 = loc("multiply_225"(#loc1347))
#loc1626 = loc("ultralytics.nn.modules.conv.Conv::conv1"(#loc1364))
#loc1627 = loc("ultralytics.nn.modules.conv.Conv::conv2"(#loc1364))
#loc1628 = loc("add_392"(#loc1364))
#loc1629 = loc("sigmoid_393"(#loc1364))
#loc1630 = loc("multiply_394"(#loc1364))
#loc1631 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1365))
#loc1632 = loc("sigmoid_409"(#loc1365))
#loc1633 = loc("multiply_410"(#loc1365))
#loc1634 = loc("ultralytics.nn.modules.conv.Conv::conv1"(#loc1382))
#loc1635 = loc("ultralytics.nn.modules.conv.Conv::conv2"(#loc1382))
#loc1636 = loc("add_505"(#loc1382))
#loc1637 = loc("sigmoid_506"(#loc1382))
#loc1638 = loc("multiply_507"(#loc1382))
#loc1639 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1383))
#loc1640 = loc("sigmoid_522"(#loc1383))
#loc1641 = loc("multiply_523"(#loc1383))
#loc1642 = loc("ultralytics.nn.modules.conv.Conv::conv1"(#loc1400))
#loc1643 = loc("ultralytics.nn.modules.conv.Conv::conv2"(#loc1400))
#loc1644 = loc("add_690"(#loc1400))
#loc1645 = loc("sigmoid_691"(#loc1400))
#loc1646 = loc("multiply_692"(#loc1400))
#loc1647 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1401))
#loc1648 = loc("sigmoid_707"(#loc1401))
#loc1649 = loc("multiply_708"(#loc1401))
#loc1650 = loc("ultralytics.nn.modules.conv.Conv::conv1"(#loc1418))
#loc1651 = loc("ultralytics.nn.modules.conv.Conv::conv2"(#loc1418))
#loc1652 = loc("add_803"(#loc1418))
#loc1653 = loc("sigmoid_804"(#loc1418))
#loc1654 = loc("multiply_805"(#loc1418))
#loc1655 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1419))
#loc1656 = loc("sigmoid_820"(#loc1419))
#loc1657 = loc("multiply_821"(#loc1419))
#loc1658 = loc("ultralytics.nn.modules.conv.Conv::conv1"(#loc1436))
#loc1659 = loc("ultralytics.nn.modules.conv.Conv::conv2"(#loc1436))
#loc1660 = loc("add_988"(#loc1436))
#loc1661 = loc("sigmoid_989"(#loc1436))
#loc1662 = loc("multiply_990"(#loc1436))
#loc1663 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1437))
#loc1664 = loc("sigmoid_1005"(#loc1437))
#loc1665 = loc("multiply_1006"(#loc1437))
#loc1666 = loc("ultralytics.nn.modules.conv.Conv::conv1"(#loc1454))
#loc1667 = loc("ultralytics.nn.modules.conv.Conv::conv2"(#loc1454))
#loc1668 = loc("add_1101"(#loc1454))
#loc1669 = loc("sigmoid_1102"(#loc1454))
#loc1670 = loc("multiply_1103"(#loc1454))
#loc1671 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1455))
#loc1672 = loc("sigmoid_1118"(#loc1455))
#loc1673 = loc("multiply_1119"(#loc1455))
#loc1674 = loc("ultralytics.nn.modules.conv.Conv::conv1"(#loc1472))
#loc1675 = loc("ultralytics.nn.modules.conv.Conv::conv2"(#loc1472))
#loc1676 = loc("add_1287"(#loc1472))
#loc1677 = loc("sigmoid_1288"(#loc1472))
#loc1678 = loc("multiply_1289"(#loc1472))
#loc1679 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1473))
#loc1680 = loc("sigmoid_1304"(#loc1473))
#loc1681 = loc("multiply_1305"(#loc1473))
#loc1682 = loc("ultralytics.nn.modules.conv.Conv::conv1"(#loc1490))
#loc1683 = loc("ultralytics.nn.modules.conv.Conv::conv2"(#loc1490))
#loc1684 = loc("add_1400"(#loc1490))
#loc1685 = loc("sigmoid_1401"(#loc1490))
#loc1686 = loc("multiply_1402"(#loc1490))
#loc1687 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1491))
#loc1688 = loc("sigmoid_1417"(#loc1491))
#loc1689 = loc("multiply_1418"(#loc1491))
#loc1690 = loc("ultralytics.nn.modules.conv.Conv::conv1"(#loc1508))
#loc1691 = loc("ultralytics.nn.modules.conv.Conv::conv2"(#loc1508))
#loc1692 = loc("add_1550"(#loc1508))
#loc1693 = loc("sigmoid_1551"(#loc1508))
#loc1694 = loc("multiply_1552"(#loc1508))
#loc1695 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1509))
#loc1696 = loc("sigmoid_1567"(#loc1509))
#loc1697 = loc("multiply_1568"(#loc1509))
#loc1698 = loc("ultralytics.nn.modules.conv.Conv::conv1"(#loc1526))
#loc1699 = loc("ultralytics.nn.modules.conv.Conv::conv2"(#loc1526))
#loc1700 = loc("add_1663"(#loc1526))
#loc1701 = loc("sigmoid_1664"(#loc1526))
#loc1702 = loc("multiply_1665"(#loc1526))
#loc1703 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1527))
#loc1704 = loc("sigmoid_1680"(#loc1527))
#loc1705 = loc("multiply_1681"(#loc1527))
#loc1706 = loc("ultralytics.nn.modules.conv.Conv::conv1"(#loc1544))
#loc1707 = loc("ultralytics.nn.modules.conv.Conv::conv2"(#loc1544))
#loc1708 = loc("add_1923"(#loc1544))
#loc1709 = loc("sigmoid_1924"(#loc1544))
#loc1710 = loc("multiply_1925"(#loc1544))
#loc1711 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1545))
#loc1712 = loc("sigmoid_1940"(#loc1545))
#loc1713 = loc("multiply_1941"(#loc1545))
#loc1714 = loc("ultralytics.nn.modules.conv.Conv::conv1"(#loc1562))
#loc1715 = loc("ultralytics.nn.modules.conv.Conv::conv2"(#loc1562))
#loc1716 = loc("add_2036"(#loc1562))
#loc1717 = loc("sigmoid_2037"(#loc1562))
#loc1718 = loc("multiply_2038"(#loc1562))
#loc1719 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1563))
#loc1720 = loc("sigmoid_2053"(#loc1563))
#loc1721 = loc("multiply_2054"(#loc1563))
#loc1722 = loc("ultralytics.nn.modules.conv.Conv::conv1"(#loc1580))
#loc1723 = loc("ultralytics.nn.modules.conv.Conv::conv2"(#loc1580))
#loc1724 = loc("add_2296"(#loc1580))
#loc1725 = loc("sigmoid_2297"(#loc1580))
#loc1726 = loc("multiply_2298"(#loc1580))
#loc1727 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1581))
#loc1728 = loc("sigmoid_2313"(#loc1581))
#loc1729 = loc("multiply_2314"(#loc1581))
#loc1730 = loc("ultralytics.nn.modules.conv.Conv::conv1"(#loc1598))
#loc1731 = loc("ultralytics.nn.modules.conv.Conv::conv2"(#loc1598))
#loc1732 = loc("add_2409"(#loc1598))
#loc1733 = loc("sigmoid_2410"(#loc1598))
#loc1734 = loc("multiply_2411"(#loc1598))
#loc1735 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1599))
#loc1736 = loc("sigmoid_2426"(#loc1599))
#loc1737 = loc("multiply_2427"(#loc1599))
#loc1738 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1611))
#loc1739 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1612))
#loc1740 = loc("sigmoid_95"(#loc1614))
#loc1741 = loc("multiply_96"(#loc1614))
#loc1742 = loc("conv2d_97.dc.transpose.0"(#loc1615))
#loc1743 = loc("conv2d_97.dc.transpose.1"(#loc1615))
#loc1744 = loc("conv2d_97.dc.conv2d.2"(#loc1615))
#loc1745 = loc("conv2d_97.dc.transpose.3"(#loc1615))
#loc1746 = loc("conv2d_97.dc.transpose.4"(#loc1615))
#loc1747 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1618))
#loc1748 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1619))
#loc1749 = loc("conv2d_210.dc.transpose.0"(#loc1623))
#loc1750 = loc("conv2d_210.dc.transpose.1"(#loc1623))
#loc1751 = loc("conv2d_210.dc.conv2d.2"(#loc1623))
#loc1752 = loc("conv2d_210.dc.transpose.3"(#loc1623))
#loc1753 = loc("conv2d_210.dc.transpose.4"(#loc1623))
#loc1754 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1626))
#loc1755 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1627))
#loc1756 = loc("conv2d_395.dc.transpose.0"(#loc1631))
#loc1757 = loc("conv2d_395.dc.transpose.1"(#loc1631))
#loc1758 = loc("conv2d_395.dc.conv2d.2"(#loc1631))
#loc1759 = loc("conv2d_395.dc.transpose.3"(#loc1631))
#loc1760 = loc("conv2d_395.dc.transpose.4"(#loc1631))
#loc1761 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1634))
#loc1762 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1635))
#loc1763 = loc("conv2d_508.dc.transpose.0"(#loc1639))
#loc1764 = loc("conv2d_508.dc.transpose.1"(#loc1639))
#loc1765 = loc("conv2d_508.dc.conv2d.2"(#loc1639))
#loc1766 = loc("conv2d_508.dc.transpose.3"(#loc1639))
#loc1767 = loc("conv2d_508.dc.transpose.4"(#loc1639))
#loc1768 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1642))
#loc1769 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1643))
#loc1770 = loc("conv2d_693.dc.transpose.0"(#loc1647))
#loc1771 = loc("conv2d_693.dc.transpose.1"(#loc1647))
#loc1772 = loc("conv2d_693.dc.conv2d.2"(#loc1647))
#loc1773 = loc("conv2d_693.dc.transpose.3"(#loc1647))
#loc1774 = loc("conv2d_693.dc.transpose.4"(#loc1647))
#loc1775 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1650))
#loc1776 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1651))
#loc1777 = loc("conv2d_806.dc.transpose.0"(#loc1655))
#loc1778 = loc("conv2d_806.dc.transpose.1"(#loc1655))
#loc1779 = loc("conv2d_806.dc.conv2d.2"(#loc1655))
#loc1780 = loc("conv2d_806.dc.transpose.3"(#loc1655))
#loc1781 = loc("conv2d_806.dc.transpose.4"(#loc1655))
#loc1782 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1658))
#loc1783 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1659))
#loc1784 = loc("conv2d_991.dc.transpose.0"(#loc1663))
#loc1785 = loc("conv2d_991.dc.transpose.1"(#loc1663))
#loc1786 = loc("conv2d_991.dc.conv2d.2"(#loc1663))
#loc1787 = loc("conv2d_991.dc.transpose.3"(#loc1663))
#loc1788 = loc("conv2d_991.dc.transpose.4"(#loc1663))
#loc1789 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1666))
#loc1790 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1667))
#loc1791 = loc("conv2d_1104.dc.transpose.0"(#loc1671))
#loc1792 = loc("conv2d_1104.dc.transpose.1"(#loc1671))
#loc1793 = loc("conv2d_1104.dc.conv2d.2"(#loc1671))
#loc1794 = loc("conv2d_1104.dc.transpose.3"(#loc1671))
#loc1795 = loc("conv2d_1104.dc.transpose.4"(#loc1671))
#loc1796 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1674))
#loc1797 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1675))
#loc1798 = loc("conv2d_1290.dc.transpose.0"(#loc1679))
#loc1799 = loc("conv2d_1290.dc.transpose.1"(#loc1679))
#loc1800 = loc("conv2d_1290.dc.conv2d.2"(#loc1679))
#loc1801 = loc("conv2d_1290.dc.transpose.3"(#loc1679))
#loc1802 = loc("conv2d_1290.dc.transpose.4"(#loc1679))
#loc1803 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1682))
#loc1804 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1683))
#loc1805 = loc("conv2d_1403.dc.transpose.0"(#loc1687))
#loc1806 = loc("conv2d_1403.dc.transpose.1"(#loc1687))
#loc1807 = loc("conv2d_1403.dc.conv2d.2"(#loc1687))
#loc1808 = loc("conv2d_1403.dc.transpose.3"(#loc1687))
#loc1809 = loc("conv2d_1403.dc.transpose.4"(#loc1687))
#loc1810 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1690))
#loc1811 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1691))
#loc1812 = loc("conv2d_1553.dc.transpose.0"(#loc1695))
#loc1813 = loc("conv2d_1553.dc.transpose.1"(#loc1695))
#loc1814 = loc("conv2d_1553.dc.conv2d.2"(#loc1695))
#loc1815 = loc("conv2d_1553.dc.transpose.3"(#loc1695))
#loc1816 = loc("conv2d_1553.dc.transpose.4"(#loc1695))
#loc1817 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1698))
#loc1818 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1699))
#loc1819 = loc("conv2d_1666.dc.transpose.0"(#loc1703))
#loc1820 = loc("conv2d_1666.dc.transpose.1"(#loc1703))
#loc1821 = loc("conv2d_1666.dc.conv2d.2"(#loc1703))
#loc1822 = loc("conv2d_1666.dc.transpose.3"(#loc1703))
#loc1823 = loc("conv2d_1666.dc.transpose.4"(#loc1703))
#loc1824 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1706))
#loc1825 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1707))
#loc1826 = loc("conv2d_1926.dc.transpose.0"(#loc1711))
#loc1827 = loc("conv2d_1926.dc.transpose.1"(#loc1711))
#loc1828 = loc("conv2d_1926.dc.conv2d.2"(#loc1711))
#loc1829 = loc("conv2d_1926.dc.transpose.3"(#loc1711))
#loc1830 = loc("conv2d_1926.dc.transpose.4"(#loc1711))
#loc1831 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1714))
#loc1832 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1715))
#loc1833 = loc("conv2d_2039.dc.transpose.0"(#loc1719))
#loc1834 = loc("conv2d_2039.dc.transpose.1"(#loc1719))
#loc1835 = loc("conv2d_2039.dc.conv2d.2"(#loc1719))
#loc1836 = loc("conv2d_2039.dc.transpose.3"(#loc1719))
#loc1837 = loc("conv2d_2039.dc.transpose.4"(#loc1719))
#loc1838 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1722))
#loc1839 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1723))
#loc1840 = loc("conv2d_2299.dc.transpose.0"(#loc1727))
#loc1841 = loc("conv2d_2299.dc.transpose.1"(#loc1727))
#loc1842 = loc("conv2d_2299.dc.conv2d.2"(#loc1727))
#loc1843 = loc("conv2d_2299.dc.transpose.3"(#loc1727))
#loc1844 = loc("conv2d_2299.dc.transpose.4"(#loc1727))
#loc1845 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1730))
#loc1846 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc1731))
#loc1847 = loc("conv2d_2412.dc.transpose.0"(#loc1735))
#loc1848 = loc("conv2d_2412.dc.transpose.1"(#loc1735))
#loc1849 = loc("conv2d_2412.dc.conv2d.2"(#loc1735))
#loc1850 = loc("conv2d_2412.dc.transpose.3"(#loc1735))
#loc1851 = loc("conv2d_2412.dc.transpose.4"(#loc1735))
#loc1852 = loc("conv2d_66.dc.transpose.0"(#loc1738))
#loc1853 = loc("conv2d_66.dc.transpose.1"(#loc1738))
#loc1854 = loc("conv2d_66.dc.conv2d.2"(#loc1738))
#loc1855 = loc("conv2d_66.dc.transpose.3"(#loc1738))
#loc1856 = loc("conv2d_66.dc.transpose.4"(#loc1738))
#loc1857 = loc("conv2d_80.dc.transpose.0"(#loc1739))
#loc1858 = loc("conv2d_80.dc.transpose.1"(#loc1739))
#loc1859 = loc("conv2d_80.dc.conv2d.2"(#loc1739))
#loc1860 = loc("conv2d_80.dc.transpose.3"(#loc1739))
#loc1861 = loc("conv2d_80.dc.transpose.4"(#loc1739))
#loc1862 = loc("conv2d_179.dc.transpose.0"(#loc1747))
#loc1863 = loc("conv2d_179.dc.transpose.1"(#loc1747))
#loc1864 = loc("conv2d_179.dc.conv2d.2"(#loc1747))
#loc1865 = loc("conv2d_179.dc.transpose.3"(#loc1747))
#loc1866 = loc("conv2d_179.dc.transpose.4"(#loc1747))
#loc1867 = loc("conv2d_193.dc.transpose.0"(#loc1748))
#loc1868 = loc("conv2d_193.dc.transpose.1"(#loc1748))
#loc1869 = loc("conv2d_193.dc.conv2d.2"(#loc1748))
#loc1870 = loc("conv2d_193.dc.transpose.3"(#loc1748))
#loc1871 = loc("conv2d_193.dc.transpose.4"(#loc1748))
#loc1872 = loc("conv2d_364.dc.transpose.0"(#loc1754))
#loc1873 = loc("conv2d_364.dc.transpose.1"(#loc1754))
#loc1874 = loc("conv2d_364.dc.conv2d.2"(#loc1754))
#loc1875 = loc("conv2d_364.dc.transpose.3"(#loc1754))
#loc1876 = loc("conv2d_364.dc.transpose.4"(#loc1754))
#loc1877 = loc("conv2d_378.dc.transpose.0"(#loc1755))
#loc1878 = loc("conv2d_378.dc.transpose.1"(#loc1755))
#loc1879 = loc("conv2d_378.dc.conv2d.2"(#loc1755))
#loc1880 = loc("conv2d_378.dc.transpose.3"(#loc1755))
#loc1881 = loc("conv2d_378.dc.transpose.4"(#loc1755))
#loc1882 = loc("conv2d_477.dc.transpose.0"(#loc1761))
#loc1883 = loc("conv2d_477.dc.transpose.1"(#loc1761))
#loc1884 = loc("conv2d_477.dc.conv2d.2"(#loc1761))
#loc1885 = loc("conv2d_477.dc.transpose.3"(#loc1761))
#loc1886 = loc("conv2d_477.dc.transpose.4"(#loc1761))
#loc1887 = loc("conv2d_491.dc.transpose.0"(#loc1762))
#loc1888 = loc("conv2d_491.dc.transpose.1"(#loc1762))
#loc1889 = loc("conv2d_491.dc.conv2d.2"(#loc1762))
#loc1890 = loc("conv2d_491.dc.transpose.3"(#loc1762))
#loc1891 = loc("conv2d_491.dc.transpose.4"(#loc1762))
#loc1892 = loc("conv2d_662.dc.transpose.0"(#loc1768))
#loc1893 = loc("conv2d_662.dc.transpose.1"(#loc1768))
#loc1894 = loc("conv2d_662.dc.conv2d.2"(#loc1768))
#loc1895 = loc("conv2d_662.dc.transpose.3"(#loc1768))
#loc1896 = loc("conv2d_662.dc.transpose.4"(#loc1768))
#loc1897 = loc("conv2d_676.dc.transpose.0"(#loc1769))
#loc1898 = loc("conv2d_676.dc.transpose.1"(#loc1769))
#loc1899 = loc("conv2d_676.dc.conv2d.2"(#loc1769))
#loc1900 = loc("conv2d_676.dc.transpose.3"(#loc1769))
#loc1901 = loc("conv2d_676.dc.transpose.4"(#loc1769))
#loc1902 = loc("conv2d_775.dc.transpose.0"(#loc1775))
#loc1903 = loc("conv2d_775.dc.transpose.1"(#loc1775))
#loc1904 = loc("conv2d_775.dc.conv2d.2"(#loc1775))
#loc1905 = loc("conv2d_775.dc.transpose.3"(#loc1775))
#loc1906 = loc("conv2d_775.dc.transpose.4"(#loc1775))
#loc1907 = loc("conv2d_789.dc.transpose.0"(#loc1776))
#loc1908 = loc("conv2d_789.dc.transpose.1"(#loc1776))
#loc1909 = loc("conv2d_789.dc.conv2d.2"(#loc1776))
#loc1910 = loc("conv2d_789.dc.transpose.3"(#loc1776))
#loc1911 = loc("conv2d_789.dc.transpose.4"(#loc1776))
#loc1912 = loc("conv2d_960.dc.transpose.0"(#loc1782))
#loc1913 = loc("conv2d_960.dc.transpose.1"(#loc1782))
#loc1914 = loc("conv2d_960.dc.conv2d.2"(#loc1782))
#loc1915 = loc("conv2d_960.dc.transpose.3"(#loc1782))
#loc1916 = loc("conv2d_960.dc.transpose.4"(#loc1782))
#loc1917 = loc("conv2d_974.dc.transpose.0"(#loc1783))
#loc1918 = loc("conv2d_974.dc.transpose.1"(#loc1783))
#loc1919 = loc("conv2d_974.dc.conv2d.2"(#loc1783))
#loc1920 = loc("conv2d_974.dc.transpose.3"(#loc1783))
#loc1921 = loc("conv2d_974.dc.transpose.4"(#loc1783))
#loc1922 = loc("conv2d_1073.dc.transpose.0"(#loc1789))
#loc1923 = loc("conv2d_1073.dc.transpose.1"(#loc1789))
#loc1924 = loc("conv2d_1073.dc.conv2d.2"(#loc1789))
#loc1925 = loc("conv2d_1073.dc.transpose.3"(#loc1789))
#loc1926 = loc("conv2d_1073.dc.transpose.4"(#loc1789))
#loc1927 = loc("conv2d_1087.dc.transpose.0"(#loc1790))
#loc1928 = loc("conv2d_1087.dc.transpose.1"(#loc1790))
#loc1929 = loc("conv2d_1087.dc.conv2d.2"(#loc1790))
#loc1930 = loc("conv2d_1087.dc.transpose.3"(#loc1790))
#loc1931 = loc("conv2d_1087.dc.transpose.4"(#loc1790))
#loc1932 = loc("conv2d_1259.dc.transpose.0"(#loc1796))
#loc1933 = loc("conv2d_1259.dc.transpose.1"(#loc1796))
#loc1934 = loc("conv2d_1259.dc.conv2d.2"(#loc1796))
#loc1935 = loc("conv2d_1259.dc.transpose.3"(#loc1796))
#loc1936 = loc("conv2d_1259.dc.transpose.4"(#loc1796))
#loc1937 = loc("conv2d_1273.dc.transpose.0"(#loc1797))
#loc1938 = loc("conv2d_1273.dc.transpose.1"(#loc1797))
#loc1939 = loc("conv2d_1273.dc.conv2d.2"(#loc1797))
#loc1940 = loc("conv2d_1273.dc.transpose.3"(#loc1797))
#loc1941 = loc("conv2d_1273.dc.transpose.4"(#loc1797))
#loc1942 = loc("conv2d_1372.dc.transpose.0"(#loc1803))
#loc1943 = loc("conv2d_1372.dc.transpose.1"(#loc1803))
#loc1944 = loc("conv2d_1372.dc.conv2d.2"(#loc1803))
#loc1945 = loc("conv2d_1372.dc.transpose.3"(#loc1803))
#loc1946 = loc("conv2d_1372.dc.transpose.4"(#loc1803))
#loc1947 = loc("conv2d_1386.dc.transpose.0"(#loc1804))
#loc1948 = loc("conv2d_1386.dc.transpose.1"(#loc1804))
#loc1949 = loc("conv2d_1386.dc.conv2d.2"(#loc1804))
#loc1950 = loc("conv2d_1386.dc.transpose.3"(#loc1804))
#loc1951 = loc("conv2d_1386.dc.transpose.4"(#loc1804))
#loc1952 = loc("conv2d_1522.dc.transpose.0"(#loc1810))
#loc1953 = loc("conv2d_1522.dc.transpose.1"(#loc1810))
#loc1954 = loc("conv2d_1522.dc.conv2d.2"(#loc1810))
#loc1955 = loc("conv2d_1522.dc.transpose.3"(#loc1810))
#loc1956 = loc("conv2d_1522.dc.transpose.4"(#loc1810))
#loc1957 = loc("conv2d_1536.dc.transpose.0"(#loc1811))
#loc1958 = loc("conv2d_1536.dc.transpose.1"(#loc1811))
#loc1959 = loc("conv2d_1536.dc.conv2d.2"(#loc1811))
#loc1960 = loc("conv2d_1536.dc.transpose.3"(#loc1811))
#loc1961 = loc("conv2d_1536.dc.transpose.4"(#loc1811))
#loc1962 = loc("conv2d_1635.dc.transpose.0"(#loc1817))
#loc1963 = loc("conv2d_1635.dc.transpose.1"(#loc1817))
#loc1964 = loc("conv2d_1635.dc.conv2d.2"(#loc1817))
#loc1965 = loc("conv2d_1635.dc.transpose.3"(#loc1817))
#loc1966 = loc("conv2d_1635.dc.transpose.4"(#loc1817))
#loc1967 = loc("conv2d_1649.dc.transpose.0"(#loc1818))
#loc1968 = loc("conv2d_1649.dc.transpose.1"(#loc1818))
#loc1969 = loc("conv2d_1649.dc.conv2d.2"(#loc1818))
#loc1970 = loc("conv2d_1649.dc.transpose.3"(#loc1818))
#loc1971 = loc("conv2d_1649.dc.transpose.4"(#loc1818))
#loc1972 = loc("conv2d_1895.dc.transpose.0"(#loc1824))
#loc1973 = loc("conv2d_1895.dc.transpose.1"(#loc1824))
#loc1974 = loc("conv2d_1895.dc.conv2d.2"(#loc1824))
#loc1975 = loc("conv2d_1895.dc.transpose.3"(#loc1824))
#loc1976 = loc("conv2d_1895.dc.transpose.4"(#loc1824))
#loc1977 = loc("conv2d_1909.dc.transpose.0"(#loc1825))
#loc1978 = loc("conv2d_1909.dc.transpose.1"(#loc1825))
#loc1979 = loc("conv2d_1909.dc.conv2d.2"(#loc1825))
#loc1980 = loc("conv2d_1909.dc.transpose.3"(#loc1825))
#loc1981 = loc("conv2d_1909.dc.transpose.4"(#loc1825))
#loc1982 = loc("conv2d_2008.dc.transpose.0"(#loc1831))
#loc1983 = loc("conv2d_2008.dc.transpose.1"(#loc1831))
#loc1984 = loc("conv2d_2008.dc.conv2d.2"(#loc1831))
#loc1985 = loc("conv2d_2008.dc.transpose.3"(#loc1831))
#loc1986 = loc("conv2d_2008.dc.transpose.4"(#loc1831))
#loc1987 = loc("conv2d_2022.dc.transpose.0"(#loc1832))
#loc1988 = loc("conv2d_2022.dc.transpose.1"(#loc1832))
#loc1989 = loc("conv2d_2022.dc.conv2d.2"(#loc1832))
#loc1990 = loc("conv2d_2022.dc.transpose.3"(#loc1832))
#loc1991 = loc("conv2d_2022.dc.transpose.4"(#loc1832))
#loc1992 = loc("conv2d_2268.dc.transpose.0"(#loc1838))
#loc1993 = loc("conv2d_2268.dc.transpose.1"(#loc1838))
#loc1994 = loc("conv2d_2268.dc.conv2d.2"(#loc1838))
#loc1995 = loc("conv2d_2268.dc.transpose.3"(#loc1838))
#loc1996 = loc("conv2d_2268.dc.transpose.4"(#loc1838))
#loc1997 = loc("conv2d_2282.dc.transpose.0"(#loc1839))
#loc1998 = loc("conv2d_2282.dc.transpose.1"(#loc1839))
#loc1999 = loc("conv2d_2282.dc.conv2d.2"(#loc1839))
#loc2000 = loc("conv2d_2282.dc.transpose.3"(#loc1839))
#loc2001 = loc("conv2d_2282.dc.transpose.4"(#loc1839))
#loc2002 = loc("conv2d_2381.dc.transpose.0"(#loc1845))
#loc2003 = loc("conv2d_2381.dc.transpose.1"(#loc1845))
#loc2004 = loc("conv2d_2381.dc.conv2d.2"(#loc1845))
#loc2005 = loc("conv2d_2381.dc.transpose.3"(#loc1845))
#loc2006 = loc("conv2d_2381.dc.transpose.4"(#loc1845))
#loc2007 = loc("conv2d_2395.dc.transpose.0"(#loc1846))
#loc2008 = loc("conv2d_2395.dc.transpose.1"(#loc1846))
#loc2009 = loc("conv2d_2395.dc.conv2d.2"(#loc1846))
#loc2010 = loc("conv2d_2395.dc.transpose.3"(#loc1846))
#loc2011 = loc("conv2d_2395.dc.transpose.4"(#loc1846))
