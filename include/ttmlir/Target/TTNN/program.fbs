include "Common/types.fbs";
include "Common/debug_info.fbs";

namespace tt.target.ttnn;

table OpenDeviceOp {
  mesh: Dim2d;
  chip_ids: [uint32];
  out: tt.target.DeviceRef;
}

table CloseDeviceOp {
  in0: tt.target.DeviceRef;
}

table ToMemoryConfigOp {
  in0: tt.target.TensorRef;
  out: tt.target.TensorRef;
}

table EmptyOp {
  device: tt.target.DeviceRef;
  out: tt.target.TensorRef;
}

table FullOp {
  device: tt.target.DeviceRef;
  fill_value: float;
  out: tt.target.TensorRef;
}

enum EltwiseOpType: uint32 {
  Add = 0,
  Multiply = 1,
  Subtract = 2,
  Relu = 3,
  GreaterEqual = 4,
}

table EltwiseOp {
  type: EltwiseOpType;
  ins: [tt.target.TensorRef];
  out: tt.target.TensorRef;
}

enum ReductionOpType: uint32 {
  Sum = 0,
  Mean = 1,
}

table ReductionOp {
  type: ReductionOpType;
  in: tt.target.TensorRef;
  out: tt.target.TensorRef;
  dim_arg: [int32];
  keep_dim: bool;
}

table SoftmaxOp {
  in: tt.target.TensorRef;
  out: tt.target.TensorRef;
  dimension: int32;
}

table TransposeOp {
  in: tt.target.TensorRef;
  out: tt.target.TensorRef;
  dim0: int32;
  dim1: int32;
}

table CoreSpec {
  x_start: int32;
  y_start: int32;
  x_size: int32;
  y_size: int32;
}

table CBConfig {
  core_spec: CoreSpec;
  total_size: int32;
  page_size: int32;
  // TODO(pjanevski): change data format to proper type
  data_format: int32;
  globally_allocated_address : int32;
}

table RuntimeArg {
  // TODO(pjanevksi): change to bool if possible
  ttnn_compute : int32;
  val: int32;
  tensor_glob_id : int32;
}

table DefineArgument {
  key : string;
  val : string;
}

table DataMovementConfig {
  processor: int32;
  noc: int32;
  compile_args : [int32];
  defines : [DefineArgument];
}

table DataMovementAttribute {
  core_spec: CoreSpec;
  kernel_path: string;
  data_movement_config: DataMovementConfig;
  runtime_args: [RuntimeArg];
}

table ComputeKernelConfig {
  math_fidelity: int32;
  fp32_dest : int32;
  preserve_fp32 : int32;
  math_approx_mode : int32;
  compile_args: [int32];
  defines : [DefineArgument];
}

table ComputeKernelAttribute {
  core_spec: CoreSpec;
  kernel_path: string;
  compute_kernel_config : ComputeKernelConfig;
  runtime_args : [RuntimeArg];
}

table GenericOp {
  ins: [tt.target.TensorRef];
  outs: [tt.target.TensorRef];
  compute_kernels: [ComputeKernelAttribute];
  data_movement_kernels: [DataMovementAttribute];
  cb_configs: [CBConfig];
}

// ANCHOR: adding_an_op_matmul_fbs
table MatmulOp {
  in0: tt.target.TensorRef;
  in1: tt.target.TensorRef;
  out: tt.target.TensorRef;
}
// ANCHOR_END: adding_an_op_matmul_fbs

union OpType {
  OpenDeviceOp,
  CloseDeviceOp,
  ToMemoryConfigOp,
  EmptyOp,
  FullOp,
  EltwiseOp,
  MatmulOp,
  ReductionOp,
  SoftmaxOp,
  TransposeOp,
  GenericOp
}

table Operation {
  type: OpType;
  debug_info: string;
}

table Program {
  name: string;
  inputs: [TensorRef];
  outputs: [TensorRef];
  operations: [Operation];
  debug_info: DebugInfo;
}
